// Code generated by protoc-gen-go-versioning. DO NOT EDIT.

package namespaceservice

import (
	versioning "github.com/temporalio/saas-proto/tools/versioning"
)

// Fix enums in CreateNamespaceRequest.
// Meant for incoming and outgoing response messages.
func (m *CreateNamespaceRequest) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'Spec'
	if err := m.GetSpec().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	return nil
}

// Fix enums in FailoverNamespaceRequest.
// Meant for incoming and outgoing response messages.
func (m *FailoverNamespaceRequest) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'TargetRegion'
	if err := m.GetTargetRegion().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	return nil
}

// Fix enums in FailoverRecord.
// Meant for incoming and outgoing response messages.
func (m *FailoverRecord) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'SourceRegion'
	if err := m.GetSourceRegion().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	// fix enums for field 'TargetRegion'
	if err := m.GetTargetRegion().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	return nil
}

// Fix enums in GetNamespaceResponse.
// Meant for incoming and outgoing response messages.
func (m *GetNamespaceResponse) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'Namespace'
	if err := m.GetNamespace().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	return nil
}

// Fix enums in GetNamespacesResponse.
// Meant for incoming and outgoing response messages.
func (m *GetNamespacesResponse) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'Namespaces'
	for i := range m.Namespaces {
		if err := m.Namespaces[i].FixEnums(overrides, requestVersion); err != nil {
			return err
		}
	}

	return nil
}

// Fix enums in GetReplicationStatusResponse.
// Meant for incoming and outgoing response messages.
func (m *GetReplicationStatusResponse) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'ReplicationStatus'
	for i := range m.ReplicationStatus {
		if err := m.ReplicationStatus[i].FixEnums(overrides, requestVersion); err != nil {
			return err
		}
	}

	return nil
}

// Fix enums in GlobalizeNamespaceRequest.
// Meant for incoming and outgoing response messages.
func (m *GlobalizeNamespaceRequest) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'TargetRegion'
	if err := m.GetTargetRegion().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	return nil
}

// Fix enums in ListFailoverHistoryByNamespaceResponse.
// Meant for incoming and outgoing response messages.
func (m *ListFailoverHistoryByNamespaceResponse) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'FailoverHistory'
	for i := range m.FailoverHistory {
		if err := m.FailoverHistory[i].FixEnums(overrides, requestVersion); err != nil {
			return err
		}
	}

	return nil
}

// Fix enums in ListReplicaStatusResponse.
// Meant for incoming and outgoing response messages.
func (m *ListReplicaStatusResponse) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'Statuses'
	for i := range m.Statuses {
		if err := m.Statuses[i].FixEnums(overrides, requestVersion); err != nil {
			return err
		}
	}

	return nil
}

// Fix enums in ReplicationStatus.
// Meant for incoming and outgoing response messages.
func (m *ReplicationStatus) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'SourceRegion'
	if err := m.GetSourceRegion().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	// fix enums for field 'TargetRegion'
	if err := m.GetTargetRegion().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	return nil
}

// Fix enums in UpdateNamespaceRequest.
// Meant for incoming and outgoing response messages.
func (m *UpdateNamespaceRequest) FixEnums(overrides *versioning.StringOverrides, requestVersion string) error {
	if m == nil {
		return nil
	}

	// fix enums for field 'Spec'
	if err := m.GetSpec().FixEnums(overrides, requestVersion); err != nil {
		return err
	}

	return nil
}