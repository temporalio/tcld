// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: temporal/api/cloud/region/v1/message.proto

package region

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The cloud provider that's hosting the region.
type Region_CloudProvider int32

const (
	CLOUD_PROVIDER_UNSPECIFIED Region_CloudProvider = 0
	CLOUD_PROVIDER_AWS         Region_CloudProvider = 1
	CLOUD_PROVIDER_GCP         Region_CloudProvider = 2
)

var Region_CloudProvider_name = map[int32]string{
	0: "CloudProviderUnspecified",
	1: "CloudProviderAws",
	2: "CloudProviderGcp",
}

var Region_CloudProvider_value = map[string]int32{
	"CloudProviderUnspecified": 0,
	"CloudProviderAws":         1,
	"CloudProviderGcp":         2,
}

func (Region_CloudProvider) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ec4b65943296208a, []int{0, 0}
}

type Region struct {
	// The id of the temporal cloud region.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the cloud provider that's hosting the region.
	// Currently only "aws" is supported.
	// Deprecated: Use cloud_provider instead.
	// temporal:versioning:max_version=v0.3.0
	CloudProviderDeprecated string `protobuf:"bytes,2,opt,name=cloud_provider_deprecated,json=cloudProviderDeprecated,proto3" json:"cloud_provider_deprecated,omitempty"` // Deprecated: Do not use.
	// The cloud provider that's hosting the region.
	// temporal:versioning:min_version=v0.3.0
	// temporal:enums:replaces=cloud_provider_deprecated
	CloudProvider Region_CloudProvider `protobuf:"varint,5,opt,name=cloud_provider,json=cloudProvider,proto3,enum=temporal.api.cloud.region.v1.Region_CloudProvider" json:"cloud_provider,omitempty"`
	// The region identifier as defined by the cloud provider.
	CloudProviderRegion string `protobuf:"bytes,3,opt,name=cloud_provider_region,json=cloudProviderRegion,proto3" json:"cloud_provider_region,omitempty"`
	// The human readable location of the region.
	Location string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (m *Region) Reset()      { *m = Region{} }
func (*Region) ProtoMessage() {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec4b65943296208a, []int{0}
}
func (m *Region) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Region.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(m, src)
}
func (m *Region) XXX_Size() int {
	return m.Size()
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Deprecated: Do not use.
func (m *Region) GetCloudProviderDeprecated() string {
	if m != nil {
		return m.CloudProviderDeprecated
	}
	return ""
}

func (m *Region) GetCloudProvider() Region_CloudProvider {
	if m != nil {
		return m.CloudProvider
	}
	return CLOUD_PROVIDER_UNSPECIFIED
}

func (m *Region) GetCloudProviderRegion() string {
	if m != nil {
		return m.CloudProviderRegion
	}
	return ""
}

func (m *Region) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func init() {
	proto.RegisterEnum("temporal.api.cloud.region.v1.Region_CloudProvider", Region_CloudProvider_name, Region_CloudProvider_value)
	proto.RegisterType((*Region)(nil), "temporal.api.cloud.region.v1.Region")
}

func init() {
	proto.RegisterFile("temporal/api/cloud/region/v1/message.proto", fileDescriptor_ec4b65943296208a)
}

var fileDescriptor_ec4b65943296208a = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd2, 0x41, 0xcf, 0xd2, 0x30,
	0x18, 0x07, 0xf0, 0xb5, 0x2a, 0xd1, 0x46, 0x08, 0xa9, 0x51, 0x27, 0x31, 0x95, 0x70, 0x42, 0x0f,
	0x5d, 0x86, 0xb7, 0x9a, 0x98, 0xc0, 0x86, 0x86, 0x44, 0x65, 0x19, 0x82, 0xd1, 0xcb, 0x32, 0x59,
	0x43, 0x9a, 0x80, 0x6d, 0xc6, 0xe4, 0xec, 0x47, 0xf0, 0x63, 0x18, 0x3f, 0x89, 0x47, 0x4e, 0x86,
	0xe3, 0xcb, 0x78, 0x0f, 0x6f, 0xde, 0x13, 0x1f, 0xe1, 0x0d, 0x1d, 0xf0, 0x32, 0x42, 0xb8, 0xad,
	0xdb, 0xef, 0x59, 0xff, 0x7d, 0xfa, 0xa0, 0x57, 0x09, 0x9f, 0x28, 0x19, 0x87, 0x63, 0x2b, 0x54,
	0xc2, 0x1a, 0x8e, 0xe5, 0xcf, 0xc8, 0x8a, 0xf9, 0x48, 0xc8, 0x1f, 0xd6, 0xcc, 0xb6, 0x26, 0x7c,
	0x3a, 0x0d, 0x47, 0x9c, 0xaa, 0x58, 0x26, 0x12, 0x3f, 0xdf, 0x59, 0x1a, 0x2a, 0x41, 0xb5, 0xa5,
	0x99, 0xa5, 0x33, 0xbb, 0x76, 0x09, 0x51, 0xc1, 0xd7, 0x2b, 0x5c, 0x42, 0x50, 0x44, 0x26, 0xa8,
	0x82, 0xfa, 0x03, 0x1f, 0x8a, 0x08, 0xbf, 0x45, 0xcf, 0xb4, 0x0e, 0x54, 0x2c, 0x67, 0x22, 0xe2,
	0x71, 0x10, 0x71, 0x15, 0xf3, 0x61, 0x98, 0xf0, 0xc8, 0x84, 0x1b, 0xd6, 0x82, 0x26, 0xf0, 0x9f,
	0x6a, 0xe4, 0x6d, 0x8d, 0xbb, 0x27, 0xf8, 0x2b, 0x2a, 0xe5, 0xeb, 0xcd, 0x7b, 0x55, 0x50, 0x2f,
	0x35, 0x1a, 0xf4, 0x5c, 0x22, 0x9a, 0xa5, 0xa1, 0xce, 0xe1, 0x5f, 0xfd, 0x62, 0x6e, 0x13, 0xdc,
	0x40, 0x8f, 0x8f, 0xa2, 0x65, 0xf5, 0xe6, 0x1d, 0x9d, 0xfe, 0x51, 0x4e, 0x6f, 0x8f, 0x57, 0x41,
	0xf7, 0xc7, 0x72, 0x18, 0x26, 0x1b, 0x76, 0x57, 0xb3, 0xfd, 0xba, 0x16, 0xa0, 0x62, 0x6e, 0x3f,
	0x4c, 0x50, 0xc5, 0xf9, 0xd0, 0xed, 0xbb, 0x81, 0xe7, 0x77, 0x07, 0x1d, 0xb7, 0xed, 0x07, 0xfd,
	0x4f, 0x3d, 0xaf, 0xed, 0x74, 0xde, 0x75, 0xda, 0x6e, 0xd9, 0xc0, 0x4f, 0x10, 0x3e, 0xfa, 0xde,
	0xfc, 0xd2, 0x2b, 0x83, 0x13, 0xef, 0xdf, 0x3b, 0x5e, 0x19, 0xb6, 0xfe, 0x83, 0xf9, 0x92, 0x18,
	0x8b, 0x25, 0x31, 0xd6, 0x4b, 0x02, 0x7e, 0xa5, 0x04, 0xfc, 0x49, 0x09, 0xf8, 0x97, 0x12, 0x30,
	0x4f, 0x09, 0xb8, 0x48, 0x09, 0xb8, 0x4a, 0x89, 0xb1, 0x4e, 0x09, 0xf8, 0xbd, 0x22, 0xc6, 0x7c,
	0x45, 0x8c, 0xc5, 0x8a, 0x18, 0xe8, 0x85, 0x90, 0x67, 0x9b, 0xd5, 0x7a, 0xf8, 0x31, 0xbb, 0x6b,
	0x6f, 0x73, 0xd5, 0x1e, 0xf8, 0xf6, 0x72, 0x74, 0x50, 0x20, 0xe4, 0xa9, 0xf1, 0x78, 0x93, 0x3d,
	0xfd, 0x85, 0xe4, 0xf3, 0x16, 0x0a, 0x49, 0x9b, 0x4a, 0x64, 0x1d, 0xdf, 0xb5, 0x7f, 0x60, 0x5f,
	0xc3, 0xda, 0x2d, 0x60, 0xac, 0xa9, 0x04, 0x63, 0x9a, 0x30, 0x96, 0x19, 0xc6, 0x06, 0xf6, 0xf7,
	0x82, 0x1e, 0xb2, 0xd7, 0x37, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x02, 0x42, 0xcf, 0x92, 0x02,
	0x00, 0x00,
}

func (x Region_CloudProvider) String() string {
	s, ok := Region_CloudProvider_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Region) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Region)
	if !ok {
		that2, ok := that.(Region)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.CloudProviderDeprecated != that1.CloudProviderDeprecated {
		return false
	}
	if this.CloudProvider != that1.CloudProvider {
		return false
	}
	if this.CloudProviderRegion != that1.CloudProviderRegion {
		return false
	}
	if this.Location != that1.Location {
		return false
	}
	return true
}
func (this *Region) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&region.Region{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "CloudProviderDeprecated: "+fmt.Sprintf("%#v", this.CloudProviderDeprecated)+",\n")
	s = append(s, "CloudProvider: "+fmt.Sprintf("%#v", this.CloudProvider)+",\n")
	s = append(s, "CloudProviderRegion: "+fmt.Sprintf("%#v", this.CloudProviderRegion)+",\n")
	s = append(s, "Location: "+fmt.Sprintf("%#v", this.Location)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringMessage(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *Region) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Region) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Region) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CloudProvider != 0 {
		i = encodeVarintMessage(dAtA, i, uint64(m.CloudProvider))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintMessage(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CloudProviderRegion) > 0 {
		i -= len(m.CloudProviderRegion)
		copy(dAtA[i:], m.CloudProviderRegion)
		i = encodeVarintMessage(dAtA, i, uint64(len(m.CloudProviderRegion)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CloudProviderDeprecated) > 0 {
		i -= len(m.CloudProviderDeprecated)
		copy(dAtA[i:], m.CloudProviderDeprecated)
		i = encodeVarintMessage(dAtA, i, uint64(len(m.CloudProviderDeprecated)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintMessage(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMessage(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Region) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMessage(uint64(l))
	}
	l = len(m.CloudProviderDeprecated)
	if l > 0 {
		n += 1 + l + sovMessage(uint64(l))
	}
	l = len(m.CloudProviderRegion)
	if l > 0 {
		n += 1 + l + sovMessage(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovMessage(uint64(l))
	}
	if m.CloudProvider != 0 {
		n += 1 + sovMessage(uint64(m.CloudProvider))
	}
	return n
}

func sovMessage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessage(x uint64) (n int) {
	return sovMessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *Region) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Region{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`CloudProviderDeprecated:` + fmt.Sprintf("%v", this.CloudProviderDeprecated) + `,`,
		`CloudProviderRegion:` + fmt.Sprintf("%v", this.CloudProviderRegion) + `,`,
		`Location:` + fmt.Sprintf("%v", this.Location) + `,`,
		`CloudProvider:` + fmt.Sprintf("%v", this.CloudProvider) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringMessage(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *Region) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Region: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Region: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudProviderDeprecated", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloudProviderDeprecated = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudProviderRegion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloudProviderRegion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudProvider", wireType)
			}
			m.CloudProvider = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CloudProvider |= Region_CloudProvider(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessage = fmt.Errorf("proto: unexpected end of group")
)
