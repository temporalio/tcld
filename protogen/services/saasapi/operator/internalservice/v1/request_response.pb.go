// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services/saasapi/operator/internalservice/v1/request_response.proto

package internalservice

import (
	bytes "bytes"
	encoding_binary "encoding/binary"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
	v1 "github.com/temporalio/tcld/protogen/services/saasapi/operator/cell/v1"
	v11 "github.com/temporalio/tcld/protogen/services/saasapi/operator/request/v1"
	v12 "github.com/temporalio/tcld/protogen/services/saasapi/operator/rollingapply/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RollingUpdateTemporalCellsRequest_RolloutMode int32

const (
	ROLLOUT_MODE_UNSPECIFIED RollingUpdateTemporalCellsRequest_RolloutMode = 0
	// Default mode that should be used in normal situations.
	ROLLOUT_MODE_NORMAL RollingUpdateTemporalCellsRequest_RolloutMode = 1
	// Faster rollout when we are willing to take on more risk for a justified business reason.
	ROLLOUT_MODE_EXPEDITED RollingUpdateTemporalCellsRequest_RolloutMode = 2
	// Fast rollout that should be used only for
	//   1) emergency to avoid major impact on customers or
	//   2) safe update, such as updating admin tools
	//
	// Rollout will happen ring by ring with minimum wait time in between.
	ROLLOUT_MODE_FAST RollingUpdateTemporalCellsRequest_RolloutMode = 3
	// Breakglass should only be used as a last resort to roll out changes asap.
	//
	// Rollout will happen ring by ring with no wait time in between.
	ROLLOUT_MODE_BREAKGLASS RollingUpdateTemporalCellsRequest_RolloutMode = 4
	// Custom rollout when a user wants to tune the rollout parameters directly. If used, user must set the
	// custom_rollout_config below. This should rarely be used and only for justified reasons.
	ROLLOUT_MODE_CUSTOM RollingUpdateTemporalCellsRequest_RolloutMode = 99
)

var RollingUpdateTemporalCellsRequest_RolloutMode_name = map[int32]string{
	0:  "RolloutModeUnspecified",
	1:  "RolloutModeNormal",
	2:  "RolloutModeExpedited",
	3:  "RolloutModeFast",
	4:  "RolloutModeBreakglass",
	99: "RolloutModeCustom",
}

var RollingUpdateTemporalCellsRequest_RolloutMode_value = map[string]int32{
	"RolloutModeUnspecified": 0,
	"RolloutModeNormal":      1,
	"RolloutModeExpedited":   2,
	"RolloutModeFast":        3,
	"RolloutModeBreakglass":  4,
	"RolloutModeCustom":      99,
}

func (RollingUpdateTemporalCellsRequest_RolloutMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{14, 0}
}

type ListResourcesRequest struct {
	// the requested size of the page to retrive, defaults to 30, max 90
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// the page token
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListResourcesRequest) Reset()      { *m = ListResourcesRequest{} }
func (*ListResourcesRequest) ProtoMessage() {}
func (*ListResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{0}
}
func (m *ListResourcesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourcesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourcesRequest.Merge(m, src)
}
func (m *ListResourcesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListResourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourcesRequest proto.InternalMessageInfo

func (m *ListResourcesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListResourcesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListResourcesResponse struct {
	// the list of resources
	Resources [][]byte `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	// the next page's token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListResourcesResponse) Reset()      { *m = ListResourcesResponse{} }
func (*ListResourcesResponse) ProtoMessage() {}
func (*ListResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{1}
}
func (m *ListResourcesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListResourcesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResourcesResponse.Merge(m, src)
}
func (m *ListResourcesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResourcesResponse proto.InternalMessageInfo

func (m *ListResourcesResponse) GetResources() [][]byte {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ListResourcesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetResourceRequest struct {
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (m *GetResourceRequest) Reset()      { *m = GetResourceRequest{} }
func (*GetResourceRequest) ProtoMessage() {}
func (*GetResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{2}
}
func (m *GetResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceRequest.Merge(m, src)
}
func (m *GetResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceRequest proto.InternalMessageInfo

func (m *GetResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type GetResourceResponse struct {
	// resource in serialized json format
	Resource []byte `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (m *GetResourceResponse) Reset()      { *m = GetResourceResponse{} }
func (*GetResourceResponse) ProtoMessage() {}
func (*GetResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{3}
}
func (m *GetResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceResponse.Merge(m, src)
}
func (m *GetResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceResponse proto.InternalMessageInfo

func (m *GetResourceResponse) GetResource() []byte {
	if m != nil {
		return m.Resource
	}
	return nil
}

type UpdateResourceRequest struct {
	ResourceName    string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ResourceVersion string `protobuf:"bytes,2,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	// resource in json format
	Resource  []byte `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	RequestId string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *UpdateResourceRequest) Reset()      { *m = UpdateResourceRequest{} }
func (*UpdateResourceRequest) ProtoMessage() {}
func (*UpdateResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{4}
}
func (m *UpdateResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourceRequest.Merge(m, src)
}
func (m *UpdateResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourceRequest proto.InternalMessageInfo

func (m *UpdateResourceRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *UpdateResourceRequest) GetResourceVersion() string {
	if m != nil {
		return m.ResourceVersion
	}
	return ""
}

func (m *UpdateResourceRequest) GetResource() []byte {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *UpdateResourceRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type UpdateResourceResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
	Resource      []byte `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (m *UpdateResourceResponse) Reset()      { *m = UpdateResourceResponse{} }
func (*UpdateResourceResponse) ProtoMessage() {}
func (*UpdateResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{5}
}
func (m *UpdateResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourceResponse.Merge(m, src)
}
func (m *UpdateResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourceResponse proto.InternalMessageInfo

func (m *UpdateResourceResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

func (m *UpdateResourceResponse) GetResource() []byte {
	if m != nil {
		return m.Resource
	}
	return nil
}

type CreateNamespaceRequest struct {
	// The create namespace request in temporal-cloud-api.
	Request []byte `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// If set, places the namespace into the specified cell.
	PlacementOverrideCellId *types.StringValue `protobuf:"bytes,2,opt,name=placement_override_cell_id,json=placementOverrideCellId,proto3" json:"placement_override_cell_id,omitempty"`
	// If enabled, forces namespace creation by bypassing certain checks and/or overwriting existing values.
	// This is potentially a dangerous operation, so please enable only when you know what you are doing.
	// TODO: remove once we have proper namespace recreate
	ForceOverwrite *types.BoolValue `protobuf:"bytes,4,opt,name=force_overwrite,json=forceOverwrite,proto3" json:"force_overwrite,omitempty"`
}

func (m *CreateNamespaceRequest) Reset()      { *m = CreateNamespaceRequest{} }
func (*CreateNamespaceRequest) ProtoMessage() {}
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{6}
}
func (m *CreateNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateNamespaceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceRequest.Merge(m, src)
}
func (m *CreateNamespaceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceRequest proto.InternalMessageInfo

func (m *CreateNamespaceRequest) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *CreateNamespaceRequest) GetPlacementOverrideCellId() *types.StringValue {
	if m != nil {
		return m.PlacementOverrideCellId
	}
	return nil
}

func (m *CreateNamespaceRequest) GetForceOverwrite() *types.BoolValue {
	if m != nil {
		return m.ForceOverwrite
	}
	return nil
}

type CreateNamespaceResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *CreateNamespaceResponse) Reset()      { *m = CreateNamespaceResponse{} }
func (*CreateNamespaceResponse) ProtoMessage() {}
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{7}
}
func (m *CreateNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateNamespaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceResponse.Merge(m, src)
}
func (m *CreateNamespaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceResponse proto.InternalMessageInfo

func (m *CreateNamespaceResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type CreateCellRequest struct {
	Id        string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec      *v1.CellSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	RequestId string       `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *CreateCellRequest) Reset()      { *m = CreateCellRequest{} }
func (*CreateCellRequest) ProtoMessage() {}
func (*CreateCellRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{8}
}
func (m *CreateCellRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateCellRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateCellRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateCellRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCellRequest.Merge(m, src)
}
func (m *CreateCellRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateCellRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCellRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCellRequest proto.InternalMessageInfo

func (m *CreateCellRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateCellRequest) GetSpec() *v1.CellSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *CreateCellRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type CreateCellResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *CreateCellResponse) Reset()      { *m = CreateCellResponse{} }
func (*CreateCellResponse) ProtoMessage() {}
func (*CreateCellResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{9}
}
func (m *CreateCellResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateCellResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateCellResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateCellResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCellResponse.Merge(m, src)
}
func (m *CreateCellResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateCellResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCellResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCellResponse proto.InternalMessageInfo

func (m *CreateCellResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type DeleteCellRequest struct {
	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ResourceVersion string `protobuf:"bytes,2,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	RequestId       string `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *DeleteCellRequest) Reset()      { *m = DeleteCellRequest{} }
func (*DeleteCellRequest) ProtoMessage() {}
func (*DeleteCellRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{10}
}
func (m *DeleteCellRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteCellRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteCellRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteCellRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCellRequest.Merge(m, src)
}
func (m *DeleteCellRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteCellRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCellRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCellRequest proto.InternalMessageInfo

func (m *DeleteCellRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteCellRequest) GetResourceVersion() string {
	if m != nil {
		return m.ResourceVersion
	}
	return ""
}

func (m *DeleteCellRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type DeleteCellResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *DeleteCellResponse) Reset()      { *m = DeleteCellResponse{} }
func (*DeleteCellResponse) ProtoMessage() {}
func (*DeleteCellResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{11}
}
func (m *DeleteCellResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteCellResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteCellResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteCellResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCellResponse.Merge(m, src)
}
func (m *DeleteCellResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteCellResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCellResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCellResponse proto.InternalMessageInfo

func (m *DeleteCellResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type CreateCellInDatabaseRequest struct {
	Resource []byte `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (m *CreateCellInDatabaseRequest) Reset()      { *m = CreateCellInDatabaseRequest{} }
func (*CreateCellInDatabaseRequest) ProtoMessage() {}
func (*CreateCellInDatabaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{12}
}
func (m *CreateCellInDatabaseRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateCellInDatabaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateCellInDatabaseRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateCellInDatabaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCellInDatabaseRequest.Merge(m, src)
}
func (m *CreateCellInDatabaseRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateCellInDatabaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCellInDatabaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCellInDatabaseRequest proto.InternalMessageInfo

func (m *CreateCellInDatabaseRequest) GetResource() []byte {
	if m != nil {
		return m.Resource
	}
	return nil
}

type CreateCellInDatabaseResponse struct {
	Resource []byte `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (m *CreateCellInDatabaseResponse) Reset()      { *m = CreateCellInDatabaseResponse{} }
func (*CreateCellInDatabaseResponse) ProtoMessage() {}
func (*CreateCellInDatabaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{13}
}
func (m *CreateCellInDatabaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateCellInDatabaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateCellInDatabaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateCellInDatabaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCellInDatabaseResponse.Merge(m, src)
}
func (m *CreateCellInDatabaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateCellInDatabaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCellInDatabaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCellInDatabaseResponse proto.InternalMessageInfo

func (m *CreateCellInDatabaseResponse) GetResource() []byte {
	if m != nil {
		return m.Resource
	}
	return nil
}

type RollingUpdateTemporalCellsRequest struct {
	// Filter to define which cells to update.
	CellFilter *v12.CellFilter `protobuf:"bytes,1,opt,name=cell_filter,json=cellFilter,proto3" json:"cell_filter,omitempty"`
	// Mode to specify how fast the rollout will happen (e.g., how many cells in each batch and the waiting periods
	// between rings and batches).
	RolloutMode RollingUpdateTemporalCellsRequest_RolloutMode `protobuf:"varint,2,opt,name=rollout_mode,json=rolloutMode,proto3,enum=services.saasapi.operator.internalservice.v1.RollingUpdateTemporalCellsRequest_RolloutMode" json:"rollout_mode,omitempty"`
	// Custom rollout config. Required iff rollout_mode=ROLLOUT_MODE_CUSTOM.
	CustomRolloutConfig *v12.RolloutConfig `protobuf:"bytes,3,opt,name=custom_rollout_config,json=customRolloutConfig,proto3" json:"custom_rollout_config,omitempty"`
	// If true, allows rollout to happen any time, including weekends and other non-working hours.
	AllowAnyTime bool `protobuf:"varint,4,opt,name=allow_any_time,json=allowAnyTime,proto3" json:"allow_any_time,omitempty"`
	// If set, patches cell dynamic config in db by merging the value into it.
	//
	// Note that
	// 1) the value must be able to marshal into map[string]interface{}
	// 2) the value will be patched/merged so caller only needs to specify the key-value pairs they want to set/modify
	// 3) it only updates dynamic config in db without deploying it; to do that, set update_dynamic_config to true
	DynamicConfigPatch []byte `protobuf:"bytes,115,opt,name=dynamic_config_patch,json=dynamicConfigPatch,proto3" json:"dynamic_config_patch,omitempty"`
	// If set, removes corresponding entries from the cell dynamic config in the db.
	//
	// Note that
	// 1) the value must marshal into []string
	// 2) all entries of the string slice will be removed from the cell db dc config if they exist. If they don't exist, its a no-op
	// 3) it only updates dynamic config in db without deploying it; to do that, set update_dynamic_config to true
	DynamicConfigRemove []byte `protobuf:"bytes,117,opt,name=dynamic_config_remove,json=dynamicConfigRemove,proto3" json:"dynamic_config_remove,omitempty"`
	// If set, patches cell dynamic config in db by deleting any values that much each key/value pair
	//
	// Note that
	// 1) the value must be able to marshal into map[string]interface{}
	// 2) all entries where the key and value match will be removed if they exist in the cell configuration
	// 3) it only updates dynamic config in db without deploying it; to do that, set update_dynamic_config to true
	DynamicConfigRemoveWithValues []byte `protobuf:"bytes,118,opt,name=dynamic_config_remove_with_values,json=dynamicConfigRemoveWithValues,proto3" json:"dynamic_config_remove_with_values,omitempty"`
	// If set, deploys cell dynamic configs to data plane ConfigMap.
	UpdateDynamicConfig bool `protobuf:"varint,100,opt,name=update_dynamic_config,json=updateDynamicConfig,proto3" json:"update_dynamic_config,omitempty"`
	// If set, updates admin tools for V1/V2 cells using this version.
	AdminToolsVersion string `protobuf:"bytes,101,opt,name=admin_tools_version,json=adminToolsVersion,proto3" json:"admin_tools_version,omitempty"`
	// If true, updates Astra schema.
	//
	// Note that it relies on admin tools to actually update the schema, so one should make sure the admin tools has
	// been updated properly. The endpoint does NOT enforce admin_tools_version must be set.
	UpdateAstraSchema bool `protobuf:"varint,102,opt,name=update_astra_schema,json=updateAstraSchema,proto3" json:"update_astra_schema,omitempty"`
	// If set, updates Temporal for V1/V2 cells using this version.
	TemporalVersion string `protobuf:"bytes,103,opt,name=temporal_version,json=temporalVersion,proto3" json:"temporal_version,omitempty"`
	// If set, updates SaaS Agent for V1/V2 cells using this version.
	AgentVersion string `protobuf:"bytes,104,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	// If set, updates Go Canary using this version.
	GoCanaryVersion string `protobuf:"bytes,105,opt,name=go_canary_version,json=goCanaryVersion,proto3" json:"go_canary_version,omitempty"`
	// If set, updates per-ns Temporal web version. Note that only updating web V2 is supported.
	// This field will be deprecated after multi-web is fully rolled out
	WebVersion string `protobuf:"bytes,106,opt,name=web_version,json=webVersion,proto3" json:"web_version,omitempty"`
	// If true, updates alerts. Note that it syncs the existing alert configs in codesign so one should make sure those
	// configs are up-to-date.
	UpdateAlerts bool `protobuf:"varint,107,opt,name=update_alerts,json=updateAlerts,proto3" json:"update_alerts,omitempty"`
	// If set, updates OPA using this version.
	OpaVersion string `protobuf:"bytes,108,opt,name=opa_version,json=opaVersion,proto3" json:"opa_version,omitempty"`
	// If set, only updates specified deployments (e.g. frontend, matching, history, worker) to temporal_version. If not set, assumes all deployments will be updated.
	TemporalDeploymentsToUpdate []string `protobuf:"bytes,109,rep,name=temporal_deployments_to_update,json=temporalDeploymentsToUpdate,proto3" json:"temporal_deployments_to_update,omitempty"`
	// If set, will re-deploy temporal-namespace saas-component and re-sync config maps for each namespace on a matching cell
	ForceSyncNamespaces bool `protobuf:"varint,110,opt,name=force_sync_namespaces,json=forceSyncNamespaces,proto3" json:"force_sync_namespaces,omitempty"`
	// If set, will by bypass go-canary health verification after each temporal microservice deployment completes
	BypassCanaryCheck bool `protobuf:"varint,111,opt,name=bypass_canary_check,json=bypassCanaryCheck,proto3" json:"bypass_canary_check,omitempty"`
	// If set, updats admin tools versions for v3 cells using this version
	AdminToolsVersionV3 string `protobuf:"bytes,112,opt,name=admin_tools_version_v3,json=adminToolsVersionV3,proto3" json:"admin_tools_version_v3,omitempty"`
	// If set, updates temporal versions for v3 cells using this version
	TemporalVersionV3 string `protobuf:"bytes,113,opt,name=temporal_version_v3,json=temporalVersionV3,proto3" json:"temporal_version_v3,omitempty"`
	// If set, updates agent versions for v3 cells using this version
	AgentVersionV3 string `protobuf:"bytes,114,opt,name=agent_version_v3,json=agentVersionV3,proto3" json:"agent_version_v3,omitempty"`
	// If set, restarts the specified temporal deployments
	TemporalDeploymentsToRestart []string `protobuf:"bytes,116,rep,name=temporal_deployments_to_restart,json=temporalDeploymentsToRestart,proto3" json:"temporal_deployments_to_restart,omitempty"`
	// If set, ignores rollout exclusions.
	BypassRolloutExclusions bool `protobuf:"varint,119,opt,name=bypass_rollout_exclusions,json=bypassRolloutExclusions,proto3" json:"bypass_rollout_exclusions,omitempty"`
	// If set, updates per-cell web api version
	WebApiVersion string `protobuf:"bytes,120,opt,name=web_api_version,json=webApiVersion,proto3" json:"web_api_version,omitempty"`
}

func (m *RollingUpdateTemporalCellsRequest) Reset()      { *m = RollingUpdateTemporalCellsRequest{} }
func (*RollingUpdateTemporalCellsRequest) ProtoMessage() {}
func (*RollingUpdateTemporalCellsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{14}
}
func (m *RollingUpdateTemporalCellsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RollingUpdateTemporalCellsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RollingUpdateTemporalCellsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RollingUpdateTemporalCellsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollingUpdateTemporalCellsRequest.Merge(m, src)
}
func (m *RollingUpdateTemporalCellsRequest) XXX_Size() int {
	return m.Size()
}
func (m *RollingUpdateTemporalCellsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollingUpdateTemporalCellsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollingUpdateTemporalCellsRequest proto.InternalMessageInfo

func (m *RollingUpdateTemporalCellsRequest) GetCellFilter() *v12.CellFilter {
	if m != nil {
		return m.CellFilter
	}
	return nil
}

func (m *RollingUpdateTemporalCellsRequest) GetRolloutMode() RollingUpdateTemporalCellsRequest_RolloutMode {
	if m != nil {
		return m.RolloutMode
	}
	return ROLLOUT_MODE_UNSPECIFIED
}

func (m *RollingUpdateTemporalCellsRequest) GetCustomRolloutConfig() *v12.RolloutConfig {
	if m != nil {
		return m.CustomRolloutConfig
	}
	return nil
}

func (m *RollingUpdateTemporalCellsRequest) GetAllowAnyTime() bool {
	if m != nil {
		return m.AllowAnyTime
	}
	return false
}

func (m *RollingUpdateTemporalCellsRequest) GetDynamicConfigPatch() []byte {
	if m != nil {
		return m.DynamicConfigPatch
	}
	return nil
}

func (m *RollingUpdateTemporalCellsRequest) GetDynamicConfigRemove() []byte {
	if m != nil {
		return m.DynamicConfigRemove
	}
	return nil
}

func (m *RollingUpdateTemporalCellsRequest) GetDynamicConfigRemoveWithValues() []byte {
	if m != nil {
		return m.DynamicConfigRemoveWithValues
	}
	return nil
}

func (m *RollingUpdateTemporalCellsRequest) GetUpdateDynamicConfig() bool {
	if m != nil {
		return m.UpdateDynamicConfig
	}
	return false
}

func (m *RollingUpdateTemporalCellsRequest) GetAdminToolsVersion() string {
	if m != nil {
		return m.AdminToolsVersion
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetUpdateAstraSchema() bool {
	if m != nil {
		return m.UpdateAstraSchema
	}
	return false
}

func (m *RollingUpdateTemporalCellsRequest) GetTemporalVersion() string {
	if m != nil {
		return m.TemporalVersion
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetAgentVersion() string {
	if m != nil {
		return m.AgentVersion
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetGoCanaryVersion() string {
	if m != nil {
		return m.GoCanaryVersion
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetWebVersion() string {
	if m != nil {
		return m.WebVersion
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetUpdateAlerts() bool {
	if m != nil {
		return m.UpdateAlerts
	}
	return false
}

func (m *RollingUpdateTemporalCellsRequest) GetOpaVersion() string {
	if m != nil {
		return m.OpaVersion
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetTemporalDeploymentsToUpdate() []string {
	if m != nil {
		return m.TemporalDeploymentsToUpdate
	}
	return nil
}

func (m *RollingUpdateTemporalCellsRequest) GetForceSyncNamespaces() bool {
	if m != nil {
		return m.ForceSyncNamespaces
	}
	return false
}

func (m *RollingUpdateTemporalCellsRequest) GetBypassCanaryCheck() bool {
	if m != nil {
		return m.BypassCanaryCheck
	}
	return false
}

func (m *RollingUpdateTemporalCellsRequest) GetAdminToolsVersionV3() string {
	if m != nil {
		return m.AdminToolsVersionV3
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetTemporalVersionV3() string {
	if m != nil {
		return m.TemporalVersionV3
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetAgentVersionV3() string {
	if m != nil {
		return m.AgentVersionV3
	}
	return ""
}

func (m *RollingUpdateTemporalCellsRequest) GetTemporalDeploymentsToRestart() []string {
	if m != nil {
		return m.TemporalDeploymentsToRestart
	}
	return nil
}

func (m *RollingUpdateTemporalCellsRequest) GetBypassRolloutExclusions() bool {
	if m != nil {
		return m.BypassRolloutExclusions
	}
	return false
}

func (m *RollingUpdateTemporalCellsRequest) GetWebApiVersion() string {
	if m != nil {
		return m.WebApiVersion
	}
	return ""
}

type RollingUpdateTemporalCellsResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *RollingUpdateTemporalCellsResponse) Reset()      { *m = RollingUpdateTemporalCellsResponse{} }
func (*RollingUpdateTemporalCellsResponse) ProtoMessage() {}
func (*RollingUpdateTemporalCellsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{15}
}
func (m *RollingUpdateTemporalCellsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RollingUpdateTemporalCellsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RollingUpdateTemporalCellsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RollingUpdateTemporalCellsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollingUpdateTemporalCellsResponse.Merge(m, src)
}
func (m *RollingUpdateTemporalCellsResponse) XXX_Size() int {
	return m.Size()
}
func (m *RollingUpdateTemporalCellsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RollingUpdateTemporalCellsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RollingUpdateTemporalCellsResponse proto.InternalMessageInfo

func (m *RollingUpdateTemporalCellsResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

// Failover Version related commands
type AllocateInitialFailoverVersionRequest struct {
	CellId string `protobuf:"bytes,1,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
}

func (m *AllocateInitialFailoverVersionRequest) Reset()      { *m = AllocateInitialFailoverVersionRequest{} }
func (*AllocateInitialFailoverVersionRequest) ProtoMessage() {}
func (*AllocateInitialFailoverVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{16}
}
func (m *AllocateInitialFailoverVersionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AllocateInitialFailoverVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AllocateInitialFailoverVersionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AllocateInitialFailoverVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllocateInitialFailoverVersionRequest.Merge(m, src)
}
func (m *AllocateInitialFailoverVersionRequest) XXX_Size() int {
	return m.Size()
}
func (m *AllocateInitialFailoverVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllocateInitialFailoverVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllocateInitialFailoverVersionRequest proto.InternalMessageInfo

func (m *AllocateInitialFailoverVersionRequest) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

type AllocateInitialFailoverVersionResponse struct {
	InitialFailoverVersion int32 `protobuf:"varint,1,opt,name=initial_failover_version,json=initialFailoverVersion,proto3" json:"initial_failover_version,omitempty"`
}

func (m *AllocateInitialFailoverVersionResponse) Reset() {
	*m = AllocateInitialFailoverVersionResponse{}
}
func (*AllocateInitialFailoverVersionResponse) ProtoMessage() {}
func (*AllocateInitialFailoverVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{17}
}
func (m *AllocateInitialFailoverVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AllocateInitialFailoverVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AllocateInitialFailoverVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AllocateInitialFailoverVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllocateInitialFailoverVersionResponse.Merge(m, src)
}
func (m *AllocateInitialFailoverVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *AllocateInitialFailoverVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllocateInitialFailoverVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllocateInitialFailoverVersionResponse proto.InternalMessageInfo

func (m *AllocateInitialFailoverVersionResponse) GetInitialFailoverVersion() int32 {
	if m != nil {
		return m.InitialFailoverVersion
	}
	return 0
}

type GetInitialFailoverVersionRequest struct {
	CellId string `protobuf:"bytes,1,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
}

func (m *GetInitialFailoverVersionRequest) Reset()      { *m = GetInitialFailoverVersionRequest{} }
func (*GetInitialFailoverVersionRequest) ProtoMessage() {}
func (*GetInitialFailoverVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{18}
}
func (m *GetInitialFailoverVersionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInitialFailoverVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInitialFailoverVersionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInitialFailoverVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInitialFailoverVersionRequest.Merge(m, src)
}
func (m *GetInitialFailoverVersionRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetInitialFailoverVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInitialFailoverVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInitialFailoverVersionRequest proto.InternalMessageInfo

func (m *GetInitialFailoverVersionRequest) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

type GetInitialFailoverVersionResponse struct {
	InitialFailoverVersion int32 `protobuf:"varint,1,opt,name=initial_failover_version,json=initialFailoverVersion,proto3" json:"initial_failover_version,omitempty"`
}

func (m *GetInitialFailoverVersionResponse) Reset()      { *m = GetInitialFailoverVersionResponse{} }
func (*GetInitialFailoverVersionResponse) ProtoMessage() {}
func (*GetInitialFailoverVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{19}
}
func (m *GetInitialFailoverVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInitialFailoverVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInitialFailoverVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInitialFailoverVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInitialFailoverVersionResponse.Merge(m, src)
}
func (m *GetInitialFailoverVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetInitialFailoverVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInitialFailoverVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInitialFailoverVersionResponse proto.InternalMessageInfo

func (m *GetInitialFailoverVersionResponse) GetInitialFailoverVersion() int32 {
	if m != nil {
		return m.InitialFailoverVersion
	}
	return 0
}

type UpdateInitialFailoverVersionRequest struct {
	CellId                 string `protobuf:"bytes,1,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	InitialFailoverVersion int32  `protobuf:"varint,2,opt,name=initial_failover_version,json=initialFailoverVersion,proto3" json:"initial_failover_version,omitempty"`
}

func (m *UpdateInitialFailoverVersionRequest) Reset()      { *m = UpdateInitialFailoverVersionRequest{} }
func (*UpdateInitialFailoverVersionRequest) ProtoMessage() {}
func (*UpdateInitialFailoverVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{20}
}
func (m *UpdateInitialFailoverVersionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateInitialFailoverVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateInitialFailoverVersionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateInitialFailoverVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateInitialFailoverVersionRequest.Merge(m, src)
}
func (m *UpdateInitialFailoverVersionRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateInitialFailoverVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateInitialFailoverVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateInitialFailoverVersionRequest proto.InternalMessageInfo

func (m *UpdateInitialFailoverVersionRequest) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *UpdateInitialFailoverVersionRequest) GetInitialFailoverVersion() int32 {
	if m != nil {
		return m.InitialFailoverVersion
	}
	return 0
}

type UpdateInitialFailoverVersionResponse struct {
}

func (m *UpdateInitialFailoverVersionResponse) Reset()      { *m = UpdateInitialFailoverVersionResponse{} }
func (*UpdateInitialFailoverVersionResponse) ProtoMessage() {}
func (*UpdateInitialFailoverVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{21}
}
func (m *UpdateInitialFailoverVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateInitialFailoverVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateInitialFailoverVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateInitialFailoverVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateInitialFailoverVersionResponse.Merge(m, src)
}
func (m *UpdateInitialFailoverVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateInitialFailoverVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateInitialFailoverVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateInitialFailoverVersionResponse proto.InternalMessageInfo

type DeleteInitialFailoverVersionRequest struct {
	CellId string `protobuf:"bytes,1,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
}

func (m *DeleteInitialFailoverVersionRequest) Reset()      { *m = DeleteInitialFailoverVersionRequest{} }
func (*DeleteInitialFailoverVersionRequest) ProtoMessage() {}
func (*DeleteInitialFailoverVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{22}
}
func (m *DeleteInitialFailoverVersionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteInitialFailoverVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteInitialFailoverVersionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteInitialFailoverVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInitialFailoverVersionRequest.Merge(m, src)
}
func (m *DeleteInitialFailoverVersionRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteInitialFailoverVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInitialFailoverVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInitialFailoverVersionRequest proto.InternalMessageInfo

func (m *DeleteInitialFailoverVersionRequest) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

type DeleteInitialFailoverVersionResponse struct {
}

func (m *DeleteInitialFailoverVersionResponse) Reset()      { *m = DeleteInitialFailoverVersionResponse{} }
func (*DeleteInitialFailoverVersionResponse) ProtoMessage() {}
func (*DeleteInitialFailoverVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{23}
}
func (m *DeleteInitialFailoverVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteInitialFailoverVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteInitialFailoverVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteInitialFailoverVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInitialFailoverVersionResponse.Merge(m, src)
}
func (m *DeleteInitialFailoverVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteInitialFailoverVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInitialFailoverVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInitialFailoverVersionResponse proto.InternalMessageInfo

// TODO: Whenever we are ready to expose this publically to end-users, we can move this to the "public proto" and embed the user object here.
//
//	For now, we'll just define the object here for convenience.
type InviteUsersRequest struct {
	// TODO: One or two of these settings can be inferred from control plane environment in handler?
	Auth0App string   `protobuf:"bytes,1,opt,name=auth0_app,json=auth0App,proto3" json:"auth0_app,omitempty"` // Deprecated: Do not use.
	Emails   []string `protobuf:"bytes,2,rep,name=emails,proto3" json:"emails,omitempty"`
	// the action group to enable for the account
	AccountActionGroup string `protobuf:"bytes,3,opt,name=account_action_group,json=accountActionGroup,proto3" json:"account_action_group,omitempty"`
	RootAccountId      string `protobuf:"bytes,4,opt,name=root_account_id,json=rootAccountId,proto3" json:"root_account_id,omitempty"`
}

func (m *InviteUsersRequest) Reset()      { *m = InviteUsersRequest{} }
func (*InviteUsersRequest) ProtoMessage() {}
func (*InviteUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{24}
}
func (m *InviteUsersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InviteUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InviteUsersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InviteUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteUsersRequest.Merge(m, src)
}
func (m *InviteUsersRequest) XXX_Size() int {
	return m.Size()
}
func (m *InviteUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InviteUsersRequest proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *InviteUsersRequest) GetAuth0App() string {
	if m != nil {
		return m.Auth0App
	}
	return ""
}

func (m *InviteUsersRequest) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *InviteUsersRequest) GetAccountActionGroup() string {
	if m != nil {
		return m.AccountActionGroup
	}
	return ""
}

func (m *InviteUsersRequest) GetRootAccountId() string {
	if m != nil {
		return m.RootAccountId
	}
	return ""
}

type InviteUsersResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *InviteUsersResponse) Reset()      { *m = InviteUsersResponse{} }
func (*InviteUsersResponse) ProtoMessage() {}
func (*InviteUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{25}
}
func (m *InviteUsersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InviteUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InviteUsersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InviteUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteUsersResponse.Merge(m, src)
}
func (m *InviteUsersResponse) XXX_Size() int {
	return m.Size()
}
func (m *InviteUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InviteUsersResponse proto.InternalMessageInfo

func (m *InviteUsersResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type AddRolesToUserRequest struct {
	UserEmail         string   `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RoleNames         []string `protobuf:"bytes,2,rep,name=role_names,json=roleNames,proto3" json:"role_names,omitempty"`
	SyncRolesToPolicy bool     `protobuf:"varint,3,opt,name=sync_roles_to_policy,json=syncRolesToPolicy,proto3" json:"sync_roles_to_policy,omitempty"`
}

func (m *AddRolesToUserRequest) Reset()      { *m = AddRolesToUserRequest{} }
func (*AddRolesToUserRequest) ProtoMessage() {}
func (*AddRolesToUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{26}
}
func (m *AddRolesToUserRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddRolesToUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddRolesToUserRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddRolesToUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRolesToUserRequest.Merge(m, src)
}
func (m *AddRolesToUserRequest) XXX_Size() int {
	return m.Size()
}
func (m *AddRolesToUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRolesToUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRolesToUserRequest proto.InternalMessageInfo

func (m *AddRolesToUserRequest) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *AddRolesToUserRequest) GetRoleNames() []string {
	if m != nil {
		return m.RoleNames
	}
	return nil
}

func (m *AddRolesToUserRequest) GetSyncRolesToPolicy() bool {
	if m != nil {
		return m.SyncRolesToPolicy
	}
	return false
}

type AddRolesToUserResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *AddRolesToUserResponse) Reset()      { *m = AddRolesToUserResponse{} }
func (*AddRolesToUserResponse) ProtoMessage() {}
func (*AddRolesToUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{27}
}
func (m *AddRolesToUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddRolesToUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddRolesToUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddRolesToUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRolesToUserResponse.Merge(m, src)
}
func (m *AddRolesToUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *AddRolesToUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRolesToUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddRolesToUserResponse proto.InternalMessageInfo

func (m *AddRolesToUserResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type DeleteRolesFromUserRequest struct {
	UserEmail         string   `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RoleNames         []string `protobuf:"bytes,2,rep,name=role_names,json=roleNames,proto3" json:"role_names,omitempty"`
	SyncRolesToPolicy bool     `protobuf:"varint,3,opt,name=sync_roles_to_policy,json=syncRolesToPolicy,proto3" json:"sync_roles_to_policy,omitempty"`
}

func (m *DeleteRolesFromUserRequest) Reset()      { *m = DeleteRolesFromUserRequest{} }
func (*DeleteRolesFromUserRequest) ProtoMessage() {}
func (*DeleteRolesFromUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{28}
}
func (m *DeleteRolesFromUserRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteRolesFromUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteRolesFromUserRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteRolesFromUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRolesFromUserRequest.Merge(m, src)
}
func (m *DeleteRolesFromUserRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteRolesFromUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRolesFromUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRolesFromUserRequest proto.InternalMessageInfo

func (m *DeleteRolesFromUserRequest) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *DeleteRolesFromUserRequest) GetRoleNames() []string {
	if m != nil {
		return m.RoleNames
	}
	return nil
}

func (m *DeleteRolesFromUserRequest) GetSyncRolesToPolicy() bool {
	if m != nil {
		return m.SyncRolesToPolicy
	}
	return false
}

type DeleteRolesFromUserResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *DeleteRolesFromUserResponse) Reset()      { *m = DeleteRolesFromUserResponse{} }
func (*DeleteRolesFromUserResponse) ProtoMessage() {}
func (*DeleteRolesFromUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{29}
}
func (m *DeleteRolesFromUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteRolesFromUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteRolesFromUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteRolesFromUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRolesFromUserResponse.Merge(m, src)
}
func (m *DeleteRolesFromUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteRolesFromUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRolesFromUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRolesFromUserResponse proto.InternalMessageInfo

func (m *DeleteRolesFromUserResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type DeleteUserRequest struct {
	UserEmail string `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
}

func (m *DeleteUserRequest) Reset()      { *m = DeleteUserRequest{} }
func (*DeleteUserRequest) ProtoMessage() {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{30}
}
func (m *DeleteUserRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteUserRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserRequest.Merge(m, src)
}
func (m *DeleteUserRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserRequest proto.InternalMessageInfo

func (m *DeleteUserRequest) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

type DeleteUserResponse struct {
}

func (m *DeleteUserResponse) Reset()      { *m = DeleteUserResponse{} }
func (*DeleteUserResponse) ProtoMessage() {}
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{31}
}
func (m *DeleteUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserResponse.Merge(m, src)
}
func (m *DeleteUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserResponse proto.InternalMessageInfo

type SetInternalRolesForUserRequest struct {
	UserEmail         string   `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RoleNames         []string `protobuf:"bytes,2,rep,name=role_names,json=roleNames,proto3" json:"role_names,omitempty"`
	SyncRolesToPolicy bool     `protobuf:"varint,3,opt,name=sync_roles_to_policy,json=syncRolesToPolicy,proto3" json:"sync_roles_to_policy,omitempty"`
}

func (m *SetInternalRolesForUserRequest) Reset()      { *m = SetInternalRolesForUserRequest{} }
func (*SetInternalRolesForUserRequest) ProtoMessage() {}
func (*SetInternalRolesForUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{32}
}
func (m *SetInternalRolesForUserRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetInternalRolesForUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetInternalRolesForUserRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetInternalRolesForUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetInternalRolesForUserRequest.Merge(m, src)
}
func (m *SetInternalRolesForUserRequest) XXX_Size() int {
	return m.Size()
}
func (m *SetInternalRolesForUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetInternalRolesForUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetInternalRolesForUserRequest proto.InternalMessageInfo

func (m *SetInternalRolesForUserRequest) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *SetInternalRolesForUserRequest) GetRoleNames() []string {
	if m != nil {
		return m.RoleNames
	}
	return nil
}

func (m *SetInternalRolesForUserRequest) GetSyncRolesToPolicy() bool {
	if m != nil {
		return m.SyncRolesToPolicy
	}
	return false
}

type SetInternalRolesForUserResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *SetInternalRolesForUserResponse) Reset()      { *m = SetInternalRolesForUserResponse{} }
func (*SetInternalRolesForUserResponse) ProtoMessage() {}
func (*SetInternalRolesForUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{33}
}
func (m *SetInternalRolesForUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetInternalRolesForUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetInternalRolesForUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetInternalRolesForUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetInternalRolesForUserResponse.Merge(m, src)
}
func (m *SetInternalRolesForUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *SetInternalRolesForUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetInternalRolesForUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetInternalRolesForUserResponse proto.InternalMessageInfo

func (m *SetInternalRolesForUserResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type GetAuthorizeResultFromOPARequest struct {
	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Subject   string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Action    string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AccountId string `protobuf:"bytes,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (m *GetAuthorizeResultFromOPARequest) Reset()      { *m = GetAuthorizeResultFromOPARequest{} }
func (*GetAuthorizeResultFromOPARequest) ProtoMessage() {}
func (*GetAuthorizeResultFromOPARequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{34}
}
func (m *GetAuthorizeResultFromOPARequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAuthorizeResultFromOPARequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAuthorizeResultFromOPARequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAuthorizeResultFromOPARequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizeResultFromOPARequest.Merge(m, src)
}
func (m *GetAuthorizeResultFromOPARequest) XXX_Size() int {
	return m.Size()
}
func (m *GetAuthorizeResultFromOPARequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizeResultFromOPARequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizeResultFromOPARequest proto.InternalMessageInfo

func (m *GetAuthorizeResultFromOPARequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetAuthorizeResultFromOPARequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *GetAuthorizeResultFromOPARequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *GetAuthorizeResultFromOPARequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetAuthorizeResultFromOPARequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type GetAuthorizeResultFromOPAResult struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (m *GetAuthorizeResultFromOPAResult) Reset()      { *m = GetAuthorizeResultFromOPAResult{} }
func (*GetAuthorizeResultFromOPAResult) ProtoMessage() {}
func (*GetAuthorizeResultFromOPAResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{35}
}
func (m *GetAuthorizeResultFromOPAResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAuthorizeResultFromOPAResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAuthorizeResultFromOPAResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAuthorizeResultFromOPAResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizeResultFromOPAResult.Merge(m, src)
}
func (m *GetAuthorizeResultFromOPAResult) XXX_Size() int {
	return m.Size()
}
func (m *GetAuthorizeResultFromOPAResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizeResultFromOPAResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizeResultFromOPAResult proto.InternalMessageInfo

func (m *GetAuthorizeResultFromOPAResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type AssignAccountRequest struct {
	CustomerName        string `protobuf:"bytes,1,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	SalesforceAccountId string `protobuf:"bytes,2,opt,name=salesforce_account_id,json=salesforceAccountId,proto3" json:"salesforce_account_id,omitempty"`
}

func (m *AssignAccountRequest) Reset()      { *m = AssignAccountRequest{} }
func (*AssignAccountRequest) ProtoMessage() {}
func (*AssignAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{36}
}
func (m *AssignAccountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssignAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssignAccountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssignAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignAccountRequest.Merge(m, src)
}
func (m *AssignAccountRequest) XXX_Size() int {
	return m.Size()
}
func (m *AssignAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignAccountRequest proto.InternalMessageInfo

func (m *AssignAccountRequest) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *AssignAccountRequest) GetSalesforceAccountId() string {
	if m != nil {
		return m.SalesforceAccountId
	}
	return ""
}

type AssignAccountResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *AssignAccountResponse) Reset()      { *m = AssignAccountResponse{} }
func (*AssignAccountResponse) ProtoMessage() {}
func (*AssignAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{37}
}
func (m *AssignAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssignAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssignAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssignAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignAccountResponse.Merge(m, src)
}
func (m *AssignAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *AssignAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignAccountResponse proto.InternalMessageInfo

func (m *AssignAccountResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type ExpandAccountPoolRequest struct {
	ExpansionSize int32 `protobuf:"varint,1,opt,name=expansion_size,json=expansionSize,proto3" json:"expansion_size,omitempty"`
}

func (m *ExpandAccountPoolRequest) Reset()      { *m = ExpandAccountPoolRequest{} }
func (*ExpandAccountPoolRequest) ProtoMessage() {}
func (*ExpandAccountPoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{38}
}
func (m *ExpandAccountPoolRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExpandAccountPoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExpandAccountPoolRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExpandAccountPoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandAccountPoolRequest.Merge(m, src)
}
func (m *ExpandAccountPoolRequest) XXX_Size() int {
	return m.Size()
}
func (m *ExpandAccountPoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandAccountPoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandAccountPoolRequest proto.InternalMessageInfo

func (m *ExpandAccountPoolRequest) GetExpansionSize() int32 {
	if m != nil {
		return m.ExpansionSize
	}
	return 0
}

type ExpandAccountPoolResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *ExpandAccountPoolResponse) Reset()      { *m = ExpandAccountPoolResponse{} }
func (*ExpandAccountPoolResponse) ProtoMessage() {}
func (*ExpandAccountPoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{39}
}
func (m *ExpandAccountPoolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExpandAccountPoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExpandAccountPoolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExpandAccountPoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandAccountPoolResponse.Merge(m, src)
}
func (m *ExpandAccountPoolResponse) XXX_Size() int {
	return m.Size()
}
func (m *ExpandAccountPoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandAccountPoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandAccountPoolResponse proto.InternalMessageInfo

func (m *ExpandAccountPoolResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type InitializeAccountRequest struct {
	AccountId                  string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountWildcardCertificate bool   `protobuf:"varint,2,opt,name=account_wildcard_certificate,json=accountWildcardCertificate,proto3" json:"account_wildcard_certificate,omitempty"`
	AwsExternalId              bool   `protobuf:"varint,3,opt,name=aws_external_id,json=awsExternalId,proto3" json:"aws_external_id,omitempty"`
	SalesforceAccountId        string `protobuf:"bytes,4,opt,name=salesforce_account_id,json=salesforceAccountId,proto3" json:"salesforce_account_id,omitempty"`
}

func (m *InitializeAccountRequest) Reset()      { *m = InitializeAccountRequest{} }
func (*InitializeAccountRequest) ProtoMessage() {}
func (*InitializeAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{40}
}
func (m *InitializeAccountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InitializeAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InitializeAccountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InitializeAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeAccountRequest.Merge(m, src)
}
func (m *InitializeAccountRequest) XXX_Size() int {
	return m.Size()
}
func (m *InitializeAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeAccountRequest proto.InternalMessageInfo

func (m *InitializeAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *InitializeAccountRequest) GetAccountWildcardCertificate() bool {
	if m != nil {
		return m.AccountWildcardCertificate
	}
	return false
}

func (m *InitializeAccountRequest) GetAwsExternalId() bool {
	if m != nil {
		return m.AwsExternalId
	}
	return false
}

func (m *InitializeAccountRequest) GetSalesforceAccountId() string {
	if m != nil {
		return m.SalesforceAccountId
	}
	return ""
}

type InitializeAccountResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *InitializeAccountResponse) Reset()      { *m = InitializeAccountResponse{} }
func (*InitializeAccountResponse) ProtoMessage() {}
func (*InitializeAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{41}
}
func (m *InitializeAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InitializeAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InitializeAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InitializeAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeAccountResponse.Merge(m, src)
}
func (m *InitializeAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *InitializeAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeAccountResponse proto.InternalMessageInfo

func (m *InitializeAccountResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type SyncPolicyConfigRequest struct {
}

func (m *SyncPolicyConfigRequest) Reset()      { *m = SyncPolicyConfigRequest{} }
func (*SyncPolicyConfigRequest) ProtoMessage() {}
func (*SyncPolicyConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{42}
}
func (m *SyncPolicyConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncPolicyConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncPolicyConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncPolicyConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncPolicyConfigRequest.Merge(m, src)
}
func (m *SyncPolicyConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *SyncPolicyConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncPolicyConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncPolicyConfigRequest proto.InternalMessageInfo

type SyncPolicyConfigResponse struct {
}

func (m *SyncPolicyConfigResponse) Reset()      { *m = SyncPolicyConfigResponse{} }
func (*SyncPolicyConfigResponse) ProtoMessage() {}
func (*SyncPolicyConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{43}
}
func (m *SyncPolicyConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncPolicyConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncPolicyConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncPolicyConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncPolicyConfigResponse.Merge(m, src)
}
func (m *SyncPolicyConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *SyncPolicyConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncPolicyConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncPolicyConfigResponse proto.InternalMessageInfo

type BackfillRolesRequest struct {
	BackfillResourceRoles      bool     `protobuf:"varint,1,opt,name=backfill_resource_roles,json=backfillResourceRoles,proto3" json:"backfill_resource_roles,omitempty"`
	BackfillInternalRoles      bool     `protobuf:"varint,2,opt,name=backfill_internal_roles,json=backfillInternalRoles,proto3" json:"backfill_internal_roles,omitempty"`
	BackfillTemporalAdminsRole bool     `protobuf:"varint,3,opt,name=backfill_temporal_admins_role,json=backfillTemporalAdminsRole,proto3" json:"backfill_temporal_admins_role,omitempty"`
	AccountsFilter             []string `protobuf:"bytes,4,rep,name=accounts_filter,json=accountsFilter,proto3" json:"accounts_filter,omitempty"`
}

func (m *BackfillRolesRequest) Reset()      { *m = BackfillRolesRequest{} }
func (*BackfillRolesRequest) ProtoMessage() {}
func (*BackfillRolesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{44}
}
func (m *BackfillRolesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BackfillRolesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BackfillRolesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BackfillRolesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackfillRolesRequest.Merge(m, src)
}
func (m *BackfillRolesRequest) XXX_Size() int {
	return m.Size()
}
func (m *BackfillRolesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackfillRolesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackfillRolesRequest proto.InternalMessageInfo

func (m *BackfillRolesRequest) GetBackfillResourceRoles() bool {
	if m != nil {
		return m.BackfillResourceRoles
	}
	return false
}

func (m *BackfillRolesRequest) GetBackfillInternalRoles() bool {
	if m != nil {
		return m.BackfillInternalRoles
	}
	return false
}

func (m *BackfillRolesRequest) GetBackfillTemporalAdminsRole() bool {
	if m != nil {
		return m.BackfillTemporalAdminsRole
	}
	return false
}

func (m *BackfillRolesRequest) GetAccountsFilter() []string {
	if m != nil {
		return m.AccountsFilter
	}
	return nil
}

type BackfillRolesResponse struct {
}

func (m *BackfillRolesResponse) Reset()      { *m = BackfillRolesResponse{} }
func (*BackfillRolesResponse) ProtoMessage() {}
func (*BackfillRolesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{45}
}
func (m *BackfillRolesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BackfillRolesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BackfillRolesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BackfillRolesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackfillRolesResponse.Merge(m, src)
}
func (m *BackfillRolesResponse) XXX_Size() int {
	return m.Size()
}
func (m *BackfillRolesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackfillRolesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackfillRolesResponse proto.InternalMessageInfo

type MigrateNamespaceRequest struct {
	Namespace                               string  `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TargetCell                              string  `protobuf:"bytes,2,opt,name=target_cell,json=targetCell,proto3" json:"target_cell,omitempty"`
	SkipForceReplication                    bool    `protobuf:"varint,3,opt,name=skip_force_replication,json=skipForceReplication,proto3" json:"skip_force_replication,omitempty"`
	SkipDisconnectingClusters               bool    `protobuf:"varint,4,opt,name=skip_disconnecting_clusters,json=skipDisconnectingClusters,proto3" json:"skip_disconnecting_clusters,omitempty"`
	SkipUpdatingReplicationConfig           bool    `protobuf:"varint,5,opt,name=skip_updating_replication_config,json=skipUpdatingReplicationConfig,proto3" json:"skip_updating_replication_config,omitempty"`
	WaitForSignalBeforeDisconnecting        bool    `protobuf:"varint,6,opt,name=wait_for_signal_before_disconnecting,json=waitForSignalBeforeDisconnecting,proto3" json:"wait_for_signal_before_disconnecting,omitempty"`
	ForceReplicationOverallRps              float64 `protobuf:"fixed64,7,opt,name=force_replication_overall_rps,json=forceReplicationOverallRps,proto3" json:"force_replication_overall_rps,omitempty"`
	ForceReplicationConcurrentActivityCount int32   `protobuf:"varint,8,opt,name=force_replication_concurrent_activity_count,json=forceReplicationConcurrentActivityCount,proto3" json:"force_replication_concurrent_activity_count,omitempty"`
	HandoverAllowedLaggingSeconds           int64   `protobuf:"varint,9,opt,name=handover_allowed_lagging_seconds,json=handoverAllowedLaggingSeconds,proto3" json:"handover_allowed_lagging_seconds,omitempty"`
	HandoverAllowedLaggingTasks             int64   `protobuf:"varint,10,opt,name=handover_allowed_lagging_tasks,json=handoverAllowedLaggingTasks,proto3" json:"handover_allowed_lagging_tasks,omitempty"`
	UntrustedCertOk                         bool    `protobuf:"varint,11,opt,name=untrusted_cert_ok,json=untrustedCertOk,proto3" json:"untrusted_cert_ok,omitempty"`
}

func (m *MigrateNamespaceRequest) Reset()      { *m = MigrateNamespaceRequest{} }
func (*MigrateNamespaceRequest) ProtoMessage() {}
func (*MigrateNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{46}
}
func (m *MigrateNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MigrateNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MigrateNamespaceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MigrateNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateNamespaceRequest.Merge(m, src)
}
func (m *MigrateNamespaceRequest) XXX_Size() int {
	return m.Size()
}
func (m *MigrateNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateNamespaceRequest proto.InternalMessageInfo

func (m *MigrateNamespaceRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *MigrateNamespaceRequest) GetTargetCell() string {
	if m != nil {
		return m.TargetCell
	}
	return ""
}

func (m *MigrateNamespaceRequest) GetSkipForceReplication() bool {
	if m != nil {
		return m.SkipForceReplication
	}
	return false
}

func (m *MigrateNamespaceRequest) GetSkipDisconnectingClusters() bool {
	if m != nil {
		return m.SkipDisconnectingClusters
	}
	return false
}

func (m *MigrateNamespaceRequest) GetSkipUpdatingReplicationConfig() bool {
	if m != nil {
		return m.SkipUpdatingReplicationConfig
	}
	return false
}

func (m *MigrateNamespaceRequest) GetWaitForSignalBeforeDisconnecting() bool {
	if m != nil {
		return m.WaitForSignalBeforeDisconnecting
	}
	return false
}

func (m *MigrateNamespaceRequest) GetForceReplicationOverallRps() float64 {
	if m != nil {
		return m.ForceReplicationOverallRps
	}
	return 0
}

func (m *MigrateNamespaceRequest) GetForceReplicationConcurrentActivityCount() int32 {
	if m != nil {
		return m.ForceReplicationConcurrentActivityCount
	}
	return 0
}

func (m *MigrateNamespaceRequest) GetHandoverAllowedLaggingSeconds() int64 {
	if m != nil {
		return m.HandoverAllowedLaggingSeconds
	}
	return 0
}

func (m *MigrateNamespaceRequest) GetHandoverAllowedLaggingTasks() int64 {
	if m != nil {
		return m.HandoverAllowedLaggingTasks
	}
	return 0
}

func (m *MigrateNamespaceRequest) GetUntrustedCertOk() bool {
	if m != nil {
		return m.UntrustedCertOk
	}
	return false
}

type MigrateNamespaceResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *MigrateNamespaceResponse) Reset()      { *m = MigrateNamespaceResponse{} }
func (*MigrateNamespaceResponse) ProtoMessage() {}
func (*MigrateNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{47}
}
func (m *MigrateNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MigrateNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MigrateNamespaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MigrateNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateNamespaceResponse.Merge(m, src)
}
func (m *MigrateNamespaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MigrateNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateNamespaceResponse proto.InternalMessageInfo

func (m *MigrateNamespaceResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type MigrationInfo struct {
	Namespace            string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SkipForceReplication bool   `protobuf:"varint,2,opt,name=skip_force_replication,json=skipForceReplication,proto3" json:"skip_force_replication,omitempty"`
	UntrustedCertOk      bool   `protobuf:"varint,3,opt,name=untrusted_cert_ok,json=untrustedCertOk,proto3" json:"untrusted_cert_ok,omitempty"`
}

func (m *MigrationInfo) Reset()      { *m = MigrationInfo{} }
func (*MigrationInfo) ProtoMessage() {}
func (*MigrationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{48}
}
func (m *MigrationInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MigrationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MigrationInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MigrationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationInfo.Merge(m, src)
}
func (m *MigrationInfo) XXX_Size() int {
	return m.Size()
}
func (m *MigrationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationInfo proto.InternalMessageInfo

func (m *MigrationInfo) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *MigrationInfo) GetSkipForceReplication() bool {
	if m != nil {
		return m.SkipForceReplication
	}
	return false
}

func (m *MigrationInfo) GetUntrustedCertOk() bool {
	if m != nil {
		return m.UntrustedCertOk
	}
	return false
}

type BatchMigrateNamespacesRequest struct {
	SourceCell                              string           `protobuf:"bytes,1,opt,name=source_cell,json=sourceCell,proto3" json:"source_cell,omitempty"`
	TargetCell                              string           `protobuf:"bytes,2,opt,name=target_cell,json=targetCell,proto3" json:"target_cell,omitempty"`
	MigrationList                           []*MigrationInfo `protobuf:"bytes,3,rep,name=migration_list,json=migrationList,proto3" json:"migration_list,omitempty"`
	ForceReplicationOverallRps              float64          `protobuf:"fixed64,4,opt,name=force_replication_overall_rps,json=forceReplicationOverallRps,proto3" json:"force_replication_overall_rps,omitempty"`
	ForceReplicationConcurrentActivityCount int32            `protobuf:"varint,5,opt,name=force_replication_concurrent_activity_count,json=forceReplicationConcurrentActivityCount,proto3" json:"force_replication_concurrent_activity_count,omitempty"`
	HandoverAllowedLaggingSeconds           int64            `protobuf:"varint,6,opt,name=handover_allowed_lagging_seconds,json=handoverAllowedLaggingSeconds,proto3" json:"handover_allowed_lagging_seconds,omitempty"`
	HandoverAllowedLaggingTasks             int64            `protobuf:"varint,7,opt,name=handover_allowed_lagging_tasks,json=handoverAllowedLaggingTasks,proto3" json:"handover_allowed_lagging_tasks,omitempty"`
	HandoverTimeoutSeconds                  int32            `protobuf:"varint,8,opt,name=handover_timeout_seconds,json=handoverTimeoutSeconds,proto3" json:"handover_timeout_seconds,omitempty"`
	Concurrency                             int32            `protobuf:"varint,9,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
}

func (m *BatchMigrateNamespacesRequest) Reset()      { *m = BatchMigrateNamespacesRequest{} }
func (*BatchMigrateNamespacesRequest) ProtoMessage() {}
func (*BatchMigrateNamespacesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{49}
}
func (m *BatchMigrateNamespacesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BatchMigrateNamespacesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BatchMigrateNamespacesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BatchMigrateNamespacesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchMigrateNamespacesRequest.Merge(m, src)
}
func (m *BatchMigrateNamespacesRequest) XXX_Size() int {
	return m.Size()
}
func (m *BatchMigrateNamespacesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchMigrateNamespacesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchMigrateNamespacesRequest proto.InternalMessageInfo

func (m *BatchMigrateNamespacesRequest) GetSourceCell() string {
	if m != nil {
		return m.SourceCell
	}
	return ""
}

func (m *BatchMigrateNamespacesRequest) GetTargetCell() string {
	if m != nil {
		return m.TargetCell
	}
	return ""
}

func (m *BatchMigrateNamespacesRequest) GetMigrationList() []*MigrationInfo {
	if m != nil {
		return m.MigrationList
	}
	return nil
}

func (m *BatchMigrateNamespacesRequest) GetForceReplicationOverallRps() float64 {
	if m != nil {
		return m.ForceReplicationOverallRps
	}
	return 0
}

func (m *BatchMigrateNamespacesRequest) GetForceReplicationConcurrentActivityCount() int32 {
	if m != nil {
		return m.ForceReplicationConcurrentActivityCount
	}
	return 0
}

func (m *BatchMigrateNamespacesRequest) GetHandoverAllowedLaggingSeconds() int64 {
	if m != nil {
		return m.HandoverAllowedLaggingSeconds
	}
	return 0
}

func (m *BatchMigrateNamespacesRequest) GetHandoverAllowedLaggingTasks() int64 {
	if m != nil {
		return m.HandoverAllowedLaggingTasks
	}
	return 0
}

func (m *BatchMigrateNamespacesRequest) GetHandoverTimeoutSeconds() int32 {
	if m != nil {
		return m.HandoverTimeoutSeconds
	}
	return 0
}

func (m *BatchMigrateNamespacesRequest) GetConcurrency() int32 {
	if m != nil {
		return m.Concurrency
	}
	return 0
}

type BatchMigrateNamespacesResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *BatchMigrateNamespacesResponse) Reset()      { *m = BatchMigrateNamespacesResponse{} }
func (*BatchMigrateNamespacesResponse) ProtoMessage() {}
func (*BatchMigrateNamespacesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{50}
}
func (m *BatchMigrateNamespacesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BatchMigrateNamespacesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BatchMigrateNamespacesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BatchMigrateNamespacesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchMigrateNamespacesResponse.Merge(m, src)
}
func (m *BatchMigrateNamespacesResponse) XXX_Size() int {
	return m.Size()
}
func (m *BatchMigrateNamespacesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchMigrateNamespacesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchMigrateNamespacesResponse proto.InternalMessageInfo

func (m *BatchMigrateNamespacesResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type ListRolesRequest struct {
	PageSize      int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	RootAccountId string `protobuf:"bytes,3,opt,name=root_account_id,json=rootAccountId,proto3" json:"root_account_id,omitempty"`
}

func (m *ListRolesRequest) Reset()      { *m = ListRolesRequest{} }
func (*ListRolesRequest) ProtoMessage() {}
func (*ListRolesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{51}
}
func (m *ListRolesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListRolesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListRolesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListRolesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRolesRequest.Merge(m, src)
}
func (m *ListRolesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListRolesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRolesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRolesRequest proto.InternalMessageInfo

func (m *ListRolesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRolesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListRolesRequest) GetRootAccountId() string {
	if m != nil {
		return m.RootAccountId
	}
	return ""
}

type ListRolesResponse struct {
	NextPageToken string   `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Roles         []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (m *ListRolesResponse) Reset()      { *m = ListRolesResponse{} }
func (*ListRolesResponse) ProtoMessage() {}
func (*ListRolesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{52}
}
func (m *ListRolesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListRolesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListRolesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListRolesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRolesResponse.Merge(m, src)
}
func (m *ListRolesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListRolesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRolesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRolesResponse proto.InternalMessageInfo

func (m *ListRolesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListRolesResponse) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type UpsertAccountRolesRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (m *UpsertAccountRolesRequest) Reset()      { *m = UpsertAccountRolesRequest{} }
func (*UpsertAccountRolesRequest) ProtoMessage() {}
func (*UpsertAccountRolesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{53}
}
func (m *UpsertAccountRolesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpsertAccountRolesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpsertAccountRolesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpsertAccountRolesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertAccountRolesRequest.Merge(m, src)
}
func (m *UpsertAccountRolesRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpsertAccountRolesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertAccountRolesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertAccountRolesRequest proto.InternalMessageInfo

func (m *UpsertAccountRolesRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type UpsertAccountRolesResponse struct {
}

func (m *UpsertAccountRolesResponse) Reset()      { *m = UpsertAccountRolesResponse{} }
func (*UpsertAccountRolesResponse) ProtoMessage() {}
func (*UpsertAccountRolesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{54}
}
func (m *UpsertAccountRolesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpsertAccountRolesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpsertAccountRolesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpsertAccountRolesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertAccountRolesResponse.Merge(m, src)
}
func (m *UpsertAccountRolesResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpsertAccountRolesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertAccountRolesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertAccountRolesResponse proto.InternalMessageInfo

type PlannerDryRunRequest struct {
	ResourceManagerConfig []byte `protobuf:"bytes,1,opt,name=resource_manager_config,json=resourceManagerConfig,proto3" json:"resource_manager_config,omitempty"`
	PlannerData           []byte `protobuf:"bytes,2,opt,name=planner_data,json=plannerData,proto3" json:"planner_data,omitempty"`
}

func (m *PlannerDryRunRequest) Reset()      { *m = PlannerDryRunRequest{} }
func (*PlannerDryRunRequest) ProtoMessage() {}
func (*PlannerDryRunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{55}
}
func (m *PlannerDryRunRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlannerDryRunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlannerDryRunRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlannerDryRunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlannerDryRunRequest.Merge(m, src)
}
func (m *PlannerDryRunRequest) XXX_Size() int {
	return m.Size()
}
func (m *PlannerDryRunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlannerDryRunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlannerDryRunRequest proto.InternalMessageInfo

func (m *PlannerDryRunRequest) GetResourceManagerConfig() []byte {
	if m != nil {
		return m.ResourceManagerConfig
	}
	return nil
}

func (m *PlannerDryRunRequest) GetPlannerData() []byte {
	if m != nil {
		return m.PlannerData
	}
	return nil
}

type PlannerDryRunResponse struct {
	Proposals []string `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	DebugInfo string   `protobuf:"bytes,2,opt,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"`
}

func (m *PlannerDryRunResponse) Reset()      { *m = PlannerDryRunResponse{} }
func (*PlannerDryRunResponse) ProtoMessage() {}
func (*PlannerDryRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{56}
}
func (m *PlannerDryRunResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlannerDryRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlannerDryRunResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlannerDryRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlannerDryRunResponse.Merge(m, src)
}
func (m *PlannerDryRunResponse) XXX_Size() int {
	return m.Size()
}
func (m *PlannerDryRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlannerDryRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlannerDryRunResponse proto.InternalMessageInfo

func (m *PlannerDryRunResponse) GetProposals() []string {
	if m != nil {
		return m.Proposals
	}
	return nil
}

func (m *PlannerDryRunResponse) GetDebugInfo() string {
	if m != nil {
		return m.DebugInfo
	}
	return ""
}

type ListUsersRequest struct {
	Base *ListResourcesRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// If not set, list all users in db.
	RootAccountId string `protobuf:"bytes,2,opt,name=root_account_id,json=rootAccountId,proto3" json:"root_account_id,omitempty"`
}

func (m *ListUsersRequest) Reset()      { *m = ListUsersRequest{} }
func (*ListUsersRequest) ProtoMessage() {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{57}
}
func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetBase() *ListResourcesRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ListUsersRequest) GetRootAccountId() string {
	if m != nil {
		return m.RootAccountId
	}
	return ""
}

type ProvisionAccountRequest struct {
	CustomerName        string   `protobuf:"bytes,1,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	AdminEmails         []string `protobuf:"bytes,2,rep,name=admin_emails,json=adminEmails,proto3" json:"admin_emails,omitempty"`
	SalesforceAccountId string   `protobuf:"bytes,3,opt,name=salesforce_account_id,json=salesforceAccountId,proto3" json:"salesforce_account_id,omitempty"`
}

func (m *ProvisionAccountRequest) Reset()      { *m = ProvisionAccountRequest{} }
func (*ProvisionAccountRequest) ProtoMessage() {}
func (*ProvisionAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{58}
}
func (m *ProvisionAccountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProvisionAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProvisionAccountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProvisionAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionAccountRequest.Merge(m, src)
}
func (m *ProvisionAccountRequest) XXX_Size() int {
	return m.Size()
}
func (m *ProvisionAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionAccountRequest proto.InternalMessageInfo

func (m *ProvisionAccountRequest) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *ProvisionAccountRequest) GetAdminEmails() []string {
	if m != nil {
		return m.AdminEmails
	}
	return nil
}

func (m *ProvisionAccountRequest) GetSalesforceAccountId() string {
	if m != nil {
		return m.SalesforceAccountId
	}
	return ""
}

type ProvisionAccountResponse struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (m *ProvisionAccountResponse) Reset()      { *m = ProvisionAccountResponse{} }
func (*ProvisionAccountResponse) ProtoMessage() {}
func (*ProvisionAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{59}
}
func (m *ProvisionAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProvisionAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProvisionAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProvisionAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionAccountResponse.Merge(m, src)
}
func (m *ProvisionAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *ProvisionAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionAccountResponse proto.InternalMessageInfo

func (m *ProvisionAccountResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type DeleteAccountRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (m *DeleteAccountRequest) Reset()      { *m = DeleteAccountRequest{} }
func (*DeleteAccountRequest) ProtoMessage() {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{60}
}
func (m *DeleteAccountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteAccountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountRequest.Merge(m, src)
}
func (m *DeleteAccountRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountRequest proto.InternalMessageInfo

func (m *DeleteAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type DeleteAccountResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *DeleteAccountResponse) Reset()      { *m = DeleteAccountResponse{} }
func (*DeleteAccountResponse) ProtoMessage() {}
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{61}
}
func (m *DeleteAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountResponse.Merge(m, src)
}
func (m *DeleteAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountResponse proto.InternalMessageInfo

func (m *DeleteAccountResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type GetRequestStatusRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *GetRequestStatusRequest) Reset()      { *m = GetRequestStatusRequest{} }
func (*GetRequestStatusRequest) ProtoMessage() {}
func (*GetRequestStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{62}
}
func (m *GetRequestStatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRequestStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRequestStatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRequestStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequestStatusRequest.Merge(m, src)
}
func (m *GetRequestStatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetRequestStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequestStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequestStatusRequest proto.InternalMessageInfo

func (m *GetRequestStatusRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetRequestStatusRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type GetRequestStatusResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *GetRequestStatusResponse) Reset()      { *m = GetRequestStatusResponse{} }
func (*GetRequestStatusResponse) ProtoMessage() {}
func (*GetRequestStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{63}
}
func (m *GetRequestStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetRequestStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetRequestStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetRequestStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequestStatusResponse.Merge(m, src)
}
func (m *GetRequestStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetRequestStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequestStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequestStatusResponse proto.InternalMessageInfo

func (m *GetRequestStatusResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type ValidateResourceManagerDataRequest struct {
}

func (m *ValidateResourceManagerDataRequest) Reset()      { *m = ValidateResourceManagerDataRequest{} }
func (*ValidateResourceManagerDataRequest) ProtoMessage() {}
func (*ValidateResourceManagerDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{64}
}
func (m *ValidateResourceManagerDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateResourceManagerDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateResourceManagerDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateResourceManagerDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateResourceManagerDataRequest.Merge(m, src)
}
func (m *ValidateResourceManagerDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *ValidateResourceManagerDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateResourceManagerDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateResourceManagerDataRequest proto.InternalMessageInfo

type ValidateResourceManagerDataResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *ValidateResourceManagerDataResponse) Reset()      { *m = ValidateResourceManagerDataResponse{} }
func (*ValidateResourceManagerDataResponse) ProtoMessage() {}
func (*ValidateResourceManagerDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{65}
}
func (m *ValidateResourceManagerDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateResourceManagerDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateResourceManagerDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateResourceManagerDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateResourceManagerDataResponse.Merge(m, src)
}
func (m *ValidateResourceManagerDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *ValidateResourceManagerDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateResourceManagerDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateResourceManagerDataResponse proto.InternalMessageInfo

func (m *ValidateResourceManagerDataResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateSAMLConnectionRequest struct {
	AccountId                string            `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	SignInUrl                string            `protobuf:"bytes,2,opt,name=sign_in_url,json=signInUrl,proto3" json:"sign_in_url,omitempty"`
	X509Certificate          string            `protobuf:"bytes,3,opt,name=x509_certificate,json=x509Certificate,proto3" json:"x509_certificate,omitempty"`
	IdentityProviderDomains  []string          `protobuf:"bytes,4,rep,name=identity_provider_domains,json=identityProviderDomains,proto3" json:"identity_provider_domains,omitempty"`
	EnableIdpInitiatedSso    bool              `protobuf:"varint,5,opt,name=enable_idp_initiated_sso,json=enableIdpInitiatedSso,proto3" json:"enable_idp_initiated_sso,omitempty"`
	DisableSignRequest       bool              `protobuf:"varint,6,opt,name=disable_sign_request,json=disableSignRequest,proto3" json:"disable_sign_request,omitempty"`
	AttributeMappings        map[string]string `protobuf:"bytes,7,rep,name=attribute_mappings,json=attributeMappings,proto3" json:"attribute_mappings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EnableSamlOrganization   bool              `protobuf:"varint,8,opt,name=enable_saml_organization,json=enableSamlOrganization,proto3" json:"enable_saml_organization,omitempty"`
	EnableSamlOnlyConnection bool              `protobuf:"varint,9,opt,name=enable_saml_only_connection,json=enableSamlOnlyConnection,proto3" json:"enable_saml_only_connection,omitempty"`
}

func (m *CreateSAMLConnectionRequest) Reset()      { *m = CreateSAMLConnectionRequest{} }
func (*CreateSAMLConnectionRequest) ProtoMessage() {}
func (*CreateSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{66}
}
func (m *CreateSAMLConnectionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateSAMLConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateSAMLConnectionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateSAMLConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSAMLConnectionRequest.Merge(m, src)
}
func (m *CreateSAMLConnectionRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateSAMLConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSAMLConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSAMLConnectionRequest proto.InternalMessageInfo

func (m *CreateSAMLConnectionRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CreateSAMLConnectionRequest) GetSignInUrl() string {
	if m != nil {
		return m.SignInUrl
	}
	return ""
}

func (m *CreateSAMLConnectionRequest) GetX509Certificate() string {
	if m != nil {
		return m.X509Certificate
	}
	return ""
}

func (m *CreateSAMLConnectionRequest) GetIdentityProviderDomains() []string {
	if m != nil {
		return m.IdentityProviderDomains
	}
	return nil
}

func (m *CreateSAMLConnectionRequest) GetEnableIdpInitiatedSso() bool {
	if m != nil {
		return m.EnableIdpInitiatedSso
	}
	return false
}

func (m *CreateSAMLConnectionRequest) GetDisableSignRequest() bool {
	if m != nil {
		return m.DisableSignRequest
	}
	return false
}

func (m *CreateSAMLConnectionRequest) GetAttributeMappings() map[string]string {
	if m != nil {
		return m.AttributeMappings
	}
	return nil
}

func (m *CreateSAMLConnectionRequest) GetEnableSamlOrganization() bool {
	if m != nil {
		return m.EnableSamlOrganization
	}
	return false
}

func (m *CreateSAMLConnectionRequest) GetEnableSamlOnlyConnection() bool {
	if m != nil {
		return m.EnableSamlOnlyConnection
	}
	return false
}

type CreateSAMLConnectionResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *CreateSAMLConnectionResponse) Reset()      { *m = CreateSAMLConnectionResponse{} }
func (*CreateSAMLConnectionResponse) ProtoMessage() {}
func (*CreateSAMLConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{67}
}
func (m *CreateSAMLConnectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateSAMLConnectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateSAMLConnectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateSAMLConnectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSAMLConnectionResponse.Merge(m, src)
}
func (m *CreateSAMLConnectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateSAMLConnectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSAMLConnectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSAMLConnectionResponse proto.InternalMessageInfo

func (m *CreateSAMLConnectionResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type CreateInternalAPIKeyRequest struct {
	RoleNames         []string `protobuf:"bytes,1,rep,name=role_names,json=roleNames,proto3" json:"role_names,omitempty"`
	SyncRolesToPolicy bool     `protobuf:"varint,2,opt,name=sync_roles_to_policy,json=syncRolesToPolicy,proto3" json:"sync_roles_to_policy,omitempty"`
}

func (m *CreateInternalAPIKeyRequest) Reset()      { *m = CreateInternalAPIKeyRequest{} }
func (*CreateInternalAPIKeyRequest) ProtoMessage() {}
func (*CreateInternalAPIKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{68}
}
func (m *CreateInternalAPIKeyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateInternalAPIKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateInternalAPIKeyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateInternalAPIKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInternalAPIKeyRequest.Merge(m, src)
}
func (m *CreateInternalAPIKeyRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateInternalAPIKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInternalAPIKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInternalAPIKeyRequest proto.InternalMessageInfo

func (m *CreateInternalAPIKeyRequest) GetRoleNames() []string {
	if m != nil {
		return m.RoleNames
	}
	return nil
}

func (m *CreateInternalAPIKeyRequest) GetSyncRolesToPolicy() bool {
	if m != nil {
		return m.SyncRolesToPolicy
	}
	return false
}

type CreateInternalAPIKeyResponse struct {
	KeyId     string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
}

func (m *CreateInternalAPIKeyResponse) Reset()      { *m = CreateInternalAPIKeyResponse{} }
func (*CreateInternalAPIKeyResponse) ProtoMessage() {}
func (*CreateInternalAPIKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{69}
}
func (m *CreateInternalAPIKeyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateInternalAPIKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateInternalAPIKeyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateInternalAPIKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInternalAPIKeyResponse.Merge(m, src)
}
func (m *CreateInternalAPIKeyResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateInternalAPIKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInternalAPIKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInternalAPIKeyResponse proto.InternalMessageInfo

func (m *CreateInternalAPIKeyResponse) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *CreateInternalAPIKeyResponse) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

type GrantEphemeralRoleRequest struct {
	UserEmail string          `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RoleId    string          `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Ttl       *types.Duration `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Reason    string          `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	RequestId string          `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *GrantEphemeralRoleRequest) Reset()      { *m = GrantEphemeralRoleRequest{} }
func (*GrantEphemeralRoleRequest) ProtoMessage() {}
func (*GrantEphemeralRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{70}
}
func (m *GrantEphemeralRoleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantEphemeralRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantEphemeralRoleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantEphemeralRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantEphemeralRoleRequest.Merge(m, src)
}
func (m *GrantEphemeralRoleRequest) XXX_Size() int {
	return m.Size()
}
func (m *GrantEphemeralRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantEphemeralRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GrantEphemeralRoleRequest proto.InternalMessageInfo

func (m *GrantEphemeralRoleRequest) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *GrantEphemeralRoleRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *GrantEphemeralRoleRequest) GetTtl() *types.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

func (m *GrantEphemeralRoleRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *GrantEphemeralRoleRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type GrantEphemeralRoleResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *GrantEphemeralRoleResponse) Reset()      { *m = GrantEphemeralRoleResponse{} }
func (*GrantEphemeralRoleResponse) ProtoMessage() {}
func (*GrantEphemeralRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{71}
}
func (m *GrantEphemeralRoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantEphemeralRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantEphemeralRoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantEphemeralRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantEphemeralRoleResponse.Merge(m, src)
}
func (m *GrantEphemeralRoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *GrantEphemeralRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantEphemeralRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GrantEphemeralRoleResponse proto.InternalMessageInfo

func (m *GrantEphemeralRoleResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type GrantEphemeralReadRoleRequest struct {
	UserEmail  string          `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	ReadRoleId string          `protobuf:"bytes,2,opt,name=read_role_id,json=readRoleId,proto3" json:"read_role_id,omitempty"`
	Ttl        *types.Duration `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Reason     string          `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	RequestId  string          `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *GrantEphemeralReadRoleRequest) Reset()      { *m = GrantEphemeralReadRoleRequest{} }
func (*GrantEphemeralReadRoleRequest) ProtoMessage() {}
func (*GrantEphemeralReadRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{72}
}
func (m *GrantEphemeralReadRoleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantEphemeralReadRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantEphemeralReadRoleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantEphemeralReadRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantEphemeralReadRoleRequest.Merge(m, src)
}
func (m *GrantEphemeralReadRoleRequest) XXX_Size() int {
	return m.Size()
}
func (m *GrantEphemeralReadRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantEphemeralReadRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GrantEphemeralReadRoleRequest proto.InternalMessageInfo

func (m *GrantEphemeralReadRoleRequest) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *GrantEphemeralReadRoleRequest) GetReadRoleId() string {
	if m != nil {
		return m.ReadRoleId
	}
	return ""
}

func (m *GrantEphemeralReadRoleRequest) GetTtl() *types.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

func (m *GrantEphemeralReadRoleRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *GrantEphemeralReadRoleRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type GrantEphemeralReadRoleResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *GrantEphemeralReadRoleResponse) Reset()      { *m = GrantEphemeralReadRoleResponse{} }
func (*GrantEphemeralReadRoleResponse) ProtoMessage() {}
func (*GrantEphemeralReadRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{73}
}
func (m *GrantEphemeralReadRoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantEphemeralReadRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantEphemeralReadRoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantEphemeralReadRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantEphemeralReadRoleResponse.Merge(m, src)
}
func (m *GrantEphemeralReadRoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *GrantEphemeralReadRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantEphemeralReadRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GrantEphemeralReadRoleResponse proto.InternalMessageInfo

func (m *GrantEphemeralReadRoleResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type AddAstraCapacityRequest struct {
	CellId         string `protobuf:"bytes,1,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	CurrentCuCount int32  `protobuf:"varint,2,opt,name=current_cu_count,json=currentCuCount,proto3" json:"current_cu_count,omitempty"`
	TargetCuCount  int32  `protobuf:"varint,3,opt,name=target_cu_count,json=targetCuCount,proto3" json:"target_cu_count,omitempty"`
}

func (m *AddAstraCapacityRequest) Reset()      { *m = AddAstraCapacityRequest{} }
func (*AddAstraCapacityRequest) ProtoMessage() {}
func (*AddAstraCapacityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{74}
}
func (m *AddAstraCapacityRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddAstraCapacityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddAstraCapacityRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddAstraCapacityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAstraCapacityRequest.Merge(m, src)
}
func (m *AddAstraCapacityRequest) XXX_Size() int {
	return m.Size()
}
func (m *AddAstraCapacityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAstraCapacityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAstraCapacityRequest proto.InternalMessageInfo

func (m *AddAstraCapacityRequest) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *AddAstraCapacityRequest) GetCurrentCuCount() int32 {
	if m != nil {
		return m.CurrentCuCount
	}
	return 0
}

func (m *AddAstraCapacityRequest) GetTargetCuCount() int32 {
	if m != nil {
		return m.TargetCuCount
	}
	return 0
}

type AddAstraCapacityResponse struct {
	RequestStatus []byte `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *AddAstraCapacityResponse) Reset()      { *m = AddAstraCapacityResponse{} }
func (*AddAstraCapacityResponse) ProtoMessage() {}
func (*AddAstraCapacityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{75}
}
func (m *AddAstraCapacityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddAstraCapacityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddAstraCapacityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddAstraCapacityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAstraCapacityResponse.Merge(m, src)
}
func (m *AddAstraCapacityResponse) XXX_Size() int {
	return m.Size()
}
func (m *AddAstraCapacityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAstraCapacityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAstraCapacityResponse proto.InternalMessageInfo

func (m *AddAstraCapacityResponse) GetRequestStatus() []byte {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type CreateInternalRegionalNamespaceRequest struct {
	// The region to create this namespace in. If a namespace already exists, request will fail
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// The optional tag that is added to the namespace name to partition between cells in a region
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// If set, will provision the regional namespace on the specified cell instead of relying on the planner.
	// Specified cell must match the region, otherwise this request will fail
	PlacementOverrideCellId string `protobuf:"bytes,3,opt,name=placement_override_cell_id,json=placementOverrideCellId,proto3" json:"placement_override_cell_id,omitempty"`
}

func (m *CreateInternalRegionalNamespaceRequest) Reset() {
	*m = CreateInternalRegionalNamespaceRequest{}
}
func (*CreateInternalRegionalNamespaceRequest) ProtoMessage() {}
func (*CreateInternalRegionalNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{76}
}
func (m *CreateInternalRegionalNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateInternalRegionalNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateInternalRegionalNamespaceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateInternalRegionalNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInternalRegionalNamespaceRequest.Merge(m, src)
}
func (m *CreateInternalRegionalNamespaceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateInternalRegionalNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInternalRegionalNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInternalRegionalNamespaceRequest proto.InternalMessageInfo

func (m *CreateInternalRegionalNamespaceRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateInternalRegionalNamespaceRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *CreateInternalRegionalNamespaceRequest) GetPlacementOverrideCellId() string {
	if m != nil {
		return m.PlacementOverrideCellId
	}
	return ""
}

type CreateInternalRegionalNamespaceResponse struct {
	RequestStatus *v11.RequestStatus `protobuf:"bytes,1,opt,name=request_status,json=requestStatus,proto3" json:"request_status,omitempty"`
}

func (m *CreateInternalRegionalNamespaceResponse) Reset() {
	*m = CreateInternalRegionalNamespaceResponse{}
}
func (*CreateInternalRegionalNamespaceResponse) ProtoMessage() {}
func (*CreateInternalRegionalNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{77}
}
func (m *CreateInternalRegionalNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateInternalRegionalNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateInternalRegionalNamespaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateInternalRegionalNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInternalRegionalNamespaceResponse.Merge(m, src)
}
func (m *CreateInternalRegionalNamespaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateInternalRegionalNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInternalRegionalNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInternalRegionalNamespaceResponse proto.InternalMessageInfo

func (m *CreateInternalRegionalNamespaceResponse) GetRequestStatus() *v11.RequestStatus {
	if m != nil {
		return m.RequestStatus
	}
	return nil
}

type SyncTieredStorageLifecycleRulesRequest struct {
	// The region whose bucket(s) are to be synced
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (m *SyncTieredStorageLifecycleRulesRequest) Reset() {
	*m = SyncTieredStorageLifecycleRulesRequest{}
}
func (*SyncTieredStorageLifecycleRulesRequest) ProtoMessage() {}
func (*SyncTieredStorageLifecycleRulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{78}
}
func (m *SyncTieredStorageLifecycleRulesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncTieredStorageLifecycleRulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncTieredStorageLifecycleRulesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncTieredStorageLifecycleRulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncTieredStorageLifecycleRulesRequest.Merge(m, src)
}
func (m *SyncTieredStorageLifecycleRulesRequest) XXX_Size() int {
	return m.Size()
}
func (m *SyncTieredStorageLifecycleRulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncTieredStorageLifecycleRulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncTieredStorageLifecycleRulesRequest proto.InternalMessageInfo

func (m *SyncTieredStorageLifecycleRulesRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type SyncTieredStorageLifecycleRulesResponse struct {
}

func (m *SyncTieredStorageLifecycleRulesResponse) Reset() {
	*m = SyncTieredStorageLifecycleRulesResponse{}
}
func (*SyncTieredStorageLifecycleRulesResponse) ProtoMessage() {}
func (*SyncTieredStorageLifecycleRulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{79}
}
func (m *SyncTieredStorageLifecycleRulesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncTieredStorageLifecycleRulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncTieredStorageLifecycleRulesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncTieredStorageLifecycleRulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncTieredStorageLifecycleRulesResponse.Merge(m, src)
}
func (m *SyncTieredStorageLifecycleRulesResponse) XXX_Size() int {
	return m.Size()
}
func (m *SyncTieredStorageLifecycleRulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncTieredStorageLifecycleRulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncTieredStorageLifecycleRulesResponse proto.InternalMessageInfo

type EnableTieredStorageRequest struct {
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
}

func (m *EnableTieredStorageRequest) Reset()      { *m = EnableTieredStorageRequest{} }
func (*EnableTieredStorageRequest) ProtoMessage() {}
func (*EnableTieredStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{80}
}
func (m *EnableTieredStorageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnableTieredStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnableTieredStorageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EnableTieredStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableTieredStorageRequest.Merge(m, src)
}
func (m *EnableTieredStorageRequest) XXX_Size() int {
	return m.Size()
}
func (m *EnableTieredStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableTieredStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableTieredStorageRequest proto.InternalMessageInfo

func (m *EnableTieredStorageRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *EnableTieredStorageRequest) GetNamespaceName() string {
	if m != nil {
		return m.NamespaceName
	}
	return ""
}

type EnableTieredStorageResponse struct {
}

func (m *EnableTieredStorageResponse) Reset()      { *m = EnableTieredStorageResponse{} }
func (*EnableTieredStorageResponse) ProtoMessage() {}
func (*EnableTieredStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{81}
}
func (m *EnableTieredStorageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnableTieredStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnableTieredStorageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EnableTieredStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableTieredStorageResponse.Merge(m, src)
}
func (m *EnableTieredStorageResponse) XXX_Size() int {
	return m.Size()
}
func (m *EnableTieredStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableTieredStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnableTieredStorageResponse proto.InternalMessageInfo

type ListAPIKeysRequest struct {
	OwnerId   string `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	OwnerType string `protobuf:"bytes,2,opt,name=owner_type,json=ownerType,proto3" json:"owner_type,omitempty"`
	AccountId string `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PageSize  int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListAPIKeysRequest) Reset()      { *m = ListAPIKeysRequest{} }
func (*ListAPIKeysRequest) ProtoMessage() {}
func (*ListAPIKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3e059f21621117c, []int{82}
}
func (m *ListAPIKeysRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListAPIKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListAPIKeysRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListAPIKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAPIKeysRequest.Merge(m, src)
}
func (m *ListAPIKeysRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListAPIKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAPIKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAPIKeysRequest proto.InternalMessageInfo

func (m *ListAPIKeysRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *ListAPIKeysRequest) GetOwnerType() string {
	if m != nil {
		return m.OwnerType
	}
	return ""
}

func (m *ListAPIKeysRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ListAPIKeysRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAPIKeysRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func init() {
	proto.RegisterEnum("services.saasapi.operator.internalservice.v1.RollingUpdateTemporalCellsRequest_RolloutMode", RollingUpdateTemporalCellsRequest_RolloutMode_name, RollingUpdateTemporalCellsRequest_RolloutMode_value)
	proto.RegisterType((*ListResourcesRequest)(nil), "services.saasapi.operator.internalservice.v1.ListResourcesRequest")
	proto.RegisterType((*ListResourcesResponse)(nil), "services.saasapi.operator.internalservice.v1.ListResourcesResponse")
	proto.RegisterType((*GetResourceRequest)(nil), "services.saasapi.operator.internalservice.v1.GetResourceRequest")
	proto.RegisterType((*GetResourceResponse)(nil), "services.saasapi.operator.internalservice.v1.GetResourceResponse")
	proto.RegisterType((*UpdateResourceRequest)(nil), "services.saasapi.operator.internalservice.v1.UpdateResourceRequest")
	proto.RegisterType((*UpdateResourceResponse)(nil), "services.saasapi.operator.internalservice.v1.UpdateResourceResponse")
	proto.RegisterType((*CreateNamespaceRequest)(nil), "services.saasapi.operator.internalservice.v1.CreateNamespaceRequest")
	proto.RegisterType((*CreateNamespaceResponse)(nil), "services.saasapi.operator.internalservice.v1.CreateNamespaceResponse")
	proto.RegisterType((*CreateCellRequest)(nil), "services.saasapi.operator.internalservice.v1.CreateCellRequest")
	proto.RegisterType((*CreateCellResponse)(nil), "services.saasapi.operator.internalservice.v1.CreateCellResponse")
	proto.RegisterType((*DeleteCellRequest)(nil), "services.saasapi.operator.internalservice.v1.DeleteCellRequest")
	proto.RegisterType((*DeleteCellResponse)(nil), "services.saasapi.operator.internalservice.v1.DeleteCellResponse")
	proto.RegisterType((*CreateCellInDatabaseRequest)(nil), "services.saasapi.operator.internalservice.v1.CreateCellInDatabaseRequest")
	proto.RegisterType((*CreateCellInDatabaseResponse)(nil), "services.saasapi.operator.internalservice.v1.CreateCellInDatabaseResponse")
	proto.RegisterType((*RollingUpdateTemporalCellsRequest)(nil), "services.saasapi.operator.internalservice.v1.RollingUpdateTemporalCellsRequest")
	proto.RegisterType((*RollingUpdateTemporalCellsResponse)(nil), "services.saasapi.operator.internalservice.v1.RollingUpdateTemporalCellsResponse")
	proto.RegisterType((*AllocateInitialFailoverVersionRequest)(nil), "services.saasapi.operator.internalservice.v1.AllocateInitialFailoverVersionRequest")
	proto.RegisterType((*AllocateInitialFailoverVersionResponse)(nil), "services.saasapi.operator.internalservice.v1.AllocateInitialFailoverVersionResponse")
	proto.RegisterType((*GetInitialFailoverVersionRequest)(nil), "services.saasapi.operator.internalservice.v1.GetInitialFailoverVersionRequest")
	proto.RegisterType((*GetInitialFailoverVersionResponse)(nil), "services.saasapi.operator.internalservice.v1.GetInitialFailoverVersionResponse")
	proto.RegisterType((*UpdateInitialFailoverVersionRequest)(nil), "services.saasapi.operator.internalservice.v1.UpdateInitialFailoverVersionRequest")
	proto.RegisterType((*UpdateInitialFailoverVersionResponse)(nil), "services.saasapi.operator.internalservice.v1.UpdateInitialFailoverVersionResponse")
	proto.RegisterType((*DeleteInitialFailoverVersionRequest)(nil), "services.saasapi.operator.internalservice.v1.DeleteInitialFailoverVersionRequest")
	proto.RegisterType((*DeleteInitialFailoverVersionResponse)(nil), "services.saasapi.operator.internalservice.v1.DeleteInitialFailoverVersionResponse")
	proto.RegisterType((*InviteUsersRequest)(nil), "services.saasapi.operator.internalservice.v1.InviteUsersRequest")
	proto.RegisterType((*InviteUsersResponse)(nil), "services.saasapi.operator.internalservice.v1.InviteUsersResponse")
	proto.RegisterType((*AddRolesToUserRequest)(nil), "services.saasapi.operator.internalservice.v1.AddRolesToUserRequest")
	proto.RegisterType((*AddRolesToUserResponse)(nil), "services.saasapi.operator.internalservice.v1.AddRolesToUserResponse")
	proto.RegisterType((*DeleteRolesFromUserRequest)(nil), "services.saasapi.operator.internalservice.v1.DeleteRolesFromUserRequest")
	proto.RegisterType((*DeleteRolesFromUserResponse)(nil), "services.saasapi.operator.internalservice.v1.DeleteRolesFromUserResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "services.saasapi.operator.internalservice.v1.DeleteUserRequest")
	proto.RegisterType((*DeleteUserResponse)(nil), "services.saasapi.operator.internalservice.v1.DeleteUserResponse")
	proto.RegisterType((*SetInternalRolesForUserRequest)(nil), "services.saasapi.operator.internalservice.v1.SetInternalRolesForUserRequest")
	proto.RegisterType((*SetInternalRolesForUserResponse)(nil), "services.saasapi.operator.internalservice.v1.SetInternalRolesForUserResponse")
	proto.RegisterType((*GetAuthorizeResultFromOPARequest)(nil), "services.saasapi.operator.internalservice.v1.GetAuthorizeResultFromOPARequest")
	proto.RegisterType((*GetAuthorizeResultFromOPAResult)(nil), "services.saasapi.operator.internalservice.v1.GetAuthorizeResultFromOPAResult")
	proto.RegisterType((*AssignAccountRequest)(nil), "services.saasapi.operator.internalservice.v1.AssignAccountRequest")
	proto.RegisterType((*AssignAccountResponse)(nil), "services.saasapi.operator.internalservice.v1.AssignAccountResponse")
	proto.RegisterType((*ExpandAccountPoolRequest)(nil), "services.saasapi.operator.internalservice.v1.ExpandAccountPoolRequest")
	proto.RegisterType((*ExpandAccountPoolResponse)(nil), "services.saasapi.operator.internalservice.v1.ExpandAccountPoolResponse")
	proto.RegisterType((*InitializeAccountRequest)(nil), "services.saasapi.operator.internalservice.v1.InitializeAccountRequest")
	proto.RegisterType((*InitializeAccountResponse)(nil), "services.saasapi.operator.internalservice.v1.InitializeAccountResponse")
	proto.RegisterType((*SyncPolicyConfigRequest)(nil), "services.saasapi.operator.internalservice.v1.SyncPolicyConfigRequest")
	proto.RegisterType((*SyncPolicyConfigResponse)(nil), "services.saasapi.operator.internalservice.v1.SyncPolicyConfigResponse")
	proto.RegisterType((*BackfillRolesRequest)(nil), "services.saasapi.operator.internalservice.v1.BackfillRolesRequest")
	proto.RegisterType((*BackfillRolesResponse)(nil), "services.saasapi.operator.internalservice.v1.BackfillRolesResponse")
	proto.RegisterType((*MigrateNamespaceRequest)(nil), "services.saasapi.operator.internalservice.v1.MigrateNamespaceRequest")
	proto.RegisterType((*MigrateNamespaceResponse)(nil), "services.saasapi.operator.internalservice.v1.MigrateNamespaceResponse")
	proto.RegisterType((*MigrationInfo)(nil), "services.saasapi.operator.internalservice.v1.MigrationInfo")
	proto.RegisterType((*BatchMigrateNamespacesRequest)(nil), "services.saasapi.operator.internalservice.v1.BatchMigrateNamespacesRequest")
	proto.RegisterType((*BatchMigrateNamespacesResponse)(nil), "services.saasapi.operator.internalservice.v1.BatchMigrateNamespacesResponse")
	proto.RegisterType((*ListRolesRequest)(nil), "services.saasapi.operator.internalservice.v1.ListRolesRequest")
	proto.RegisterType((*ListRolesResponse)(nil), "services.saasapi.operator.internalservice.v1.ListRolesResponse")
	proto.RegisterType((*UpsertAccountRolesRequest)(nil), "services.saasapi.operator.internalservice.v1.UpsertAccountRolesRequest")
	proto.RegisterType((*UpsertAccountRolesResponse)(nil), "services.saasapi.operator.internalservice.v1.UpsertAccountRolesResponse")
	proto.RegisterType((*PlannerDryRunRequest)(nil), "services.saasapi.operator.internalservice.v1.PlannerDryRunRequest")
	proto.RegisterType((*PlannerDryRunResponse)(nil), "services.saasapi.operator.internalservice.v1.PlannerDryRunResponse")
	proto.RegisterType((*ListUsersRequest)(nil), "services.saasapi.operator.internalservice.v1.ListUsersRequest")
	proto.RegisterType((*ProvisionAccountRequest)(nil), "services.saasapi.operator.internalservice.v1.ProvisionAccountRequest")
	proto.RegisterType((*ProvisionAccountResponse)(nil), "services.saasapi.operator.internalservice.v1.ProvisionAccountResponse")
	proto.RegisterType((*DeleteAccountRequest)(nil), "services.saasapi.operator.internalservice.v1.DeleteAccountRequest")
	proto.RegisterType((*DeleteAccountResponse)(nil), "services.saasapi.operator.internalservice.v1.DeleteAccountResponse")
	proto.RegisterType((*GetRequestStatusRequest)(nil), "services.saasapi.operator.internalservice.v1.GetRequestStatusRequest")
	proto.RegisterType((*GetRequestStatusResponse)(nil), "services.saasapi.operator.internalservice.v1.GetRequestStatusResponse")
	proto.RegisterType((*ValidateResourceManagerDataRequest)(nil), "services.saasapi.operator.internalservice.v1.ValidateResourceManagerDataRequest")
	proto.RegisterType((*ValidateResourceManagerDataResponse)(nil), "services.saasapi.operator.internalservice.v1.ValidateResourceManagerDataResponse")
	proto.RegisterType((*CreateSAMLConnectionRequest)(nil), "services.saasapi.operator.internalservice.v1.CreateSAMLConnectionRequest")
	proto.RegisterMapType((map[string]string)(nil), "services.saasapi.operator.internalservice.v1.CreateSAMLConnectionRequest.AttributeMappingsEntry")
	proto.RegisterType((*CreateSAMLConnectionResponse)(nil), "services.saasapi.operator.internalservice.v1.CreateSAMLConnectionResponse")
	proto.RegisterType((*CreateInternalAPIKeyRequest)(nil), "services.saasapi.operator.internalservice.v1.CreateInternalAPIKeyRequest")
	proto.RegisterType((*CreateInternalAPIKeyResponse)(nil), "services.saasapi.operator.internalservice.v1.CreateInternalAPIKeyResponse")
	proto.RegisterType((*GrantEphemeralRoleRequest)(nil), "services.saasapi.operator.internalservice.v1.GrantEphemeralRoleRequest")
	proto.RegisterType((*GrantEphemeralRoleResponse)(nil), "services.saasapi.operator.internalservice.v1.GrantEphemeralRoleResponse")
	proto.RegisterType((*GrantEphemeralReadRoleRequest)(nil), "services.saasapi.operator.internalservice.v1.GrantEphemeralReadRoleRequest")
	proto.RegisterType((*GrantEphemeralReadRoleResponse)(nil), "services.saasapi.operator.internalservice.v1.GrantEphemeralReadRoleResponse")
	proto.RegisterType((*AddAstraCapacityRequest)(nil), "services.saasapi.operator.internalservice.v1.AddAstraCapacityRequest")
	proto.RegisterType((*AddAstraCapacityResponse)(nil), "services.saasapi.operator.internalservice.v1.AddAstraCapacityResponse")
	proto.RegisterType((*CreateInternalRegionalNamespaceRequest)(nil), "services.saasapi.operator.internalservice.v1.CreateInternalRegionalNamespaceRequest")
	proto.RegisterType((*CreateInternalRegionalNamespaceResponse)(nil), "services.saasapi.operator.internalservice.v1.CreateInternalRegionalNamespaceResponse")
	proto.RegisterType((*SyncTieredStorageLifecycleRulesRequest)(nil), "services.saasapi.operator.internalservice.v1.SyncTieredStorageLifecycleRulesRequest")
	proto.RegisterType((*SyncTieredStorageLifecycleRulesResponse)(nil), "services.saasapi.operator.internalservice.v1.SyncTieredStorageLifecycleRulesResponse")
	proto.RegisterType((*EnableTieredStorageRequest)(nil), "services.saasapi.operator.internalservice.v1.EnableTieredStorageRequest")
	proto.RegisterType((*EnableTieredStorageResponse)(nil), "services.saasapi.operator.internalservice.v1.EnableTieredStorageResponse")
	proto.RegisterType((*ListAPIKeysRequest)(nil), "services.saasapi.operator.internalservice.v1.ListAPIKeysRequest")
}

func init() {
	proto.RegisterFile("services/saasapi/operator/internalservice/v1/request_response.proto", fileDescriptor_f3e059f21621117c)
}

var fileDescriptor_f3e059f21621117c = []byte{
	// 3571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x3a, 0x4d, 0x73, 0x1b, 0x47,
	0x76, 0x1a, 0x7e, 0x48, 0xe4, 0x03, 0x49, 0x91, 0xc3, 0xaf, 0x21, 0x29, 0x42, 0xd4, 0x48, 0x96,
	0xe9, 0x75, 0x0a, 0xb4, 0xa9, 0x38, 0x6b, 0x4b, 0x89, 0x6d, 0x10, 0x84, 0x64, 0xc4, 0x94, 0xc9,
	0x0c, 0x28, 0x39, 0xd9, 0xcd, 0xd6, 0xa4, 0x31, 0xd3, 0x04, 0x67, 0x39, 0x98, 0x1e, 0x77, 0x37,
	0x48, 0x41, 0xb5, 0xb5, 0x95, 0xaa, 0x7c, 0x5c, 0x72, 0x70, 0x2a, 0x55, 0xf9, 0x03, 0xb9, 0x6c,
	0x72, 0xc8, 0x39, 0xf7, 0x54, 0x0e, 0xc9, 0xcd, 0xb7, 0xf8, 0x18, 0xcb, 0x97, 0x1c, 0xb7, 0xf2,
	0x07, 0xb2, 0xd5, 0x5f, 0x43, 0x7c, 0x11, 0x14, 0xb4, 0x2e, 0xee, 0x0d, 0xf3, 0xbe, 0xdf, 0xeb,
	0x7e, 0xaf, 0xdf, 0xeb, 0x06, 0x94, 0x18, 0xa6, 0xa7, 0x51, 0x80, 0xd9, 0x16, 0x43, 0x88, 0xa1,
	0x34, 0xda, 0x22, 0x29, 0xa6, 0x88, 0x13, 0xba, 0x15, 0x25, 0x1c, 0xd3, 0x04, 0xc5, 0x9a, 0x62,
	0xeb, 0xf4, 0xfd, 0x2d, 0x8a, 0xbf, 0x6a, 0x62, 0xc6, 0x7d, 0x8a, 0x59, 0x4a, 0x12, 0x86, 0x0b,
	0x29, 0x25, 0x9c, 0xd8, 0xbf, 0x67, 0x84, 0x14, 0xb4, 0x90, 0x82, 0x11, 0x52, 0xe8, 0x12, 0x52,
	0x38, 0x7d, 0x7f, 0x35, 0x5f, 0x27, 0xa4, 0x1e, 0xe3, 0x2d, 0xc9, 0x5b, 0x6b, 0x1e, 0x6d, 0x9d,
	0x51, 0x94, 0xa6, 0x98, 0x32, 0x25, 0x6d, 0xf5, 0xc7, 0x17, 0x9b, 0x44, 0x49, 0x1c, 0x47, 0x49,
	0x1d, 0xa5, 0x69, 0xdc, 0x12, 0xf6, 0x34, 0x30, 0x63, 0xa8, 0xae, 0xcd, 0x58, 0xdd, 0xba, 0x98,
	0x31, 0xc0, 0x71, 0xdc, 0xcb, 0xb0, 0x3d, 0x40, 0x93, 0xf2, 0xb4, 0x97, 0xa7, 0xc7, 0xfa, 0xb0,
	0x49, 0x11, 0x8f, 0x48, 0xa2, 0xf0, 0xae, 0x07, 0x0b, 0x7b, 0x11, 0xe3, 0x1e, 0x66, 0xa4, 0x49,
	0x03, 0xcc, 0x3c, 0x25, 0xc8, 0x5e, 0x83, 0xc9, 0x14, 0xd5, 0xb1, 0xcf, 0xa2, 0x97, 0xd8, 0xb1,
	0x36, 0xac, 0xcd, 0x71, 0x6f, 0x42, 0x00, 0xaa, 0xd1, 0x4b, 0x6c, 0xaf, 0x03, 0x48, 0x24, 0x27,
	0x27, 0x38, 0x71, 0x46, 0x36, 0xac, 0xcd, 0x49, 0x4f, 0x92, 0x1f, 0x0a, 0x80, 0xfb, 0x33, 0x58,
	0xec, 0x92, 0xa9, 0xc2, 0x6f, 0xdf, 0x82, 0x49, 0x6a, 0x80, 0x8e, 0xb5, 0x31, 0xba, 0x39, 0xe5,
	0x9d, 0x03, 0xec, 0xfb, 0x70, 0x33, 0xc1, 0x2f, 0xb8, 0xdf, 0x23, 0x7a, 0x5a, 0x80, 0x0f, 0x32,
	0xf1, 0x1f, 0x80, 0xfd, 0x04, 0x67, 0xd2, 0x8d, 0xc1, 0xb7, 0x21, 0x67, 0x44, 0xf9, 0x51, 0x28,
	0x4d, 0x9e, 0xf4, 0xc0, 0x80, 0x2a, 0xa1, 0xfb, 0x3e, 0xcc, 0x77, 0xb0, 0x69, 0x9b, 0x56, 0x61,
	0xc2, 0x10, 0x49, 0xa6, 0x29, 0x2f, 0xfb, 0x76, 0xff, 0xc9, 0x82, 0xc5, 0x67, 0x69, 0x88, 0x38,
	0xee, 0xd6, 0x76, 0x17, 0xa6, 0x33, 0x6d, 0x09, 0x6a, 0x60, 0xad, 0x6f, 0xca, 0x00, 0xbf, 0x40,
	0x0d, 0x6c, 0xbf, 0x03, 0xb3, 0x19, 0xd1, 0x29, 0xa6, 0x2c, 0x22, 0xc6, 0xa3, 0x9b, 0x06, 0xfe,
	0x5c, 0x81, 0x3b, 0xac, 0x18, 0xed, 0xb4, 0x42, 0x44, 0xdb, 0x6c, 0xe4, 0x28, 0x74, 0xc6, 0x54,
	0xb4, 0x35, 0xa4, 0x12, 0xba, 0x3f, 0x85, 0xa5, 0x6e, 0x1b, 0xb5, 0x6b, 0x6f, 0xc1, 0x8c, 0x61,
	0x64, 0x1c, 0xf1, 0x26, 0xd3, 0x0e, 0x4e, 0x6b, 0x68, 0x55, 0x02, 0x3b, 0x74, 0x8f, 0x74, 0x45,
	0xe0, 0x5b, 0x0b, 0x96, 0x4a, 0x14, 0x23, 0x2e, 0x3d, 0x62, 0x29, 0x3a, 0x0f, 0x81, 0x03, 0x37,
	0xb4, 0x1c, 0x2d, 0xd6, 0x7c, 0xda, 0x7f, 0x06, 0xab, 0x69, 0x8c, 0x02, 0xdc, 0xc0, 0x09, 0xf7,
	0xc9, 0x29, 0xa6, 0x34, 0x0a, 0xb1, 0x2f, 0xf6, 0xb4, 0x70, 0x40, 0xa8, 0xc8, 0x6d, 0xdf, 0x2a,
	0xa8, 0x8d, 0x59, 0x30, 0x1b, 0xb3, 0x50, 0xe5, 0x34, 0x4a, 0xea, 0xcf, 0x51, 0xdc, 0xc4, 0xde,
	0x72, 0xc6, 0xbf, 0xaf, 0xd9, 0x4b, 0x38, 0x8e, 0x2b, 0xa1, 0x5d, 0x82, 0x9b, 0x47, 0x44, 0xc4,
	0x53, 0x88, 0x3d, 0xa3, 0x11, 0xc7, 0x32, 0x20, 0xb9, 0xed, 0xd5, 0x1e, 0x79, 0x3b, 0x84, 0xc4,
	0x4a, 0xda, 0x8c, 0x64, 0xd9, 0x37, 0x1c, 0x7f, 0x3c, 0x36, 0x31, 0x3a, 0x3b, 0xe6, 0x7e, 0x0a,
	0xcb, 0x3d, 0x9e, 0x0d, 0x15, 0x38, 0xf7, 0xaf, 0x2c, 0x98, 0x53, 0x22, 0x84, 0x75, 0x26, 0x2e,
	0x33, 0x30, 0x92, 0xed, 0xbf, 0x91, 0x28, 0xb4, 0x3f, 0x81, 0x31, 0x96, 0xe2, 0x40, 0xfb, 0xfd,
	0x6e, 0xe1, 0xe2, 0xe2, 0x23, 0x22, 0x54, 0x38, 0x7d, 0xbf, 0x20, 0xa4, 0x55, 0x53, 0x1c, 0x78,
	0x92, 0xb1, 0x6b, 0xfd, 0x47, 0xbb, 0xd7, 0x3f, 0x05, 0xbb, 0xdd, 0x08, 0xed, 0xc2, 0x4f, 0xfa,
	0xba, 0x90, 0xdb, 0x7e, 0x30, 0x40, 0xbf, 0x66, 0x10, 0x26, 0x78, 0xed, 0x8e, 0x76, 0xfb, 0xdd,
	0x80, 0xb9, 0x5d, 0x1c, 0xe3, 0xc1, 0x6e, 0x0f, 0xb1, 0xf9, 0x2f, 0x77, 0xb0, 0x5d, 0xdd, 0x15,
	0x38, 0xf8, 0x11, 0xac, 0x9d, 0x87, 0xb4, 0x92, 0xec, 0x22, 0x8e, 0x6a, 0x88, 0x65, 0x3b, 0x7f,
	0x50, 0xc9, 0x78, 0x08, 0xb7, 0xfa, 0xb3, 0xbe, 0x46, 0xb9, 0xf9, 0xaf, 0x29, 0xb8, 0xe3, 0xa9,
	0x23, 0x43, 0x65, 0xf4, 0x21, 0x6e, 0xa4, 0x84, 0xa2, 0x58, 0xc8, 0xca, 0x2a, 0xf3, 0x73, 0xc8,
	0xc9, 0x54, 0x3a, 0x8a, 0x62, 0x8e, 0xa9, 0xf6, 0xfa, 0x83, 0x41, 0x5e, 0xb7, 0x9d, 0x42, 0x66,
	0x7b, 0x3d, 0x96, 0xcc, 0x1e, 0x04, 0xd9, 0x6f, 0xfb, 0x97, 0x30, 0x25, 0x28, 0x49, 0x93, 0xfb,
	0x0d, 0x12, 0xaa, 0x52, 0x30, 0xb3, 0xfd, 0xd3, 0xc2, 0x30, 0x87, 0x65, 0xe1, 0x52, 0xf3, 0x25,
	0x05, 0x69, 0xf2, 0xa7, 0x24, 0xc4, 0x5e, 0x8e, 0x9e, 0x7f, 0xd8, 0x31, 0x2c, 0x06, 0x4d, 0xc6,
	0x49, 0xc3, 0x37, 0x66, 0x04, 0x24, 0x39, 0x8a, 0xea, 0x72, 0x43, 0xe4, 0xb6, 0x3f, 0x1c, 0xc2,
	0x43, 0xad, 0xa3, 0x24, 0xf9, 0xbd, 0x79, 0x25, 0xb6, 0x03, 0x68, 0xdf, 0x83, 0x19, 0x14, 0xc7,
	0xe4, 0xcc, 0x47, 0x49, 0xcb, 0xe7, 0x51, 0x43, 0xd5, 0x91, 0x09, 0x6f, 0x4a, 0x42, 0x8b, 0x49,
	0xeb, 0x30, 0x6a, 0x60, 0xfb, 0x3d, 0x58, 0x08, 0x5b, 0x09, 0x6a, 0x44, 0x81, 0x36, 0xc6, 0x4f,
	0x11, 0x0f, 0x8e, 0x1d, 0x26, 0x57, 0xce, 0xd6, 0x38, 0x25, 0xf2, 0x40, 0x60, 0xec, 0x6d, 0x58,
	0xec, 0xe2, 0xa0, 0xb8, 0x41, 0x4e, 0xb1, 0xd3, 0x94, 0x2c, 0xf3, 0x1d, 0x2c, 0x9e, 0x44, 0xd9,
	0x9f, 0xc1, 0x9d, 0xbe, 0x3c, 0xfe, 0x59, 0xc4, 0x8f, 0xfd, 0x53, 0x51, 0xc3, 0x98, 0x73, 0x2a,
	0xf9, 0xd7, 0xfb, 0xf0, 0x7f, 0x19, 0xf1, 0x63, 0x59, 0xe8, 0x98, 0xd0, 0xde, 0x94, 0xa1, 0xf7,
	0x3b, 0x05, 0x3a, 0xa1, 0x74, 0x6e, 0x5e, 0x21, 0x77, 0xdb, 0x65, 0xd8, 0x05, 0x98, 0x47, 0x61,
	0x23, 0x4a, 0x7c, 0x4e, 0x48, 0xcc, 0xb2, 0x5c, 0xc5, 0x32, 0x0d, 0xe7, 0x24, 0xea, 0x50, 0x60,
	0x4c, 0xb6, 0x16, 0x40, 0x8b, 0xf1, 0x11, 0xe3, 0x14, 0xf9, 0x2c, 0x38, 0xc6, 0x0d, 0xe4, 0x1c,
	0x49, 0x0d, 0x73, 0x0a, 0x55, 0x14, 0x98, 0xaa, 0x44, 0x88, 0x42, 0xc0, 0xf5, 0x46, 0xc8, 0x84,
	0xd7, 0x55, 0x21, 0x30, 0x70, 0x23, 0xfa, 0x2e, 0x4c, 0xa3, 0xba, 0x38, 0x34, 0x0c, 0xdd, 0xb1,
	0x3a, 0x55, 0x25, 0xd0, 0x10, 0xfd, 0x08, 0xe6, 0xea, 0xc4, 0x0f, 0x50, 0x82, 0x68, 0x2b, 0x23,
	0x8c, 0x94, 0xc0, 0x3a, 0x29, 0x49, 0xb8, 0xa1, 0xbd, 0x0d, 0xb9, 0x33, 0x5c, 0xcb, 0xa8, 0x7e,
	0xae, 0x9a, 0x82, 0x33, 0x5c, 0x6b, 0xd3, 0x68, 0x9c, 0x89, 0x31, 0xe5, 0xcc, 0x39, 0x51, 0xbb,
	0x40, 0xbb, 0x21, 0x61, 0x42, 0x0a, 0x49, 0x51, 0x26, 0x25, 0x56, 0x52, 0x48, 0x8a, 0x8c, 0x94,
	0x12, 0xe4, 0x33, 0x17, 0x43, 0x9c, 0xc6, 0xa4, 0x25, 0x8e, 0x2e, 0xe6, 0x73, 0xe2, 0x2b, 0x41,
	0x4e, 0x63, 0x63, 0x74, 0x73, 0xd2, 0x5b, 0x33, 0x54, 0xbb, 0xe7, 0x44, 0x87, 0x44, 0x25, 0x8b,
	0x58, 0x3b, 0x75, 0xb4, 0xb1, 0x56, 0x12, 0xc8, 0xa6, 0x42, 0x1e, 0x4a, 0xcc, 0x49, 0xd4, 0xda,
	0x49, 0x64, 0xb5, 0x95, 0x04, 0xd9, 0x79, 0xc5, 0xc4, 0x5a, 0xd4, 0x5a, 0x29, 0x62, 0xcc, 0xc4,
	0x23, 0x38, 0xc6, 0xc1, 0x89, 0x43, 0xd4, 0x5a, 0x28, 0x94, 0x8a, 0x48, 0x49, 0x20, 0xec, 0x07,
	0xb0, 0xd4, 0x67, 0xad, 0xfd, 0xd3, 0x07, 0x4e, 0x2a, 0x9d, 0x9a, 0xef, 0x59, 0xee, 0xe7, 0x0f,
	0x84, 0x92, 0xee, 0x05, 0x14, 0x1c, 0x5f, 0xa9, 0x0d, 0xd2, 0xb5, 0x86, 0xcf, 0x1f, 0xd8, 0x9b,
	0x30, 0xdb, 0xb1, 0x8a, 0x82, 0x98, 0x4a, 0xe2, 0x99, 0xf6, 0x85, 0x7c, 0xfe, 0xc0, 0x2e, 0xc3,
	0xed, 0x8b, 0xe2, 0x46, 0x31, 0xe3, 0x88, 0x72, 0x87, 0xcb, 0xc0, 0xdd, 0xea, 0x1b, 0x38, 0x4f,
	0xd1, 0xd8, 0x0f, 0x61, 0x45, 0x47, 0xc1, 0x54, 0x0e, 0xfc, 0x22, 0x88, 0x9b, 0x42, 0x09, 0x73,
	0xce, 0x64, 0x2c, 0x96, 0x15, 0x81, 0xae, 0x01, 0xe5, 0x0c, 0x2d, 0x9a, 0x4e, 0xb1, 0x43, 0x50,
	0x1a, 0x65, 0xeb, 0xfb, 0x42, 0x35, 0x9d, 0x67, 0xb8, 0x56, 0x4c, 0x23, 0x6d, 0xac, 0xfb, 0xaf,
	0x16, 0xe4, 0xda, 0x4a, 0x97, 0x7d, 0x0b, 0x1c, 0x6f, 0x7f, 0x6f, 0x6f, 0xff, 0xd9, 0xa1, 0xff,
	0x74, 0x7f, 0xb7, 0xec, 0x3f, 0xfb, 0xa2, 0x7a, 0x50, 0x2e, 0x55, 0x1e, 0x57, 0xca, 0xbb, 0xb3,
	0xd7, 0xec, 0x65, 0x98, 0xef, 0xc0, 0x7e, 0xb1, 0xef, 0x3d, 0x2d, 0xee, 0xcd, 0x5a, 0xf6, 0x2a,
	0x2c, 0x75, 0x20, 0xca, 0x7f, 0x7a, 0x50, 0xde, 0xad, 0x1c, 0x96, 0x77, 0x67, 0x47, 0xec, 0x45,
	0x98, 0xeb, 0xc0, 0x3d, 0x2e, 0x56, 0x0f, 0x67, 0x47, 0xed, 0x35, 0x58, 0xee, 0x00, 0xef, 0x78,
	0xe5, 0xe2, 0xe7, 0x4f, 0xf6, 0x8a, 0xd5, 0xea, 0xec, 0x58, 0x8f, 0xa2, 0xd2, 0xb3, 0xea, 0xe1,
	0xfe, 0xd3, 0xd9, 0xc0, 0xfd, 0x1c, 0xdc, 0x41, 0xb5, 0x78, 0xb8, 0x46, 0xe7, 0x53, 0x78, 0xab,
	0x18, 0xc7, 0x24, 0x40, 0x1c, 0x57, 0x92, 0x88, 0x47, 0x28, 0x7e, 0x8c, 0xa2, 0x58, 0xb4, 0x60,
	0x3a, 0x3c, 0xe6, 0x6c, 0x5a, 0x86, 0x1b, 0xa6, 0xcd, 0x53, 0x9d, 0xc0, 0xf5, 0x40, 0xf6, 0x6d,
	0x6e, 0x0d, 0xee, 0x5f, 0x26, 0x41, 0x9b, 0xf4, 0x21, 0x38, 0x91, 0xa2, 0xf0, 0x8f, 0x34, 0x49,
	0xb6, 0x32, 0x6a, 0x0e, 0x59, 0x8a, 0xfa, 0x4a, 0x70, 0x1f, 0xc1, 0xc6, 0x13, 0xcc, 0xdf, 0xd0,
	0xc0, 0x9f, 0xc1, 0x9d, 0x01, 0xcc, 0xbf, 0xb5, 0x6d, 0x2f, 0xe0, 0xae, 0x5a, 0x87, 0x37, 0x33,
	0x6f, 0xa0, 0xe6, 0x91, 0x81, 0x9a, 0xef, 0xc3, 0xbd, 0xc1, 0x9a, 0x95, 0x6f, 0xee, 0xc7, 0x70,
	0x57, 0x75, 0x59, 0x6f, 0x18, 0xc0, 0xfb, 0x70, 0x6f, 0x30, 0xbf, 0xd6, 0xf3, 0x2b, 0x0b, 0xec,
	0x4a, 0x72, 0x1a, 0x71, 0xfc, 0x8c, 0x61, 0xca, 0xce, 0xc7, 0xb7, 0x49, 0xd4, 0xe4, 0xc7, 0xef,
	0xf9, 0x28, 0x4d, 0x95, 0xe4, 0x9d, 0x11, 0xc7, 0xf2, 0x26, 0x24, 0xb0, 0x98, 0xa6, 0xf6, 0x12,
	0x5c, 0xc7, 0x0d, 0x14, 0xc5, 0xcc, 0x19, 0x91, 0x25, 0x41, 0x7f, 0x89, 0x23, 0x1a, 0x05, 0x01,
	0x69, 0x26, 0xdc, 0x47, 0x81, 0x18, 0x6c, 0xfd, 0x3a, 0x25, 0xcd, 0x54, 0xb7, 0x91, 0xb6, 0xc6,
	0x15, 0x25, 0xea, 0x89, 0xc0, 0x88, 0x94, 0xa7, 0x84, 0x08, 0x72, 0xc5, 0x96, 0x0d, 0x55, 0xd3,
	0x02, 0x5c, 0x54, 0xd0, 0x4a, 0xe8, 0xfe, 0x21, 0xcc, 0x77, 0x18, 0x3a, 0x5c, 0xce, 0xfc, 0xad,
	0x05, 0x8b, 0xc5, 0x30, 0xf4, 0x48, 0x8c, 0x45, 0x8d, 0x67, 0x98, 0x1a, 0x57, 0xd7, 0x01, 0x9a,
	0x0c, 0x53, 0x5f, 0x3a, 0xa0, 0xa3, 0x38, 0x29, 0x20, 0x65, 0x01, 0x90, 0xdd, 0x30, 0x89, 0xd5,
	0x58, 0x69, 0x9c, 0x9d, 0x14, 0x10, 0x59, 0xf7, 0xed, 0x2d, 0x58, 0x90, 0x07, 0x84, 0x80, 0xc8,
	0x4a, 0x99, 0x92, 0x38, 0x0a, 0x5a, 0xd2, 0xdf, 0x09, 0x6f, 0x4e, 0xe0, 0xb4, 0xce, 0x03, 0x89,
	0x70, 0x3f, 0x81, 0xa5, 0x6e, 0x3b, 0x86, 0xf3, 0xe4, 0xef, 0x2c, 0x58, 0x55, 0x4b, 0x2b, 0x85,
	0x3c, 0xa6, 0xa4, 0xf1, 0x3b, 0x74, 0x67, 0x17, 0xd6, 0xfa, 0x1a, 0x33, 0x9c, 0x4f, 0xdb, 0x66,
	0x84, 0x79, 0x7d, 0x4f, 0xdc, 0x05, 0x33, 0x87, 0xb4, 0x2b, 0x74, 0xbf, 0xb6, 0x20, 0x5f, 0x15,
	0x95, 0x43, 0xf5, 0xc2, 0xca, 0x2a, 0x42, 0x7f, 0x87, 0x11, 0xfa, 0x0c, 0x6e, 0x5f, 0x68, 0xd0,
	0x70, 0x51, 0xfa, 0x95, 0x25, 0x4b, 0x6a, 0xb1, 0xc9, 0x8f, 0x09, 0x8d, 0x5e, 0x8a, 0x29, 0xa6,
	0x19, 0x73, 0x11, 0xf3, 0xfd, 0x83, 0xa2, 0xf1, 0x6e, 0x01, 0xc6, 0xdb, 0x1d, 0x53, 0x1f, 0xb6,
	0x03, 0x37, 0x58, 0xb3, 0xf6, 0x73, 0x1c, 0x70, 0x3d, 0xf5, 0x99, 0x4f, 0x91, 0xc8, 0x2a, 0x51,
	0x75, 0x8a, 0xea, 0x2f, 0xfb, 0x16, 0x4c, 0x66, 0x4d, 0x8f, 0xb9, 0xe5, 0xc8, 0x00, 0x22, 0x48,
	0x6d, 0xf9, 0x3a, 0xae, 0xd0, 0x28, 0xcb, 0xd5, 0x47, 0x70, 0x7b, 0x80, 0xa1, 0xe2, 0x43, 0x59,
	0x14, 0x04, 0x98, 0x29, 0x67, 0x27, 0x3c, 0xf3, 0xe9, 0x12, 0x58, 0x28, 0x32, 0x16, 0xd5, 0x13,
	0x9d, 0xfb, 0x6d, 0x97, 0x3c, 0x6a, 0x74, 0xc0, 0xb4, 0xe3, 0x92, 0xc7, 0x00, 0xe5, 0x25, 0xcf,
	0x36, 0x2c, 0x32, 0x14, 0x63, 0xa6, 0x7a, 0xb7, 0x36, 0x1b, 0x95, 0xdb, 0xf3, 0xe7, 0xc8, 0xf3,
	0xca, 0xf2, 0x31, 0x2c, 0x76, 0x29, 0x1c, 0x6e, 0x5d, 0x8a, 0xe0, 0x94, 0x5f, 0xa4, 0x28, 0x09,
	0x35, 0xff, 0x01, 0x21, 0xd9, 0x1c, 0xfe, 0x16, 0xcc, 0x60, 0x81, 0x93, 0x9d, 0x57, 0xdb, 0xed,
	0xdd, 0x74, 0x06, 0xad, 0x46, 0x2f, 0xb1, 0xbb, 0x03, 0x2b, 0x7d, 0x44, 0x0c, 0x67, 0xc6, 0x7f,
	0x5b, 0xe0, 0xe8, 0x6a, 0x1f, 0xbd, 0xc4, 0x5d, 0xc1, 0xeb, 0x5c, 0x30, 0xab, 0x6b, 0xc1, 0xec,
	0x4f, 0xe1, 0x96, 0x41, 0x9f, 0x45, 0x71, 0x18, 0x20, 0x1a, 0xfa, 0x01, 0xa6, 0x3c, 0x3a, 0x8a,
	0x44, 0x93, 0x20, 0xa3, 0x37, 0xe1, 0xad, 0x6a, 0x9a, 0x2f, 0x35, 0x49, 0xe9, 0x9c, 0x42, 0x94,
	0x71, 0x74, 0xc6, 0x7c, 0xfc, 0x42, 0xed, 0x73, 0x73, 0x75, 0x30, 0xe1, 0x4d, 0xa3, 0x33, 0x56,
	0xd6, 0xd0, 0x4a, 0x78, 0xf1, 0x02, 0x8d, 0x5d, 0xbc, 0x40, 0x3b, 0xb0, 0xd2, 0xc7, 0xb1, 0xe1,
	0xa2, 0xb3, 0x02, 0xcb, 0xa2, 0x5b, 0x57, 0x49, 0x69, 0xe6, 0x35, 0x49, 0xe0, 0xae, 0x82, 0xd3,
	0x8b, 0xd2, 0xf5, 0xe4, 0xff, 0x2c, 0x58, 0xd8, 0x41, 0xc1, 0xc9, 0x51, 0x14, 0xab, 0xdc, 0x35,
	0x01, 0xfd, 0x03, 0x58, 0xae, 0x69, 0xb8, 0x9f, 0xdd, 0xac, 0xc8, 0xa2, 0xa0, 0xf7, 0xf3, 0xa2,
	0x41, 0x67, 0x17, 0x81, 0x02, 0xd9, 0xc1, 0x67, 0x26, 0x76, 0xcd, 0x37, 0xd2, 0xc9, 0xd7, 0x51,
	0x32, 0xec, 0x22, 0xac, 0x67, 0x7c, 0x59, 0x97, 0x2e, 0xe7, 0x03, 0xd9, 0x67, 0x63, 0x1d, 0xed,
	0x55, 0x43, 0x64, 0x3a, 0xcc, 0xa2, 0x24, 0x11, 0x32, 0xec, 0xb7, 0xe1, 0xa6, 0x8e, 0x37, 0x33,
	0xd7, 0x15, 0x63, 0xb2, 0xbc, 0xcd, 0x18, 0xb0, 0xba, 0x7b, 0x70, 0x97, 0x61, 0xb1, 0xcb, 0x67,
	0x1d, 0x8d, 0x7f, 0x1f, 0x87, 0xe5, 0xa7, 0x51, 0x9d, 0xf6, 0xbb, 0x80, 0xec, 0x28, 0x18, 0x56,
	0x77, 0xc1, 0xb8, 0x0d, 0x39, 0x8e, 0x68, 0x1d, 0x73, 0x79, 0xf1, 0xa8, 0xb3, 0x11, 0x14, 0x48,
	0x34, 0xc1, 0xf6, 0xef, 0xc3, 0x12, 0x3b, 0x89, 0x52, 0x5f, 0xed, 0x0b, 0x8a, 0xd3, 0x58, 0xec,
	0x2b, 0x53, 0x97, 0x26, 0xbc, 0x05, 0x81, 0x7d, 0x4c, 0xe4, 0x85, 0x6a, 0x86, 0xb3, 0x3f, 0x86,
	0x35, 0xc9, 0x15, 0x46, 0x2c, 0x20, 0x49, 0x82, 0x03, 0x1e, 0x25, 0x75, 0x5f, 0x8c, 0x13, 0x1c,
	0x53, 0xa6, 0x2f, 0x11, 0x56, 0x04, 0xc9, 0x6e, 0x3b, 0x45, 0x49, 0x13, 0xd8, 0x4f, 0x60, 0x43,
	0xf2, 0xcb, 0xb9, 0x50, 0xb0, 0xb6, 0x29, 0x36, 0xc3, 0xfa, 0xb8, 0x14, 0xb2, 0x2e, 0xe8, 0x9e,
	0x69, 0xb2, 0x36, 0x13, 0xf4, 0xd8, 0xfe, 0x05, 0xdc, 0x3b, 0x43, 0x11, 0x17, 0xe6, 0xfb, 0xa2,
	0x94, 0xa0, 0xd8, 0xaf, 0xe1, 0x23, 0x42, 0x71, 0xa7, 0x69, 0xce, 0x75, 0x29, 0x6c, 0x43, 0xd0,
	0x3e, 0x26, 0xb4, 0x2a, 0x29, 0x77, 0x24, 0x61, 0x87, 0x81, 0x62, 0xb9, 0x7b, 0x22, 0x21, 0x6f,
	0x59, 0x91, 0xd8, 0x6f, 0x29, 0x73, 0x6e, 0x6c, 0x58, 0x9b, 0x96, 0xb7, 0x7a, 0xd4, 0x15, 0x91,
	0x7d, 0x45, 0xe2, 0xa5, 0xcc, 0xfe, 0x73, 0x78, 0xb7, 0x57, 0x44, 0x40, 0x92, 0xa0, 0x49, 0x29,
	0xd6, 0xfd, 0xd9, 0x69, 0xc4, 0x5b, 0xbe, 0x5c, 0x7b, 0x67, 0x42, 0xd6, 0xa5, 0xb7, 0xbb, 0x05,
	0x96, 0x32, 0x86, 0xa2, 0xa6, 0x2f, 0x09, 0x72, 0x11, 0xb9, 0x63, 0x94, 0x84, 0xb2, 0xf5, 0x95,
	0x97, 0x34, 0x38, 0xf4, 0x63, 0x54, 0xaf, 0x8b, 0x20, 0x32, 0x1c, 0x90, 0x24, 0x64, 0xce, 0xe4,
	0x86, 0xb5, 0x39, 0xea, 0xad, 0x1b, 0xba, 0xa2, 0x22, 0xdb, 0x53, 0x54, 0x55, 0x45, 0x24, 0xa6,
	0xf5, 0x0b, 0x05, 0x71, 0xc4, 0x4e, 0x98, 0x03, 0x52, 0xcc, 0x5a, 0x7f, 0x31, 0x87, 0x82, 0xc4,
	0xfe, 0x11, 0xcc, 0x35, 0x13, 0x4e, 0xc5, 0xaa, 0xaa, 0xc2, 0xe5, 0x93, 0x13, 0x27, 0x27, 0x63,
	0x7d, 0x33, 0x43, 0x88, 0x72, 0xb5, 0x7f, 0xe2, 0x9e, 0x82, 0xd3, 0xbb, 0x87, 0xaf, 0xe0, 0x1a,
	0xf3, 0x6b, 0x0b, 0xa6, 0x95, 0xe2, 0x88, 0x24, 0x95, 0xe4, 0x88, 0x5c, 0x92, 0x32, 0x17, 0x67,
	0xc4, 0xc8, 0x80, 0x8c, 0xe8, 0x1b, 0x89, 0xd1, 0xfe, 0x91, 0xf8, 0x66, 0x0c, 0xd6, 0x77, 0x10,
	0x0f, 0x8e, 0xbb, 0xe3, 0xd1, 0x36, 0x07, 0xe4, 0x74, 0x69, 0x93, 0x69, 0xab, 0x9f, 0x71, 0x14,
	0x48, 0xa6, 0xed, 0xa5, 0x79, 0x5d, 0x83, 0x99, 0x86, 0x71, 0xda, 0x8f, 0x23, 0xc6, 0x9d, 0xd1,
	0x8d, 0xd1, 0xcd, 0xdc, 0xf6, 0xa3, 0xe1, 0x6e, 0x32, 0x3b, 0x02, 0xe7, 0x4d, 0x67, 0x22, 0xf7,
	0x22, 0xc6, 0x2f, 0x4f, 0x96, 0xb1, 0x1f, 0x3a, 0x59, 0xc6, 0x7f, 0xf8, 0x64, 0xb9, 0xfe, 0xc3,
	0x24, 0xcb, 0x8d, 0xcb, 0x93, 0xe5, 0x43, 0x70, 0x32, 0x21, 0x3c, 0x6a, 0x60, 0xd2, 0xe4, 0x99,
	0x15, 0xaa, 0x0a, 0x2c, 0x19, 0xfc, 0xa1, 0x42, 0x1b, 0xf5, 0x1b, 0x90, 0xcb, 0x62, 0x12, 0xb4,
	0x64, 0x7e, 0x8f, 0x7b, 0xed, 0x20, 0xf7, 0x17, 0x90, 0xbf, 0x68, 0x47, 0x5d, 0x41, 0x8a, 0x9d,
	0xc2, 0xac, 0x7c, 0xea, 0x6c, 0x3f, 0xa8, 0x7f, 0x8b, 0xa7, 0xd3, 0x7e, 0xb3, 0xe9, 0x68, 0xbf,
	0xd9, 0xf4, 0x4f, 0x60, 0xae, 0x4d, 0xaf, 0x76, 0xb4, 0xcf, 0x03, 0xaa, 0xd5, 0xe7, 0x01, 0x55,
	0x74, 0xec, 0xe6, 0xfc, 0x17, 0x87, 0xb1, 0xfa, 0x70, 0x1f, 0xc2, 0xca, 0xb3, 0x94, 0x61, 0x6a,
	0xb4, 0x74, 0xf8, 0x34, 0xb8, 0x9b, 0x73, 0x6f, 0xc1, 0x6a, 0x3f, 0x5e, 0x7d, 0x88, 0x7f, 0x05,
	0x0b, 0x07, 0x31, 0x4a, 0x12, 0x4c, 0x77, 0x69, 0xcb, 0x6b, 0x26, 0x6d, 0x1d, 0x4d, 0xd6, 0xc8,
	0x34, 0x50, 0x82, 0xea, 0x98, 0x9a, 0x23, 0x50, 0x75, 0x54, 0x8b, 0x06, 0xfd, 0x54, 0x61, 0xf5,
	0xd1, 0x77, 0x07, 0xa6, 0x52, 0x25, 0xcf, 0x0f, 0x11, 0x47, 0xfa, 0xd1, 0x32, 0xa7, 0x61, 0xbb,
	0x88, 0x23, 0xf7, 0x10, 0x16, 0xbb, 0x54, 0x9e, 0x3f, 0x41, 0xa7, 0x94, 0xa4, 0x84, 0xa1, 0x58,
	0x3d, 0x41, 0x8b, 0xf0, 0x1b, 0x80, 0x70, 0x33, 0xc4, 0xb5, 0x66, 0xdd, 0x8f, 0x92, 0x23, 0x62,
	0x56, 0x47, 0x42, 0x44, 0x15, 0x70, 0xff, 0xc1, 0x52, 0xcb, 0xdd, 0x71, 0x73, 0xf1, 0x1c, 0xc6,
	0x6a, 0x88, 0x61, 0xbd, 0xa9, 0x76, 0x86, 0xab, 0x32, 0xfd, 0xde, 0xde, 0x3d, 0x29, 0xaf, 0xdf,
	0x56, 0x18, 0xe9, 0xb7, 0x15, 0xfe, 0xd1, 0x82, 0xe5, 0x03, 0x4a, 0x4e, 0x23, 0xd1, 0xdb, 0xbf,
	0xc9, 0x04, 0x73, 0x07, 0xa6, 0xd4, 0xa5, 0x70, 0xc7, 0xfd, 0x4a, 0x4e, 0xc2, 0xca, 0xea, 0x92,
	0xe5, 0xc2, 0x1e, 0x7a, 0xf4, 0xe2, 0x1e, 0xfa, 0x23, 0x70, 0x7a, 0xcd, 0xd2, 0xab, 0x70, 0xc9,
	0x76, 0xfa, 0x00, 0x16, 0xd4, 0xa4, 0x3d, 0xd4, 0x4c, 0x21, 0xc6, 0xaa, 0x2e, 0xb6, 0xe1, 0x3a,
	0xf6, 0x2f, 0x61, 0x59, 0xfe, 0x43, 0xa0, 0x3d, 0xdf, 0x5f, 0x6f, 0x9a, 0xe9, 0x7c, 0xc1, 0x1c,
	0xe9, 0x7e, 0xc1, 0x3c, 0x05, 0xa7, 0x57, 0xf0, 0x15, 0x54, 0xa7, 0x7b, 0xe0, 0x3e, 0x47, 0x71,
	0xd4, 0xfe, 0xe7, 0x00, 0x9d, 0x49, 0x22, 0x49, 0xcc, 0x34, 0xf2, 0x09, 0xdc, 0x1d, 0x48, 0xa5,
	0x0d, 0x75, 0xe0, 0x86, 0xfe, 0x6b, 0x89, 0xf6, 0xdf, 0x7c, 0xba, 0xff, 0x3f, 0x66, 0xde, 0x4b,
	0xab, 0xc5, 0xa7, 0x7b, 0x25, 0xdd, 0x53, 0x9e, 0xdf, 0x19, 0x5e, 0x12, 0xbc, 0x3c, 0xe4, 0x44,
	0x03, 0xeb, 0x47, 0x89, 0xdf, 0xa4, 0xe6, 0x44, 0x9f, 0x14, 0xa0, 0x4a, 0xf2, 0x8c, 0xc6, 0xf6,
	0x3b, 0x30, 0xfb, 0xe2, 0x83, 0xf7, 0x3e, 0xea, 0x18, 0x0f, 0xd5, 0xbe, 0xbb, 0x29, 0xe0, 0xed,
	0x33, 0xe1, 0x43, 0x58, 0x89, 0x42, 0x9c, 0x70, 0x71, 0x6e, 0xa6, 0x62, 0xf3, 0x85, 0xa2, 0x46,
	0x90, 0x06, 0x8a, 0x12, 0xa6, 0x47, 0x8f, 0x65, 0x43, 0x70, 0xa0, 0xf1, 0xbb, 0x0a, 0x6d, 0xff,
	0x18, 0x1c, 0x9c, 0xa0, 0x5a, 0x8c, 0xfd, 0x28, 0x4c, 0x7d, 0x75, 0x9b, 0x2a, 0x5a, 0x1a, 0xc6,
	0x88, 0xee, 0xc8, 0x17, 0x15, 0xbe, 0x12, 0xa6, 0x15, 0x83, 0xad, 0x32, 0x22, 0x1f, 0x09, 0x23,
	0x26, 0x39, 0xa5, 0x1f, 0xe6, 0x5f, 0x11, 0xaa, 0xf3, 0xb6, 0x35, 0x4e, 0x74, 0xde, 0x26, 0x20,
	0x5f, 0x5b, 0x60, 0x23, 0xce, 0x69, 0x54, 0x6b, 0x72, 0x51, 0xfa, 0xd2, 0x34, 0x4a, 0xea, 0xe2,
	0x24, 0x15, 0x7d, 0xca, 0x5f, 0x0c, 0x57, 0x41, 0x06, 0x04, 0xbe, 0x50, 0x34, 0x3a, 0x9e, 0x6a,
	0x15, 0xe5, 0x84, 0xd3, 0x96, 0x37, 0x87, 0xba, 0xe1, 0xe2, 0x84, 0xd6, 0xce, 0x33, 0xd4, 0x88,
	0x7d, 0x42, 0xeb, 0x28, 0x89, 0x5e, 0xaa, 0xe6, 0x6f, 0x42, 0xfa, 0xb1, 0xa4, 0xf0, 0x55, 0xd4,
	0x88, 0xf7, 0xdb, 0xb0, 0xf6, 0x1f, 0xc1, 0x5a, 0x07, 0x67, 0x12, 0x8b, 0x96, 0xc5, 0x58, 0x22,
	0x4f, 0xec, 0x09, 0xcf, 0x69, 0x63, 0x4e, 0xe2, 0xd6, 0xb9, 0xa5, 0xab, 0xbb, 0xb0, 0xd4, 0xdf,
	0x4a, 0x7b, 0x16, 0x46, 0x4f, 0x70, 0x4b, 0x6f, 0x17, 0xf1, 0x53, 0x9c, 0x5b, 0xf2, 0x31, 0x54,
	0x6f, 0x11, 0xf5, 0xf1, 0x70, 0xe4, 0x43, 0xcb, 0x2d, 0x9b, 0x57, 0xf7, 0xee, 0x38, 0x0c, 0x57,
	0x00, 0x1a, 0x66, 0x1f, 0x9b, 0x49, 0xb8, 0x78, 0x50, 0xf9, 0x1c, 0xb7, 0xda, 0xf6, 0x71, 0xdb,
	0x45, 0x9d, 0xf5, 0xba, 0x17, 0x75, 0x23, 0x17, 0x5d, 0xd4, 0x1d, 0x1a, 0xab, 0xbb, 0xd5, 0x69,
	0xab, 0x17, 0xe1, 0xfa, 0x09, 0x6e, 0x9d, 0xe7, 0xcc, 0xf8, 0x09, 0x6e, 0xa9, 0x62, 0xc3, 0x70,
	0x40, 0x31, 0xf7, 0x45, 0x7c, 0x4c, 0xba, 0x48, 0xc8, 0xe7, 0xb8, 0xe5, 0xfe, 0x9b, 0x05, 0x2b,
	0x4f, 0x28, 0x4a, 0x78, 0x39, 0x3d, 0xc6, 0x0d, 0xd1, 0x6f, 0x0a, 0xad, 0xaf, 0x79, 0x17, 0xb9,
	0x0c, 0x37, 0xa4, 0x8b, 0x59, 0x15, 0xbb, 0x2e, 0x3e, 0x2b, 0xa1, 0xfd, 0x2e, 0x8c, 0x72, 0x1e,
	0xeb, 0xb7, 0xf8, 0x95, 0x9e, 0x3f, 0xdb, 0xec, 0xea, 0x7f, 0x95, 0x79, 0x82, 0xca, 0x5e, 0x82,
	0xeb, 0x14, 0x23, 0x46, 0x12, 0x7d, 0xc7, 0xa2, 0xbf, 0xba, 0xca, 0xe4, 0x78, 0x77, 0x99, 0x7c,
	0x01, 0xab, 0xfd, 0x0c, 0xbf, 0x82, 0x42, 0xf9, 0x1f, 0x16, 0xac, 0x77, 0xa9, 0xc6, 0x28, 0x1c,
	0x22, 0x6e, 0x1b, 0x30, 0x45, 0x31, 0x0a, 0xfd, 0xce, 0xe0, 0x01, 0xd5, 0x52, 0xae, 0x28, 0x80,
	0xbf, 0x80, 0xfc, 0x45, 0x5e, 0x5c, 0x41, 0x10, 0xff, 0xda, 0x82, 0xe5, 0x62, 0x18, 0xca, 0xb7,
	0xff, 0x12, 0x4a, 0x51, 0x10, 0xf1, 0xd6, 0xa5, 0x0f, 0x5b, 0x9b, 0x30, 0x6b, 0x26, 0x9e, 0xa0,
	0xa9, 0x67, 0x1d, 0xf5, 0xa0, 0x35, 0xa3, 0xe1, 0xa5, 0xa6, 0x1a, 0x69, 0xee, 0xc3, 0x4d, 0x33,
	0xf8, 0x19, 0xc2, 0x51, 0x75, 0xb3, 0xa9, 0x87, 0x3f, 0x45, 0xe7, 0x16, 0xc1, 0xe9, 0xb5, 0x62,
	0xb8, 0x3a, 0xf0, 0xb5, 0x05, 0xf7, 0x3b, 0x33, 0xd3, 0xc3, 0xf5, 0x88, 0x24, 0x28, 0xee, 0xb9,
	0x84, 0x92, 0x2b, 0x55, 0x37, 0x0f, 0x80, 0x72, 0xa5, 0xc4, 0x97, 0xa8, 0x5e, 0x1c, 0xd5, 0xf5,
	0x3e, 0x10, 0x3f, 0xed, 0x47, 0x03, 0xff, 0x15, 0xa7, 0x0e, 0xb4, 0x8b, 0xfe, 0xf7, 0xe6, 0xfe,
	0x8d, 0x05, 0x6f, 0x5f, 0x6a, 0xd1, 0x15, 0xac, 0xf1, 0xa7, 0x70, 0xbf, 0xda, 0x4a, 0x82, 0xc3,
	0x08, 0x53, 0x1c, 0x56, 0x39, 0xa1, 0xa8, 0x8e, 0xf7, 0xa2, 0x23, 0x1c, 0xb4, 0x82, 0x18, 0x7b,
	0xcd, 0xb6, 0x89, 0xe1, 0x82, 0xc0, 0xb8, 0xef, 0xc0, 0xdb, 0x97, 0x4a, 0xd0, 0x73, 0x43, 0x0d,
	0x56, 0xcb, 0xf2, 0xdc, 0xe8, 0x20, 0x7e, 0xcd, 0xae, 0xe2, 0x2d, 0x98, 0xc9, 0x6e, 0x36, 0x54,
	0xef, 0x6b, 0xfe, 0x4c, 0x6a, 0xa0, 0x22, 0x72, 0xee, 0x3a, 0xac, 0xf5, 0xd5, 0xa1, 0x4d, 0xf8,
	0x17, 0x0b, 0x6c, 0xd1, 0xa3, 0xab, 0xca, 0x9c, 0x39, 0xb7, 0x02, 0x13, 0xe4, 0x4c, 0xcc, 0x1f,
	0x99, 0xe6, 0x1b, 0xf2, 0x5b, 0x55, 0x67, 0x85, 0xe2, 0xad, 0xd4, 0xe8, 0x9c, 0x94, 0x90, 0xc3,
	0x56, 0xda, 0xdd, 0xf9, 0x8e, 0x76, 0x5b, 0xdd, 0x31, 0x3b, 0x8e, 0x0d, 0x9c, 0x1d, 0xc7, 0xbb,
	0x66, 0xc7, 0x9d, 0x5f, 0x7e, 0xf3, 0x5d, 0xfe, 0xda, 0xb7, 0xdf, 0xe5, 0xaf, 0xfd, 0xfa, 0xbb,
	0xbc, 0xf5, 0x97, 0xaf, 0xf2, 0xd6, 0x3f, 0xbf, 0xca, 0x5b, 0xff, 0xf9, 0x2a, 0x6f, 0x7d, 0xf3,
	0x2a, 0x6f, 0xfd, 0xcf, 0xab, 0xbc, 0xf5, 0xbf, 0xaf, 0xf2, 0xd7, 0x7e, 0xfd, 0x2a, 0x6f, 0xfd,
	0xfd, 0xf7, 0xf9, 0x6b, 0xdf, 0x7c, 0x9f, 0xbf, 0xf6, 0xed, 0xf7, 0xf9, 0x6b, 0x3f, 0xf9, 0x8c,
	0x37, 0x52, 0x1a, 0x17, 0x82, 0x98, 0x34, 0xc3, 0xad, 0x61, 0xfe, 0x5d, 0xfd, 0xa8, 0x0b, 0x54,
	0xbb, 0x2e, 0x8b, 0xd9, 0x83, 0xdf, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x4e, 0xce, 0xe0, 0xa4,
	0x2d, 0x00, 0x00,
}

func (x RollingUpdateTemporalCellsRequest_RolloutMode) String() string {
	s, ok := RollingUpdateTemporalCellsRequest_RolloutMode_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *ListResourcesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListResourcesRequest)
	if !ok {
		that2, ok := that.(ListResourcesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PageSize != that1.PageSize {
		return false
	}
	if this.PageToken != that1.PageToken {
		return false
	}
	return true
}
func (this *ListResourcesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListResourcesResponse)
	if !ok {
		that2, ok := that.(ListResourcesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Resources) != len(that1.Resources) {
		return false
	}
	for i := range this.Resources {
		if !bytes.Equal(this.Resources[i], that1.Resources[i]) {
			return false
		}
	}
	if this.NextPageToken != that1.NextPageToken {
		return false
	}
	return true
}
func (this *GetResourceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetResourceRequest)
	if !ok {
		that2, ok := that.(GetResourceRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ResourceId != that1.ResourceId {
		return false
	}
	return true
}
func (this *GetResourceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetResourceResponse)
	if !ok {
		that2, ok := that.(GetResourceResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.Resource, that1.Resource) {
		return false
	}
	return true
}
func (this *UpdateResourceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateResourceRequest)
	if !ok {
		that2, ok := that.(UpdateResourceRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ResourceName != that1.ResourceName {
		return false
	}
	if this.ResourceVersion != that1.ResourceVersion {
		return false
	}
	if !bytes.Equal(this.Resource, that1.Resource) {
		return false
	}
	if this.RequestId != that1.RequestId {
		return false
	}
	return true
}
func (this *UpdateResourceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateResourceResponse)
	if !ok {
		that2, ok := that.(UpdateResourceResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	if !bytes.Equal(this.Resource, that1.Resource) {
		return false
	}
	return true
}
func (this *CreateNamespaceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateNamespaceRequest)
	if !ok {
		that2, ok := that.(CreateNamespaceRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.Request, that1.Request) {
		return false
	}
	if !this.PlacementOverrideCellId.Equal(that1.PlacementOverrideCellId) {
		return false
	}
	if !this.ForceOverwrite.Equal(that1.ForceOverwrite) {
		return false
	}
	return true
}
func (this *CreateNamespaceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateNamespaceResponse)
	if !ok {
		that2, ok := that.(CreateNamespaceResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *CreateCellRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateCellRequest)
	if !ok {
		that2, ok := that.(CreateCellRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if !this.Spec.Equal(that1.Spec) {
		return false
	}
	if this.RequestId != that1.RequestId {
		return false
	}
	return true
}
func (this *CreateCellResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateCellResponse)
	if !ok {
		that2, ok := that.(CreateCellResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *DeleteCellRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteCellRequest)
	if !ok {
		that2, ok := that.(DeleteCellRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.ResourceVersion != that1.ResourceVersion {
		return false
	}
	if this.RequestId != that1.RequestId {
		return false
	}
	return true
}
func (this *DeleteCellResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteCellResponse)
	if !ok {
		that2, ok := that.(DeleteCellResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *CreateCellInDatabaseRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateCellInDatabaseRequest)
	if !ok {
		that2, ok := that.(CreateCellInDatabaseRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.Resource, that1.Resource) {
		return false
	}
	return true
}
func (this *CreateCellInDatabaseResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateCellInDatabaseResponse)
	if !ok {
		that2, ok := that.(CreateCellInDatabaseResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.Resource, that1.Resource) {
		return false
	}
	return true
}
func (this *RollingUpdateTemporalCellsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RollingUpdateTemporalCellsRequest)
	if !ok {
		that2, ok := that.(RollingUpdateTemporalCellsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.CellFilter.Equal(that1.CellFilter) {
		return false
	}
	if this.RolloutMode != that1.RolloutMode {
		return false
	}
	if !this.CustomRolloutConfig.Equal(that1.CustomRolloutConfig) {
		return false
	}
	if this.AllowAnyTime != that1.AllowAnyTime {
		return false
	}
	if !bytes.Equal(this.DynamicConfigPatch, that1.DynamicConfigPatch) {
		return false
	}
	if !bytes.Equal(this.DynamicConfigRemove, that1.DynamicConfigRemove) {
		return false
	}
	if !bytes.Equal(this.DynamicConfigRemoveWithValues, that1.DynamicConfigRemoveWithValues) {
		return false
	}
	if this.UpdateDynamicConfig != that1.UpdateDynamicConfig {
		return false
	}
	if this.AdminToolsVersion != that1.AdminToolsVersion {
		return false
	}
	if this.UpdateAstraSchema != that1.UpdateAstraSchema {
		return false
	}
	if this.TemporalVersion != that1.TemporalVersion {
		return false
	}
	if this.AgentVersion != that1.AgentVersion {
		return false
	}
	if this.GoCanaryVersion != that1.GoCanaryVersion {
		return false
	}
	if this.WebVersion != that1.WebVersion {
		return false
	}
	if this.UpdateAlerts != that1.UpdateAlerts {
		return false
	}
	if this.OpaVersion != that1.OpaVersion {
		return false
	}
	if len(this.TemporalDeploymentsToUpdate) != len(that1.TemporalDeploymentsToUpdate) {
		return false
	}
	for i := range this.TemporalDeploymentsToUpdate {
		if this.TemporalDeploymentsToUpdate[i] != that1.TemporalDeploymentsToUpdate[i] {
			return false
		}
	}
	if this.ForceSyncNamespaces != that1.ForceSyncNamespaces {
		return false
	}
	if this.BypassCanaryCheck != that1.BypassCanaryCheck {
		return false
	}
	if this.AdminToolsVersionV3 != that1.AdminToolsVersionV3 {
		return false
	}
	if this.TemporalVersionV3 != that1.TemporalVersionV3 {
		return false
	}
	if this.AgentVersionV3 != that1.AgentVersionV3 {
		return false
	}
	if len(this.TemporalDeploymentsToRestart) != len(that1.TemporalDeploymentsToRestart) {
		return false
	}
	for i := range this.TemporalDeploymentsToRestart {
		if this.TemporalDeploymentsToRestart[i] != that1.TemporalDeploymentsToRestart[i] {
			return false
		}
	}
	if this.BypassRolloutExclusions != that1.BypassRolloutExclusions {
		return false
	}
	if this.WebApiVersion != that1.WebApiVersion {
		return false
	}
	return true
}
func (this *RollingUpdateTemporalCellsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RollingUpdateTemporalCellsResponse)
	if !ok {
		that2, ok := that.(RollingUpdateTemporalCellsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *AllocateInitialFailoverVersionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AllocateInitialFailoverVersionRequest)
	if !ok {
		that2, ok := that.(AllocateInitialFailoverVersionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CellId != that1.CellId {
		return false
	}
	return true
}
func (this *AllocateInitialFailoverVersionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AllocateInitialFailoverVersionResponse)
	if !ok {
		that2, ok := that.(AllocateInitialFailoverVersionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.InitialFailoverVersion != that1.InitialFailoverVersion {
		return false
	}
	return true
}
func (this *GetInitialFailoverVersionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetInitialFailoverVersionRequest)
	if !ok {
		that2, ok := that.(GetInitialFailoverVersionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CellId != that1.CellId {
		return false
	}
	return true
}
func (this *GetInitialFailoverVersionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetInitialFailoverVersionResponse)
	if !ok {
		that2, ok := that.(GetInitialFailoverVersionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.InitialFailoverVersion != that1.InitialFailoverVersion {
		return false
	}
	return true
}
func (this *UpdateInitialFailoverVersionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateInitialFailoverVersionRequest)
	if !ok {
		that2, ok := that.(UpdateInitialFailoverVersionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CellId != that1.CellId {
		return false
	}
	if this.InitialFailoverVersion != that1.InitialFailoverVersion {
		return false
	}
	return true
}
func (this *UpdateInitialFailoverVersionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateInitialFailoverVersionResponse)
	if !ok {
		that2, ok := that.(UpdateInitialFailoverVersionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *DeleteInitialFailoverVersionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteInitialFailoverVersionRequest)
	if !ok {
		that2, ok := that.(DeleteInitialFailoverVersionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CellId != that1.CellId {
		return false
	}
	return true
}
func (this *DeleteInitialFailoverVersionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteInitialFailoverVersionResponse)
	if !ok {
		that2, ok := that.(DeleteInitialFailoverVersionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *InviteUsersRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*InviteUsersRequest)
	if !ok {
		that2, ok := that.(InviteUsersRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Auth0App != that1.Auth0App {
		return false
	}
	if len(this.Emails) != len(that1.Emails) {
		return false
	}
	for i := range this.Emails {
		if this.Emails[i] != that1.Emails[i] {
			return false
		}
	}
	if this.AccountActionGroup != that1.AccountActionGroup {
		return false
	}
	if this.RootAccountId != that1.RootAccountId {
		return false
	}
	return true
}
func (this *InviteUsersResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*InviteUsersResponse)
	if !ok {
		that2, ok := that.(InviteUsersResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *AddRolesToUserRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddRolesToUserRequest)
	if !ok {
		that2, ok := that.(AddRolesToUserRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.UserEmail != that1.UserEmail {
		return false
	}
	if len(this.RoleNames) != len(that1.RoleNames) {
		return false
	}
	for i := range this.RoleNames {
		if this.RoleNames[i] != that1.RoleNames[i] {
			return false
		}
	}
	if this.SyncRolesToPolicy != that1.SyncRolesToPolicy {
		return false
	}
	return true
}
func (this *AddRolesToUserResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddRolesToUserResponse)
	if !ok {
		that2, ok := that.(AddRolesToUserResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *DeleteRolesFromUserRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteRolesFromUserRequest)
	if !ok {
		that2, ok := that.(DeleteRolesFromUserRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.UserEmail != that1.UserEmail {
		return false
	}
	if len(this.RoleNames) != len(that1.RoleNames) {
		return false
	}
	for i := range this.RoleNames {
		if this.RoleNames[i] != that1.RoleNames[i] {
			return false
		}
	}
	if this.SyncRolesToPolicy != that1.SyncRolesToPolicy {
		return false
	}
	return true
}
func (this *DeleteRolesFromUserResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteRolesFromUserResponse)
	if !ok {
		that2, ok := that.(DeleteRolesFromUserResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *DeleteUserRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteUserRequest)
	if !ok {
		that2, ok := that.(DeleteUserRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.UserEmail != that1.UserEmail {
		return false
	}
	return true
}
func (this *DeleteUserResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteUserResponse)
	if !ok {
		that2, ok := that.(DeleteUserResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *SetInternalRolesForUserRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SetInternalRolesForUserRequest)
	if !ok {
		that2, ok := that.(SetInternalRolesForUserRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.UserEmail != that1.UserEmail {
		return false
	}
	if len(this.RoleNames) != len(that1.RoleNames) {
		return false
	}
	for i := range this.RoleNames {
		if this.RoleNames[i] != that1.RoleNames[i] {
			return false
		}
	}
	if this.SyncRolesToPolicy != that1.SyncRolesToPolicy {
		return false
	}
	return true
}
func (this *SetInternalRolesForUserResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SetInternalRolesForUserResponse)
	if !ok {
		that2, ok := that.(SetInternalRolesForUserResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *GetAuthorizeResultFromOPARequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetAuthorizeResultFromOPARequest)
	if !ok {
		that2, ok := that.(GetAuthorizeResultFromOPARequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	if this.Subject != that1.Subject {
		return false
	}
	if this.Action != that1.Action {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	return true
}
func (this *GetAuthorizeResultFromOPAResult) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetAuthorizeResultFromOPAResult)
	if !ok {
		that2, ok := that.(GetAuthorizeResultFromOPAResult)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Success != that1.Success {
		return false
	}
	return true
}
func (this *AssignAccountRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AssignAccountRequest)
	if !ok {
		that2, ok := that.(AssignAccountRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CustomerName != that1.CustomerName {
		return false
	}
	if this.SalesforceAccountId != that1.SalesforceAccountId {
		return false
	}
	return true
}
func (this *AssignAccountResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AssignAccountResponse)
	if !ok {
		that2, ok := that.(AssignAccountResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *ExpandAccountPoolRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ExpandAccountPoolRequest)
	if !ok {
		that2, ok := that.(ExpandAccountPoolRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ExpansionSize != that1.ExpansionSize {
		return false
	}
	return true
}
func (this *ExpandAccountPoolResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ExpandAccountPoolResponse)
	if !ok {
		that2, ok := that.(ExpandAccountPoolResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *InitializeAccountRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*InitializeAccountRequest)
	if !ok {
		that2, ok := that.(InitializeAccountRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	if this.AccountWildcardCertificate != that1.AccountWildcardCertificate {
		return false
	}
	if this.AwsExternalId != that1.AwsExternalId {
		return false
	}
	if this.SalesforceAccountId != that1.SalesforceAccountId {
		return false
	}
	return true
}
func (this *InitializeAccountResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*InitializeAccountResponse)
	if !ok {
		that2, ok := that.(InitializeAccountResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *SyncPolicyConfigRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SyncPolicyConfigRequest)
	if !ok {
		that2, ok := that.(SyncPolicyConfigRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *SyncPolicyConfigResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SyncPolicyConfigResponse)
	if !ok {
		that2, ok := that.(SyncPolicyConfigResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *BackfillRolesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BackfillRolesRequest)
	if !ok {
		that2, ok := that.(BackfillRolesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.BackfillResourceRoles != that1.BackfillResourceRoles {
		return false
	}
	if this.BackfillInternalRoles != that1.BackfillInternalRoles {
		return false
	}
	if this.BackfillTemporalAdminsRole != that1.BackfillTemporalAdminsRole {
		return false
	}
	if len(this.AccountsFilter) != len(that1.AccountsFilter) {
		return false
	}
	for i := range this.AccountsFilter {
		if this.AccountsFilter[i] != that1.AccountsFilter[i] {
			return false
		}
	}
	return true
}
func (this *BackfillRolesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BackfillRolesResponse)
	if !ok {
		that2, ok := that.(BackfillRolesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MigrateNamespaceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MigrateNamespaceRequest)
	if !ok {
		that2, ok := that.(MigrateNamespaceRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.TargetCell != that1.TargetCell {
		return false
	}
	if this.SkipForceReplication != that1.SkipForceReplication {
		return false
	}
	if this.SkipDisconnectingClusters != that1.SkipDisconnectingClusters {
		return false
	}
	if this.SkipUpdatingReplicationConfig != that1.SkipUpdatingReplicationConfig {
		return false
	}
	if this.WaitForSignalBeforeDisconnecting != that1.WaitForSignalBeforeDisconnecting {
		return false
	}
	if this.ForceReplicationOverallRps != that1.ForceReplicationOverallRps {
		return false
	}
	if this.ForceReplicationConcurrentActivityCount != that1.ForceReplicationConcurrentActivityCount {
		return false
	}
	if this.HandoverAllowedLaggingSeconds != that1.HandoverAllowedLaggingSeconds {
		return false
	}
	if this.HandoverAllowedLaggingTasks != that1.HandoverAllowedLaggingTasks {
		return false
	}
	if this.UntrustedCertOk != that1.UntrustedCertOk {
		return false
	}
	return true
}
func (this *MigrateNamespaceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MigrateNamespaceResponse)
	if !ok {
		that2, ok := that.(MigrateNamespaceResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *MigrationInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MigrationInfo)
	if !ok {
		that2, ok := that.(MigrationInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.SkipForceReplication != that1.SkipForceReplication {
		return false
	}
	if this.UntrustedCertOk != that1.UntrustedCertOk {
		return false
	}
	return true
}
func (this *BatchMigrateNamespacesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BatchMigrateNamespacesRequest)
	if !ok {
		that2, ok := that.(BatchMigrateNamespacesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SourceCell != that1.SourceCell {
		return false
	}
	if this.TargetCell != that1.TargetCell {
		return false
	}
	if len(this.MigrationList) != len(that1.MigrationList) {
		return false
	}
	for i := range this.MigrationList {
		if !this.MigrationList[i].Equal(that1.MigrationList[i]) {
			return false
		}
	}
	if this.ForceReplicationOverallRps != that1.ForceReplicationOverallRps {
		return false
	}
	if this.ForceReplicationConcurrentActivityCount != that1.ForceReplicationConcurrentActivityCount {
		return false
	}
	if this.HandoverAllowedLaggingSeconds != that1.HandoverAllowedLaggingSeconds {
		return false
	}
	if this.HandoverAllowedLaggingTasks != that1.HandoverAllowedLaggingTasks {
		return false
	}
	if this.HandoverTimeoutSeconds != that1.HandoverTimeoutSeconds {
		return false
	}
	if this.Concurrency != that1.Concurrency {
		return false
	}
	return true
}
func (this *BatchMigrateNamespacesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*BatchMigrateNamespacesResponse)
	if !ok {
		that2, ok := that.(BatchMigrateNamespacesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *ListRolesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListRolesRequest)
	if !ok {
		that2, ok := that.(ListRolesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.PageSize != that1.PageSize {
		return false
	}
	if this.PageToken != that1.PageToken {
		return false
	}
	if this.RootAccountId != that1.RootAccountId {
		return false
	}
	return true
}
func (this *ListRolesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListRolesResponse)
	if !ok {
		that2, ok := that.(ListRolesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NextPageToken != that1.NextPageToken {
		return false
	}
	if len(this.Roles) != len(that1.Roles) {
		return false
	}
	for i := range this.Roles {
		if this.Roles[i] != that1.Roles[i] {
			return false
		}
	}
	return true
}
func (this *UpsertAccountRolesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpsertAccountRolesRequest)
	if !ok {
		that2, ok := that.(UpsertAccountRolesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	return true
}
func (this *UpsertAccountRolesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpsertAccountRolesResponse)
	if !ok {
		that2, ok := that.(UpsertAccountRolesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *PlannerDryRunRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PlannerDryRunRequest)
	if !ok {
		that2, ok := that.(PlannerDryRunRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.ResourceManagerConfig, that1.ResourceManagerConfig) {
		return false
	}
	if !bytes.Equal(this.PlannerData, that1.PlannerData) {
		return false
	}
	return true
}
func (this *PlannerDryRunResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PlannerDryRunResponse)
	if !ok {
		that2, ok := that.(PlannerDryRunResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Proposals) != len(that1.Proposals) {
		return false
	}
	for i := range this.Proposals {
		if this.Proposals[i] != that1.Proposals[i] {
			return false
		}
	}
	if this.DebugInfo != that1.DebugInfo {
		return false
	}
	return true
}
func (this *ListUsersRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListUsersRequest)
	if !ok {
		that2, ok := that.(ListUsersRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Base.Equal(that1.Base) {
		return false
	}
	if this.RootAccountId != that1.RootAccountId {
		return false
	}
	return true
}
func (this *ProvisionAccountRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProvisionAccountRequest)
	if !ok {
		that2, ok := that.(ProvisionAccountRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CustomerName != that1.CustomerName {
		return false
	}
	if len(this.AdminEmails) != len(that1.AdminEmails) {
		return false
	}
	for i := range this.AdminEmails {
		if this.AdminEmails[i] != that1.AdminEmails[i] {
			return false
		}
	}
	if this.SalesforceAccountId != that1.SalesforceAccountId {
		return false
	}
	return true
}
func (this *ProvisionAccountResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProvisionAccountResponse)
	if !ok {
		that2, ok := that.(ProvisionAccountResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	return true
}
func (this *DeleteAccountRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteAccountRequest)
	if !ok {
		that2, ok := that.(DeleteAccountRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	return true
}
func (this *DeleteAccountResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteAccountResponse)
	if !ok {
		that2, ok := that.(DeleteAccountResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *GetRequestStatusRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetRequestStatusRequest)
	if !ok {
		that2, ok := that.(GetRequestStatusRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	if this.RequestId != that1.RequestId {
		return false
	}
	return true
}
func (this *GetRequestStatusResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetRequestStatusResponse)
	if !ok {
		that2, ok := that.(GetRequestStatusResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *ValidateResourceManagerDataRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ValidateResourceManagerDataRequest)
	if !ok {
		that2, ok := that.(ValidateResourceManagerDataRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ValidateResourceManagerDataResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ValidateResourceManagerDataResponse)
	if !ok {
		that2, ok := that.(ValidateResourceManagerDataResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Message != that1.Message {
		return false
	}
	return true
}
func (this *CreateSAMLConnectionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSAMLConnectionRequest)
	if !ok {
		that2, ok := that.(CreateSAMLConnectionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	if this.SignInUrl != that1.SignInUrl {
		return false
	}
	if this.X509Certificate != that1.X509Certificate {
		return false
	}
	if len(this.IdentityProviderDomains) != len(that1.IdentityProviderDomains) {
		return false
	}
	for i := range this.IdentityProviderDomains {
		if this.IdentityProviderDomains[i] != that1.IdentityProviderDomains[i] {
			return false
		}
	}
	if this.EnableIdpInitiatedSso != that1.EnableIdpInitiatedSso {
		return false
	}
	if this.DisableSignRequest != that1.DisableSignRequest {
		return false
	}
	if len(this.AttributeMappings) != len(that1.AttributeMappings) {
		return false
	}
	for i := range this.AttributeMappings {
		if this.AttributeMappings[i] != that1.AttributeMappings[i] {
			return false
		}
	}
	if this.EnableSamlOrganization != that1.EnableSamlOrganization {
		return false
	}
	if this.EnableSamlOnlyConnection != that1.EnableSamlOnlyConnection {
		return false
	}
	return true
}
func (this *CreateSAMLConnectionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateSAMLConnectionResponse)
	if !ok {
		that2, ok := that.(CreateSAMLConnectionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *CreateInternalAPIKeyRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateInternalAPIKeyRequest)
	if !ok {
		that2, ok := that.(CreateInternalAPIKeyRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.RoleNames) != len(that1.RoleNames) {
		return false
	}
	for i := range this.RoleNames {
		if this.RoleNames[i] != that1.RoleNames[i] {
			return false
		}
	}
	if this.SyncRolesToPolicy != that1.SyncRolesToPolicy {
		return false
	}
	return true
}
func (this *CreateInternalAPIKeyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateInternalAPIKeyResponse)
	if !ok {
		that2, ok := that.(CreateInternalAPIKeyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.KeyId != that1.KeyId {
		return false
	}
	if this.SecretKey != that1.SecretKey {
		return false
	}
	return true
}
func (this *GrantEphemeralRoleRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GrantEphemeralRoleRequest)
	if !ok {
		that2, ok := that.(GrantEphemeralRoleRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.UserEmail != that1.UserEmail {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	if !this.Ttl.Equal(that1.Ttl) {
		return false
	}
	if this.Reason != that1.Reason {
		return false
	}
	if this.RequestId != that1.RequestId {
		return false
	}
	return true
}
func (this *GrantEphemeralRoleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GrantEphemeralRoleResponse)
	if !ok {
		that2, ok := that.(GrantEphemeralRoleResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *GrantEphemeralReadRoleRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GrantEphemeralReadRoleRequest)
	if !ok {
		that2, ok := that.(GrantEphemeralReadRoleRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.UserEmail != that1.UserEmail {
		return false
	}
	if this.ReadRoleId != that1.ReadRoleId {
		return false
	}
	if !this.Ttl.Equal(that1.Ttl) {
		return false
	}
	if this.Reason != that1.Reason {
		return false
	}
	if this.RequestId != that1.RequestId {
		return false
	}
	return true
}
func (this *GrantEphemeralReadRoleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GrantEphemeralReadRoleResponse)
	if !ok {
		that2, ok := that.(GrantEphemeralReadRoleResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *AddAstraCapacityRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddAstraCapacityRequest)
	if !ok {
		that2, ok := that.(AddAstraCapacityRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CellId != that1.CellId {
		return false
	}
	if this.CurrentCuCount != that1.CurrentCuCount {
		return false
	}
	if this.TargetCuCount != that1.TargetCuCount {
		return false
	}
	return true
}
func (this *AddAstraCapacityResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddAstraCapacityResponse)
	if !ok {
		that2, ok := that.(AddAstraCapacityResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.RequestStatus, that1.RequestStatus) {
		return false
	}
	return true
}
func (this *CreateInternalRegionalNamespaceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateInternalRegionalNamespaceRequest)
	if !ok {
		that2, ok := that.(CreateInternalRegionalNamespaceRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Region != that1.Region {
		return false
	}
	if this.Tag != that1.Tag {
		return false
	}
	if this.PlacementOverrideCellId != that1.PlacementOverrideCellId {
		return false
	}
	return true
}
func (this *CreateInternalRegionalNamespaceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateInternalRegionalNamespaceResponse)
	if !ok {
		that2, ok := that.(CreateInternalRegionalNamespaceResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.RequestStatus.Equal(that1.RequestStatus) {
		return false
	}
	return true
}
func (this *SyncTieredStorageLifecycleRulesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SyncTieredStorageLifecycleRulesRequest)
	if !ok {
		that2, ok := that.(SyncTieredStorageLifecycleRulesRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Region != that1.Region {
		return false
	}
	return true
}
func (this *SyncTieredStorageLifecycleRulesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SyncTieredStorageLifecycleRulesResponse)
	if !ok {
		that2, ok := that.(SyncTieredStorageLifecycleRulesResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *EnableTieredStorageRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EnableTieredStorageRequest)
	if !ok {
		that2, ok := that.(EnableTieredStorageRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	if this.NamespaceName != that1.NamespaceName {
		return false
	}
	return true
}
func (this *EnableTieredStorageResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EnableTieredStorageResponse)
	if !ok {
		that2, ok := that.(EnableTieredStorageResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *ListAPIKeysRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListAPIKeysRequest)
	if !ok {
		that2, ok := that.(ListAPIKeysRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.OwnerId != that1.OwnerId {
		return false
	}
	if this.OwnerType != that1.OwnerType {
		return false
	}
	if this.AccountId != that1.AccountId {
		return false
	}
	if this.PageSize != that1.PageSize {
		return false
	}
	if this.PageToken != that1.PageToken {
		return false
	}
	return true
}
func (this *ListResourcesRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.ListResourcesRequest{")
	s = append(s, "PageSize: "+fmt.Sprintf("%#v", this.PageSize)+",\n")
	s = append(s, "PageToken: "+fmt.Sprintf("%#v", this.PageToken)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListResourcesResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.ListResourcesResponse{")
	s = append(s, "Resources: "+fmt.Sprintf("%#v", this.Resources)+",\n")
	s = append(s, "NextPageToken: "+fmt.Sprintf("%#v", this.NextPageToken)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetResourceRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GetResourceRequest{")
	s = append(s, "ResourceId: "+fmt.Sprintf("%#v", this.ResourceId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetResourceResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GetResourceResponse{")
	s = append(s, "Resource: "+fmt.Sprintf("%#v", this.Resource)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateResourceRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&internalservice.UpdateResourceRequest{")
	s = append(s, "ResourceName: "+fmt.Sprintf("%#v", this.ResourceName)+",\n")
	s = append(s, "ResourceVersion: "+fmt.Sprintf("%#v", this.ResourceVersion)+",\n")
	s = append(s, "Resource: "+fmt.Sprintf("%#v", this.Resource)+",\n")
	s = append(s, "RequestId: "+fmt.Sprintf("%#v", this.RequestId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateResourceResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.UpdateResourceResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "Resource: "+fmt.Sprintf("%#v", this.Resource)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateNamespaceRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.CreateNamespaceRequest{")
	s = append(s, "Request: "+fmt.Sprintf("%#v", this.Request)+",\n")
	if this.PlacementOverrideCellId != nil {
		s = append(s, "PlacementOverrideCellId: "+fmt.Sprintf("%#v", this.PlacementOverrideCellId)+",\n")
	}
	if this.ForceOverwrite != nil {
		s = append(s, "ForceOverwrite: "+fmt.Sprintf("%#v", this.ForceOverwrite)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateNamespaceResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.CreateNamespaceResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateCellRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.CreateCellRequest{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Spec != nil {
		s = append(s, "Spec: "+fmt.Sprintf("%#v", this.Spec)+",\n")
	}
	s = append(s, "RequestId: "+fmt.Sprintf("%#v", this.RequestId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateCellResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.CreateCellResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteCellRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.DeleteCellRequest{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "ResourceVersion: "+fmt.Sprintf("%#v", this.ResourceVersion)+",\n")
	s = append(s, "RequestId: "+fmt.Sprintf("%#v", this.RequestId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteCellResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.DeleteCellResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateCellInDatabaseRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.CreateCellInDatabaseRequest{")
	s = append(s, "Resource: "+fmt.Sprintf("%#v", this.Resource)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateCellInDatabaseResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.CreateCellInDatabaseResponse{")
	s = append(s, "Resource: "+fmt.Sprintf("%#v", this.Resource)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *RollingUpdateTemporalCellsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 29)
	s = append(s, "&internalservice.RollingUpdateTemporalCellsRequest{")
	if this.CellFilter != nil {
		s = append(s, "CellFilter: "+fmt.Sprintf("%#v", this.CellFilter)+",\n")
	}
	s = append(s, "RolloutMode: "+fmt.Sprintf("%#v", this.RolloutMode)+",\n")
	if this.CustomRolloutConfig != nil {
		s = append(s, "CustomRolloutConfig: "+fmt.Sprintf("%#v", this.CustomRolloutConfig)+",\n")
	}
	s = append(s, "AllowAnyTime: "+fmt.Sprintf("%#v", this.AllowAnyTime)+",\n")
	s = append(s, "DynamicConfigPatch: "+fmt.Sprintf("%#v", this.DynamicConfigPatch)+",\n")
	s = append(s, "DynamicConfigRemove: "+fmt.Sprintf("%#v", this.DynamicConfigRemove)+",\n")
	s = append(s, "DynamicConfigRemoveWithValues: "+fmt.Sprintf("%#v", this.DynamicConfigRemoveWithValues)+",\n")
	s = append(s, "UpdateDynamicConfig: "+fmt.Sprintf("%#v", this.UpdateDynamicConfig)+",\n")
	s = append(s, "AdminToolsVersion: "+fmt.Sprintf("%#v", this.AdminToolsVersion)+",\n")
	s = append(s, "UpdateAstraSchema: "+fmt.Sprintf("%#v", this.UpdateAstraSchema)+",\n")
	s = append(s, "TemporalVersion: "+fmt.Sprintf("%#v", this.TemporalVersion)+",\n")
	s = append(s, "AgentVersion: "+fmt.Sprintf("%#v", this.AgentVersion)+",\n")
	s = append(s, "GoCanaryVersion: "+fmt.Sprintf("%#v", this.GoCanaryVersion)+",\n")
	s = append(s, "WebVersion: "+fmt.Sprintf("%#v", this.WebVersion)+",\n")
	s = append(s, "UpdateAlerts: "+fmt.Sprintf("%#v", this.UpdateAlerts)+",\n")
	s = append(s, "OpaVersion: "+fmt.Sprintf("%#v", this.OpaVersion)+",\n")
	s = append(s, "TemporalDeploymentsToUpdate: "+fmt.Sprintf("%#v", this.TemporalDeploymentsToUpdate)+",\n")
	s = append(s, "ForceSyncNamespaces: "+fmt.Sprintf("%#v", this.ForceSyncNamespaces)+",\n")
	s = append(s, "BypassCanaryCheck: "+fmt.Sprintf("%#v", this.BypassCanaryCheck)+",\n")
	s = append(s, "AdminToolsVersionV3: "+fmt.Sprintf("%#v", this.AdminToolsVersionV3)+",\n")
	s = append(s, "TemporalVersionV3: "+fmt.Sprintf("%#v", this.TemporalVersionV3)+",\n")
	s = append(s, "AgentVersionV3: "+fmt.Sprintf("%#v", this.AgentVersionV3)+",\n")
	s = append(s, "TemporalDeploymentsToRestart: "+fmt.Sprintf("%#v", this.TemporalDeploymentsToRestart)+",\n")
	s = append(s, "BypassRolloutExclusions: "+fmt.Sprintf("%#v", this.BypassRolloutExclusions)+",\n")
	s = append(s, "WebApiVersion: "+fmt.Sprintf("%#v", this.WebApiVersion)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *RollingUpdateTemporalCellsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.RollingUpdateTemporalCellsResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AllocateInitialFailoverVersionRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.AllocateInitialFailoverVersionRequest{")
	s = append(s, "CellId: "+fmt.Sprintf("%#v", this.CellId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AllocateInitialFailoverVersionResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.AllocateInitialFailoverVersionResponse{")
	s = append(s, "InitialFailoverVersion: "+fmt.Sprintf("%#v", this.InitialFailoverVersion)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetInitialFailoverVersionRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GetInitialFailoverVersionRequest{")
	s = append(s, "CellId: "+fmt.Sprintf("%#v", this.CellId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetInitialFailoverVersionResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GetInitialFailoverVersionResponse{")
	s = append(s, "InitialFailoverVersion: "+fmt.Sprintf("%#v", this.InitialFailoverVersion)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateInitialFailoverVersionRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.UpdateInitialFailoverVersionRequest{")
	s = append(s, "CellId: "+fmt.Sprintf("%#v", this.CellId)+",\n")
	s = append(s, "InitialFailoverVersion: "+fmt.Sprintf("%#v", this.InitialFailoverVersion)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpdateInitialFailoverVersionResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.UpdateInitialFailoverVersionResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteInitialFailoverVersionRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.DeleteInitialFailoverVersionRequest{")
	s = append(s, "CellId: "+fmt.Sprintf("%#v", this.CellId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteInitialFailoverVersionResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.DeleteInitialFailoverVersionResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *InviteUsersRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&internalservice.InviteUsersRequest{")
	s = append(s, "Auth0App: "+fmt.Sprintf("%#v", this.Auth0App)+",\n")
	s = append(s, "Emails: "+fmt.Sprintf("%#v", this.Emails)+",\n")
	s = append(s, "AccountActionGroup: "+fmt.Sprintf("%#v", this.AccountActionGroup)+",\n")
	s = append(s, "RootAccountId: "+fmt.Sprintf("%#v", this.RootAccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *InviteUsersResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.InviteUsersResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddRolesToUserRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.AddRolesToUserRequest{")
	s = append(s, "UserEmail: "+fmt.Sprintf("%#v", this.UserEmail)+",\n")
	s = append(s, "RoleNames: "+fmt.Sprintf("%#v", this.RoleNames)+",\n")
	s = append(s, "SyncRolesToPolicy: "+fmt.Sprintf("%#v", this.SyncRolesToPolicy)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddRolesToUserResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.AddRolesToUserResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteRolesFromUserRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.DeleteRolesFromUserRequest{")
	s = append(s, "UserEmail: "+fmt.Sprintf("%#v", this.UserEmail)+",\n")
	s = append(s, "RoleNames: "+fmt.Sprintf("%#v", this.RoleNames)+",\n")
	s = append(s, "SyncRolesToPolicy: "+fmt.Sprintf("%#v", this.SyncRolesToPolicy)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteRolesFromUserResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.DeleteRolesFromUserResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteUserRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.DeleteUserRequest{")
	s = append(s, "UserEmail: "+fmt.Sprintf("%#v", this.UserEmail)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteUserResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.DeleteUserResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SetInternalRolesForUserRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.SetInternalRolesForUserRequest{")
	s = append(s, "UserEmail: "+fmt.Sprintf("%#v", this.UserEmail)+",\n")
	s = append(s, "RoleNames: "+fmt.Sprintf("%#v", this.RoleNames)+",\n")
	s = append(s, "SyncRolesToPolicy: "+fmt.Sprintf("%#v", this.SyncRolesToPolicy)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SetInternalRolesForUserResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.SetInternalRolesForUserResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetAuthorizeResultFromOPARequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&internalservice.GetAuthorizeResultFromOPARequest{")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "Subject: "+fmt.Sprintf("%#v", this.Subject)+",\n")
	s = append(s, "Action: "+fmt.Sprintf("%#v", this.Action)+",\n")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetAuthorizeResultFromOPAResult) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GetAuthorizeResultFromOPAResult{")
	s = append(s, "Success: "+fmt.Sprintf("%#v", this.Success)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AssignAccountRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.AssignAccountRequest{")
	s = append(s, "CustomerName: "+fmt.Sprintf("%#v", this.CustomerName)+",\n")
	s = append(s, "SalesforceAccountId: "+fmt.Sprintf("%#v", this.SalesforceAccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AssignAccountResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.AssignAccountResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ExpandAccountPoolRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.ExpandAccountPoolRequest{")
	s = append(s, "ExpansionSize: "+fmt.Sprintf("%#v", this.ExpansionSize)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ExpandAccountPoolResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.ExpandAccountPoolResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *InitializeAccountRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&internalservice.InitializeAccountRequest{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "AccountWildcardCertificate: "+fmt.Sprintf("%#v", this.AccountWildcardCertificate)+",\n")
	s = append(s, "AwsExternalId: "+fmt.Sprintf("%#v", this.AwsExternalId)+",\n")
	s = append(s, "SalesforceAccountId: "+fmt.Sprintf("%#v", this.SalesforceAccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *InitializeAccountResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.InitializeAccountResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SyncPolicyConfigRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.SyncPolicyConfigRequest{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SyncPolicyConfigResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.SyncPolicyConfigResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *BackfillRolesRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&internalservice.BackfillRolesRequest{")
	s = append(s, "BackfillResourceRoles: "+fmt.Sprintf("%#v", this.BackfillResourceRoles)+",\n")
	s = append(s, "BackfillInternalRoles: "+fmt.Sprintf("%#v", this.BackfillInternalRoles)+",\n")
	s = append(s, "BackfillTemporalAdminsRole: "+fmt.Sprintf("%#v", this.BackfillTemporalAdminsRole)+",\n")
	s = append(s, "AccountsFilter: "+fmt.Sprintf("%#v", this.AccountsFilter)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *BackfillRolesResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.BackfillRolesResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *MigrateNamespaceRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&internalservice.MigrateNamespaceRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "TargetCell: "+fmt.Sprintf("%#v", this.TargetCell)+",\n")
	s = append(s, "SkipForceReplication: "+fmt.Sprintf("%#v", this.SkipForceReplication)+",\n")
	s = append(s, "SkipDisconnectingClusters: "+fmt.Sprintf("%#v", this.SkipDisconnectingClusters)+",\n")
	s = append(s, "SkipUpdatingReplicationConfig: "+fmt.Sprintf("%#v", this.SkipUpdatingReplicationConfig)+",\n")
	s = append(s, "WaitForSignalBeforeDisconnecting: "+fmt.Sprintf("%#v", this.WaitForSignalBeforeDisconnecting)+",\n")
	s = append(s, "ForceReplicationOverallRps: "+fmt.Sprintf("%#v", this.ForceReplicationOverallRps)+",\n")
	s = append(s, "ForceReplicationConcurrentActivityCount: "+fmt.Sprintf("%#v", this.ForceReplicationConcurrentActivityCount)+",\n")
	s = append(s, "HandoverAllowedLaggingSeconds: "+fmt.Sprintf("%#v", this.HandoverAllowedLaggingSeconds)+",\n")
	s = append(s, "HandoverAllowedLaggingTasks: "+fmt.Sprintf("%#v", this.HandoverAllowedLaggingTasks)+",\n")
	s = append(s, "UntrustedCertOk: "+fmt.Sprintf("%#v", this.UntrustedCertOk)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *MigrateNamespaceResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.MigrateNamespaceResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *MigrationInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.MigrationInfo{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "SkipForceReplication: "+fmt.Sprintf("%#v", this.SkipForceReplication)+",\n")
	s = append(s, "UntrustedCertOk: "+fmt.Sprintf("%#v", this.UntrustedCertOk)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *BatchMigrateNamespacesRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&internalservice.BatchMigrateNamespacesRequest{")
	s = append(s, "SourceCell: "+fmt.Sprintf("%#v", this.SourceCell)+",\n")
	s = append(s, "TargetCell: "+fmt.Sprintf("%#v", this.TargetCell)+",\n")
	if this.MigrationList != nil {
		s = append(s, "MigrationList: "+fmt.Sprintf("%#v", this.MigrationList)+",\n")
	}
	s = append(s, "ForceReplicationOverallRps: "+fmt.Sprintf("%#v", this.ForceReplicationOverallRps)+",\n")
	s = append(s, "ForceReplicationConcurrentActivityCount: "+fmt.Sprintf("%#v", this.ForceReplicationConcurrentActivityCount)+",\n")
	s = append(s, "HandoverAllowedLaggingSeconds: "+fmt.Sprintf("%#v", this.HandoverAllowedLaggingSeconds)+",\n")
	s = append(s, "HandoverAllowedLaggingTasks: "+fmt.Sprintf("%#v", this.HandoverAllowedLaggingTasks)+",\n")
	s = append(s, "HandoverTimeoutSeconds: "+fmt.Sprintf("%#v", this.HandoverTimeoutSeconds)+",\n")
	s = append(s, "Concurrency: "+fmt.Sprintf("%#v", this.Concurrency)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *BatchMigrateNamespacesResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.BatchMigrateNamespacesResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListRolesRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.ListRolesRequest{")
	s = append(s, "PageSize: "+fmt.Sprintf("%#v", this.PageSize)+",\n")
	s = append(s, "PageToken: "+fmt.Sprintf("%#v", this.PageToken)+",\n")
	s = append(s, "RootAccountId: "+fmt.Sprintf("%#v", this.RootAccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListRolesResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.ListRolesResponse{")
	s = append(s, "NextPageToken: "+fmt.Sprintf("%#v", this.NextPageToken)+",\n")
	s = append(s, "Roles: "+fmt.Sprintf("%#v", this.Roles)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpsertAccountRolesRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.UpsertAccountRolesRequest{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UpsertAccountRolesResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.UpsertAccountRolesResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PlannerDryRunRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.PlannerDryRunRequest{")
	s = append(s, "ResourceManagerConfig: "+fmt.Sprintf("%#v", this.ResourceManagerConfig)+",\n")
	s = append(s, "PlannerData: "+fmt.Sprintf("%#v", this.PlannerData)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PlannerDryRunResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.PlannerDryRunResponse{")
	s = append(s, "Proposals: "+fmt.Sprintf("%#v", this.Proposals)+",\n")
	s = append(s, "DebugInfo: "+fmt.Sprintf("%#v", this.DebugInfo)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListUsersRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.ListUsersRequest{")
	if this.Base != nil {
		s = append(s, "Base: "+fmt.Sprintf("%#v", this.Base)+",\n")
	}
	s = append(s, "RootAccountId: "+fmt.Sprintf("%#v", this.RootAccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProvisionAccountRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.ProvisionAccountRequest{")
	s = append(s, "CustomerName: "+fmt.Sprintf("%#v", this.CustomerName)+",\n")
	s = append(s, "AdminEmails: "+fmt.Sprintf("%#v", this.AdminEmails)+",\n")
	s = append(s, "SalesforceAccountId: "+fmt.Sprintf("%#v", this.SalesforceAccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProvisionAccountResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.ProvisionAccountResponse{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteAccountRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.DeleteAccountRequest{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteAccountResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.DeleteAccountResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetRequestStatusRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.GetRequestStatusRequest{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "RequestId: "+fmt.Sprintf("%#v", this.RequestId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetRequestStatusResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GetRequestStatusResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ValidateResourceManagerDataRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.ValidateResourceManagerDataRequest{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ValidateResourceManagerDataResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.ValidateResourceManagerDataResponse{")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSAMLConnectionRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&internalservice.CreateSAMLConnectionRequest{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "SignInUrl: "+fmt.Sprintf("%#v", this.SignInUrl)+",\n")
	s = append(s, "X509Certificate: "+fmt.Sprintf("%#v", this.X509Certificate)+",\n")
	s = append(s, "IdentityProviderDomains: "+fmt.Sprintf("%#v", this.IdentityProviderDomains)+",\n")
	s = append(s, "EnableIdpInitiatedSso: "+fmt.Sprintf("%#v", this.EnableIdpInitiatedSso)+",\n")
	s = append(s, "DisableSignRequest: "+fmt.Sprintf("%#v", this.DisableSignRequest)+",\n")
	keysForAttributeMappings := make([]string, 0, len(this.AttributeMappings))
	for k, _ := range this.AttributeMappings {
		keysForAttributeMappings = append(keysForAttributeMappings, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForAttributeMappings)
	mapStringForAttributeMappings := "map[string]string{"
	for _, k := range keysForAttributeMappings {
		mapStringForAttributeMappings += fmt.Sprintf("%#v: %#v,", k, this.AttributeMappings[k])
	}
	mapStringForAttributeMappings += "}"
	if this.AttributeMappings != nil {
		s = append(s, "AttributeMappings: "+mapStringForAttributeMappings+",\n")
	}
	s = append(s, "EnableSamlOrganization: "+fmt.Sprintf("%#v", this.EnableSamlOrganization)+",\n")
	s = append(s, "EnableSamlOnlyConnection: "+fmt.Sprintf("%#v", this.EnableSamlOnlyConnection)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateSAMLConnectionResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.CreateSAMLConnectionResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateInternalAPIKeyRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.CreateInternalAPIKeyRequest{")
	s = append(s, "RoleNames: "+fmt.Sprintf("%#v", this.RoleNames)+",\n")
	s = append(s, "SyncRolesToPolicy: "+fmt.Sprintf("%#v", this.SyncRolesToPolicy)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateInternalAPIKeyResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.CreateInternalAPIKeyResponse{")
	s = append(s, "KeyId: "+fmt.Sprintf("%#v", this.KeyId)+",\n")
	s = append(s, "SecretKey: "+fmt.Sprintf("%#v", this.SecretKey)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GrantEphemeralRoleRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&internalservice.GrantEphemeralRoleRequest{")
	s = append(s, "UserEmail: "+fmt.Sprintf("%#v", this.UserEmail)+",\n")
	s = append(s, "RoleId: "+fmt.Sprintf("%#v", this.RoleId)+",\n")
	if this.Ttl != nil {
		s = append(s, "Ttl: "+fmt.Sprintf("%#v", this.Ttl)+",\n")
	}
	s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	s = append(s, "RequestId: "+fmt.Sprintf("%#v", this.RequestId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GrantEphemeralRoleResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GrantEphemeralRoleResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GrantEphemeralReadRoleRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&internalservice.GrantEphemeralReadRoleRequest{")
	s = append(s, "UserEmail: "+fmt.Sprintf("%#v", this.UserEmail)+",\n")
	s = append(s, "ReadRoleId: "+fmt.Sprintf("%#v", this.ReadRoleId)+",\n")
	if this.Ttl != nil {
		s = append(s, "Ttl: "+fmt.Sprintf("%#v", this.Ttl)+",\n")
	}
	s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	s = append(s, "RequestId: "+fmt.Sprintf("%#v", this.RequestId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GrantEphemeralReadRoleResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.GrantEphemeralReadRoleResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddAstraCapacityRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.AddAstraCapacityRequest{")
	s = append(s, "CellId: "+fmt.Sprintf("%#v", this.CellId)+",\n")
	s = append(s, "CurrentCuCount: "+fmt.Sprintf("%#v", this.CurrentCuCount)+",\n")
	s = append(s, "TargetCuCount: "+fmt.Sprintf("%#v", this.TargetCuCount)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddAstraCapacityResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.AddAstraCapacityResponse{")
	s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateInternalRegionalNamespaceRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&internalservice.CreateInternalRegionalNamespaceRequest{")
	s = append(s, "Region: "+fmt.Sprintf("%#v", this.Region)+",\n")
	s = append(s, "Tag: "+fmt.Sprintf("%#v", this.Tag)+",\n")
	s = append(s, "PlacementOverrideCellId: "+fmt.Sprintf("%#v", this.PlacementOverrideCellId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateInternalRegionalNamespaceResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.CreateInternalRegionalNamespaceResponse{")
	if this.RequestStatus != nil {
		s = append(s, "RequestStatus: "+fmt.Sprintf("%#v", this.RequestStatus)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SyncTieredStorageLifecycleRulesRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&internalservice.SyncTieredStorageLifecycleRulesRequest{")
	s = append(s, "Region: "+fmt.Sprintf("%#v", this.Region)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SyncTieredStorageLifecycleRulesResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.SyncTieredStorageLifecycleRulesResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *EnableTieredStorageRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&internalservice.EnableTieredStorageRequest{")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "NamespaceName: "+fmt.Sprintf("%#v", this.NamespaceName)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *EnableTieredStorageResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&internalservice.EnableTieredStorageResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListAPIKeysRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&internalservice.ListAPIKeysRequest{")
	s = append(s, "OwnerId: "+fmt.Sprintf("%#v", this.OwnerId)+",\n")
	s = append(s, "OwnerType: "+fmt.Sprintf("%#v", this.OwnerType)+",\n")
	s = append(s, "AccountId: "+fmt.Sprintf("%#v", this.AccountId)+",\n")
	s = append(s, "PageSize: "+fmt.Sprintf("%#v", this.PageSize)+",\n")
	s = append(s, "PageToken: "+fmt.Sprintf("%#v", this.PageToken)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringRequestResponse(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ListResourcesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourcesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourcesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PageToken) > 0 {
		i -= len(m.PageToken)
		copy(dAtA[i:], m.PageToken)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.PageToken)))
		i--
		dAtA[i] = 0x12
	}
	if m.PageSize != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListResourcesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListResourcesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListResourcesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NextPageToken) > 0 {
		i -= len(m.NextPageToken)
		copy(dAtA[i:], m.NextPageToken)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.NextPageToken)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Resources) > 0 {
		for iNdEx := len(m.Resources) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Resources[iNdEx])
			copy(dAtA[i:], m.Resources[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Resources[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Resource) > 0 {
		i -= len(m.Resource)
		copy(dAtA[i:], m.Resource)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Resource)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Resource) > 0 {
		i -= len(m.Resource)
		copy(dAtA[i:], m.Resource)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Resource)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceVersion) > 0 {
		i -= len(m.ResourceVersion)
		copy(dAtA[i:], m.ResourceVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.ResourceVersion)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceName) > 0 {
		i -= len(m.ResourceName)
		copy(dAtA[i:], m.ResourceName)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.ResourceName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Resource) > 0 {
		i -= len(m.Resource)
		copy(dAtA[i:], m.Resource)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Resource)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateNamespaceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateNamespaceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateNamespaceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ForceOverwrite != nil {
		{
			size, err := m.ForceOverwrite.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.PlacementOverrideCellId != nil {
		{
			size, err := m.PlacementOverrideCellId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Request) > 0 {
		i -= len(m.Request)
		copy(dAtA[i:], m.Request)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Request)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateNamespaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateNamespaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateNamespaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateCellRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateCellRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateCellRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Spec != nil {
		{
			size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateCellResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateCellResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateCellResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteCellRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteCellRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteCellRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceVersion) > 0 {
		i -= len(m.ResourceVersion)
		copy(dAtA[i:], m.ResourceVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.ResourceVersion)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteCellResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteCellResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteCellResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateCellInDatabaseRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateCellInDatabaseRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateCellInDatabaseRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Resource) > 0 {
		i -= len(m.Resource)
		copy(dAtA[i:], m.Resource)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Resource)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateCellInDatabaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateCellInDatabaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateCellInDatabaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Resource) > 0 {
		i -= len(m.Resource)
		copy(dAtA[i:], m.Resource)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Resource)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RollingUpdateTemporalCellsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RollingUpdateTemporalCellsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RollingUpdateTemporalCellsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.WebApiVersion) > 0 {
		i -= len(m.WebApiVersion)
		copy(dAtA[i:], m.WebApiVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.WebApiVersion)))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xc2
	}
	if m.BypassRolloutExclusions {
		i--
		if m.BypassRolloutExclusions {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xb8
	}
	if len(m.DynamicConfigRemoveWithValues) > 0 {
		i -= len(m.DynamicConfigRemoveWithValues)
		copy(dAtA[i:], m.DynamicConfigRemoveWithValues)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.DynamicConfigRemoveWithValues)))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xb2
	}
	if len(m.DynamicConfigRemove) > 0 {
		i -= len(m.DynamicConfigRemove)
		copy(dAtA[i:], m.DynamicConfigRemove)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.DynamicConfigRemove)))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xaa
	}
	if len(m.TemporalDeploymentsToRestart) > 0 {
		for iNdEx := len(m.TemporalDeploymentsToRestart) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TemporalDeploymentsToRestart[iNdEx])
			copy(dAtA[i:], m.TemporalDeploymentsToRestart[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.TemporalDeploymentsToRestart[iNdEx])))
			i--
			dAtA[i] = 0x7
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.DynamicConfigPatch) > 0 {
		i -= len(m.DynamicConfigPatch)
		copy(dAtA[i:], m.DynamicConfigPatch)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.DynamicConfigPatch)))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x9a
	}
	if len(m.AgentVersionV3) > 0 {
		i -= len(m.AgentVersionV3)
		copy(dAtA[i:], m.AgentVersionV3)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AgentVersionV3)))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x92
	}
	if len(m.TemporalVersionV3) > 0 {
		i -= len(m.TemporalVersionV3)
		copy(dAtA[i:], m.TemporalVersionV3)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.TemporalVersionV3)))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x8a
	}
	if len(m.AdminToolsVersionV3) > 0 {
		i -= len(m.AdminToolsVersionV3)
		copy(dAtA[i:], m.AdminToolsVersionV3)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AdminToolsVersionV3)))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x82
	}
	if m.BypassCanaryCheck {
		i--
		if m.BypassCanaryCheck {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xf8
	}
	if m.ForceSyncNamespaces {
		i--
		if m.ForceSyncNamespaces {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xf0
	}
	if len(m.TemporalDeploymentsToUpdate) > 0 {
		for iNdEx := len(m.TemporalDeploymentsToUpdate) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TemporalDeploymentsToUpdate[iNdEx])
			copy(dAtA[i:], m.TemporalDeploymentsToUpdate[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.TemporalDeploymentsToUpdate[iNdEx])))
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xea
		}
	}
	if len(m.OpaVersion) > 0 {
		i -= len(m.OpaVersion)
		copy(dAtA[i:], m.OpaVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.OpaVersion)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xe2
	}
	if m.UpdateAlerts {
		i--
		if m.UpdateAlerts {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd8
	}
	if len(m.WebVersion) > 0 {
		i -= len(m.WebVersion)
		copy(dAtA[i:], m.WebVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.WebVersion)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd2
	}
	if len(m.GoCanaryVersion) > 0 {
		i -= len(m.GoCanaryVersion)
		copy(dAtA[i:], m.GoCanaryVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.GoCanaryVersion)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xca
	}
	if len(m.AgentVersion) > 0 {
		i -= len(m.AgentVersion)
		copy(dAtA[i:], m.AgentVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AgentVersion)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	if len(m.TemporalVersion) > 0 {
		i -= len(m.TemporalVersion)
		copy(dAtA[i:], m.TemporalVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.TemporalVersion)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	if m.UpdateAstraSchema {
		i--
		if m.UpdateAstraSchema {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb0
	}
	if len(m.AdminToolsVersion) > 0 {
		i -= len(m.AdminToolsVersion)
		copy(dAtA[i:], m.AdminToolsVersion)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AdminToolsVersion)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	if m.UpdateDynamicConfig {
		i--
		if m.UpdateDynamicConfig {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa0
	}
	if m.AllowAnyTime {
		i--
		if m.AllowAnyTime {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.CustomRolloutConfig != nil {
		{
			size, err := m.CustomRolloutConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.RolloutMode != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.RolloutMode))
		i--
		dAtA[i] = 0x10
	}
	if m.CellFilter != nil {
		{
			size, err := m.CellFilter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RollingUpdateTemporalCellsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RollingUpdateTemporalCellsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RollingUpdateTemporalCellsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AllocateInitialFailoverVersionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AllocateInitialFailoverVersionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AllocateInitialFailoverVersionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CellId) > 0 {
		i -= len(m.CellId)
		copy(dAtA[i:], m.CellId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.CellId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AllocateInitialFailoverVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AllocateInitialFailoverVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AllocateInitialFailoverVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InitialFailoverVersion != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.InitialFailoverVersion))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetInitialFailoverVersionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInitialFailoverVersionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInitialFailoverVersionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CellId) > 0 {
		i -= len(m.CellId)
		copy(dAtA[i:], m.CellId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.CellId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetInitialFailoverVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInitialFailoverVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInitialFailoverVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InitialFailoverVersion != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.InitialFailoverVersion))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpdateInitialFailoverVersionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateInitialFailoverVersionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateInitialFailoverVersionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InitialFailoverVersion != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.InitialFailoverVersion))
		i--
		dAtA[i] = 0x10
	}
	if len(m.CellId) > 0 {
		i -= len(m.CellId)
		copy(dAtA[i:], m.CellId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.CellId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateInitialFailoverVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateInitialFailoverVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateInitialFailoverVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *DeleteInitialFailoverVersionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteInitialFailoverVersionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteInitialFailoverVersionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CellId) > 0 {
		i -= len(m.CellId)
		copy(dAtA[i:], m.CellId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.CellId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteInitialFailoverVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteInitialFailoverVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteInitialFailoverVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *InviteUsersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InviteUsersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InviteUsersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RootAccountId) > 0 {
		i -= len(m.RootAccountId)
		copy(dAtA[i:], m.RootAccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RootAccountId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AccountActionGroup) > 0 {
		i -= len(m.AccountActionGroup)
		copy(dAtA[i:], m.AccountActionGroup)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountActionGroup)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Emails) > 0 {
		for iNdEx := len(m.Emails) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Emails[iNdEx])
			copy(dAtA[i:], m.Emails[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Emails[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Auth0App) > 0 {
		i -= len(m.Auth0App)
		copy(dAtA[i:], m.Auth0App)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Auth0App)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *InviteUsersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InviteUsersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InviteUsersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AddRolesToUserRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddRolesToUserRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddRolesToUserRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SyncRolesToPolicy {
		i--
		if m.SyncRolesToPolicy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.RoleNames) > 0 {
		for iNdEx := len(m.RoleNames) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RoleNames[iNdEx])
			copy(dAtA[i:], m.RoleNames[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RoleNames[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.UserEmail) > 0 {
		i -= len(m.UserEmail)
		copy(dAtA[i:], m.UserEmail)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.UserEmail)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AddRolesToUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddRolesToUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddRolesToUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteRolesFromUserRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteRolesFromUserRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteRolesFromUserRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SyncRolesToPolicy {
		i--
		if m.SyncRolesToPolicy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.RoleNames) > 0 {
		for iNdEx := len(m.RoleNames) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RoleNames[iNdEx])
			copy(dAtA[i:], m.RoleNames[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RoleNames[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.UserEmail) > 0 {
		i -= len(m.UserEmail)
		copy(dAtA[i:], m.UserEmail)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.UserEmail)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteRolesFromUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteRolesFromUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteRolesFromUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteUserRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteUserRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteUserRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UserEmail) > 0 {
		i -= len(m.UserEmail)
		copy(dAtA[i:], m.UserEmail)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.UserEmail)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *SetInternalRolesForUserRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetInternalRolesForUserRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetInternalRolesForUserRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SyncRolesToPolicy {
		i--
		if m.SyncRolesToPolicy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.RoleNames) > 0 {
		for iNdEx := len(m.RoleNames) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RoleNames[iNdEx])
			copy(dAtA[i:], m.RoleNames[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RoleNames[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.UserEmail) > 0 {
		i -= len(m.UserEmail)
		copy(dAtA[i:], m.UserEmail)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.UserEmail)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetInternalRolesForUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetInternalRolesForUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetInternalRolesForUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetAuthorizeResultFromOPARequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAuthorizeResultFromOPARequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAuthorizeResultFromOPARequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Action) > 0 {
		i -= len(m.Action)
		copy(dAtA[i:], m.Action)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Action)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Subject) > 0 {
		i -= len(m.Subject)
		copy(dAtA[i:], m.Subject)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Subject)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetAuthorizeResultFromOPAResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAuthorizeResultFromOPAResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAuthorizeResultFromOPAResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AssignAccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssignAccountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssignAccountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SalesforceAccountId) > 0 {
		i -= len(m.SalesforceAccountId)
		copy(dAtA[i:], m.SalesforceAccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.SalesforceAccountId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CustomerName) > 0 {
		i -= len(m.CustomerName)
		copy(dAtA[i:], m.CustomerName)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.CustomerName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AssignAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssignAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssignAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExpandAccountPoolRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExpandAccountPoolRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExpandAccountPoolRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ExpansionSize != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.ExpansionSize))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExpandAccountPoolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExpandAccountPoolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExpandAccountPoolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *InitializeAccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InitializeAccountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InitializeAccountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SalesforceAccountId) > 0 {
		i -= len(m.SalesforceAccountId)
		copy(dAtA[i:], m.SalesforceAccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.SalesforceAccountId)))
		i--
		dAtA[i] = 0x22
	}
	if m.AwsExternalId {
		i--
		if m.AwsExternalId {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.AccountWildcardCertificate {
		i--
		if m.AccountWildcardCertificate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *InitializeAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InitializeAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InitializeAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SyncPolicyConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncPolicyConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncPolicyConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *SyncPolicyConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncPolicyConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncPolicyConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *BackfillRolesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BackfillRolesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BackfillRolesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AccountsFilter) > 0 {
		for iNdEx := len(m.AccountsFilter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AccountsFilter[iNdEx])
			copy(dAtA[i:], m.AccountsFilter[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountsFilter[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.BackfillTemporalAdminsRole {
		i--
		if m.BackfillTemporalAdminsRole {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.BackfillInternalRoles {
		i--
		if m.BackfillInternalRoles {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.BackfillResourceRoles {
		i--
		if m.BackfillResourceRoles {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BackfillRolesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BackfillRolesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BackfillRolesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MigrateNamespaceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MigrateNamespaceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MigrateNamespaceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UntrustedCertOk {
		i--
		if m.UntrustedCertOk {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.HandoverAllowedLaggingTasks != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.HandoverAllowedLaggingTasks))
		i--
		dAtA[i] = 0x50
	}
	if m.HandoverAllowedLaggingSeconds != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.HandoverAllowedLaggingSeconds))
		i--
		dAtA[i] = 0x48
	}
	if m.ForceReplicationConcurrentActivityCount != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.ForceReplicationConcurrentActivityCount))
		i--
		dAtA[i] = 0x40
	}
	if m.ForceReplicationOverallRps != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.ForceReplicationOverallRps))))
		i--
		dAtA[i] = 0x39
	}
	if m.WaitForSignalBeforeDisconnecting {
		i--
		if m.WaitForSignalBeforeDisconnecting {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.SkipUpdatingReplicationConfig {
		i--
		if m.SkipUpdatingReplicationConfig {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.SkipDisconnectingClusters {
		i--
		if m.SkipDisconnectingClusters {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.SkipForceReplication {
		i--
		if m.SkipForceReplication {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.TargetCell) > 0 {
		i -= len(m.TargetCell)
		copy(dAtA[i:], m.TargetCell)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.TargetCell)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MigrateNamespaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MigrateNamespaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MigrateNamespaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MigrationInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MigrationInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MigrationInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UntrustedCertOk {
		i--
		if m.UntrustedCertOk {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.SkipForceReplication {
		i--
		if m.SkipForceReplication {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BatchMigrateNamespacesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BatchMigrateNamespacesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BatchMigrateNamespacesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Concurrency != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.Concurrency))
		i--
		dAtA[i] = 0x48
	}
	if m.HandoverTimeoutSeconds != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.HandoverTimeoutSeconds))
		i--
		dAtA[i] = 0x40
	}
	if m.HandoverAllowedLaggingTasks != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.HandoverAllowedLaggingTasks))
		i--
		dAtA[i] = 0x38
	}
	if m.HandoverAllowedLaggingSeconds != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.HandoverAllowedLaggingSeconds))
		i--
		dAtA[i] = 0x30
	}
	if m.ForceReplicationConcurrentActivityCount != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.ForceReplicationConcurrentActivityCount))
		i--
		dAtA[i] = 0x28
	}
	if m.ForceReplicationOverallRps != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.ForceReplicationOverallRps))))
		i--
		dAtA[i] = 0x21
	}
	if len(m.MigrationList) > 0 {
		for iNdEx := len(m.MigrationList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MigrationList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRequestResponse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.TargetCell) > 0 {
		i -= len(m.TargetCell)
		copy(dAtA[i:], m.TargetCell)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.TargetCell)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SourceCell) > 0 {
		i -= len(m.SourceCell)
		copy(dAtA[i:], m.SourceCell)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.SourceCell)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BatchMigrateNamespacesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BatchMigrateNamespacesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BatchMigrateNamespacesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListRolesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListRolesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListRolesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RootAccountId) > 0 {
		i -= len(m.RootAccountId)
		copy(dAtA[i:], m.RootAccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RootAccountId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PageToken) > 0 {
		i -= len(m.PageToken)
		copy(dAtA[i:], m.PageToken)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.PageToken)))
		i--
		dAtA[i] = 0x12
	}
	if m.PageSize != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListRolesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListRolesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListRolesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Roles) > 0 {
		for iNdEx := len(m.Roles) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Roles[iNdEx])
			copy(dAtA[i:], m.Roles[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Roles[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.NextPageToken) > 0 {
		i -= len(m.NextPageToken)
		copy(dAtA[i:], m.NextPageToken)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.NextPageToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpsertAccountRolesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpsertAccountRolesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpsertAccountRolesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpsertAccountRolesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpsertAccountRolesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpsertAccountRolesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PlannerDryRunRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlannerDryRunRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlannerDryRunRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlannerData) > 0 {
		i -= len(m.PlannerData)
		copy(dAtA[i:], m.PlannerData)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.PlannerData)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceManagerConfig) > 0 {
		i -= len(m.ResourceManagerConfig)
		copy(dAtA[i:], m.ResourceManagerConfig)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.ResourceManagerConfig)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PlannerDryRunResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlannerDryRunResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlannerDryRunResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DebugInfo) > 0 {
		i -= len(m.DebugInfo)
		copy(dAtA[i:], m.DebugInfo)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.DebugInfo)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Proposals) > 0 {
		for iNdEx := len(m.Proposals) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Proposals[iNdEx])
			copy(dAtA[i:], m.Proposals[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Proposals[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListUsersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUsersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUsersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RootAccountId) > 0 {
		i -= len(m.RootAccountId)
		copy(dAtA[i:], m.RootAccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RootAccountId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProvisionAccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProvisionAccountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProvisionAccountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SalesforceAccountId) > 0 {
		i -= len(m.SalesforceAccountId)
		copy(dAtA[i:], m.SalesforceAccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.SalesforceAccountId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AdminEmails) > 0 {
		for iNdEx := len(m.AdminEmails) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AdminEmails[iNdEx])
			copy(dAtA[i:], m.AdminEmails[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AdminEmails[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.CustomerName) > 0 {
		i -= len(m.CustomerName)
		copy(dAtA[i:], m.CustomerName)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.CustomerName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProvisionAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProvisionAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProvisionAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteAccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteAccountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteAccountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetRequestStatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRequestStatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetRequestStatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetRequestStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRequestStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetRequestStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ValidateResourceManagerDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateResourceManagerDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ValidateResourceManagerDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ValidateResourceManagerDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateResourceManagerDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ValidateResourceManagerDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateSAMLConnectionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSAMLConnectionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSAMLConnectionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EnableSamlOnlyConnection {
		i--
		if m.EnableSamlOnlyConnection {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.EnableSamlOrganization {
		i--
		if m.EnableSamlOrganization {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.AttributeMappings) > 0 {
		for k := range m.AttributeMappings {
			v := m.AttributeMappings[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintRequestResponse(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.DisableSignRequest {
		i--
		if m.DisableSignRequest {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.EnableIdpInitiatedSso {
		i--
		if m.EnableIdpInitiatedSso {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.IdentityProviderDomains) > 0 {
		for iNdEx := len(m.IdentityProviderDomains) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IdentityProviderDomains[iNdEx])
			copy(dAtA[i:], m.IdentityProviderDomains[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.IdentityProviderDomains[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.X509Certificate) > 0 {
		i -= len(m.X509Certificate)
		copy(dAtA[i:], m.X509Certificate)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.X509Certificate)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SignInUrl) > 0 {
		i -= len(m.SignInUrl)
		copy(dAtA[i:], m.SignInUrl)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.SignInUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateSAMLConnectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateSAMLConnectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateSAMLConnectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateInternalAPIKeyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateInternalAPIKeyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateInternalAPIKeyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SyncRolesToPolicy {
		i--
		if m.SyncRolesToPolicy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.RoleNames) > 0 {
		for iNdEx := len(m.RoleNames) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RoleNames[iNdEx])
			copy(dAtA[i:], m.RoleNames[iNdEx])
			i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RoleNames[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CreateInternalAPIKeyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateInternalAPIKeyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateInternalAPIKeyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SecretKey) > 0 {
		i -= len(m.SecretKey)
		copy(dAtA[i:], m.SecretKey)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.SecretKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.KeyId) > 0 {
		i -= len(m.KeyId)
		copy(dAtA[i:], m.KeyId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.KeyId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GrantEphemeralRoleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantEphemeralRoleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantEphemeralRoleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x22
	}
	if m.Ttl != nil {
		{
			size, err := m.Ttl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UserEmail) > 0 {
		i -= len(m.UserEmail)
		copy(dAtA[i:], m.UserEmail)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.UserEmail)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GrantEphemeralRoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantEphemeralRoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantEphemeralRoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GrantEphemeralReadRoleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantEphemeralReadRoleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantEphemeralReadRoleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x22
	}
	if m.Ttl != nil {
		{
			size, err := m.Ttl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ReadRoleId) > 0 {
		i -= len(m.ReadRoleId)
		copy(dAtA[i:], m.ReadRoleId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.ReadRoleId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UserEmail) > 0 {
		i -= len(m.UserEmail)
		copy(dAtA[i:], m.UserEmail)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.UserEmail)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GrantEphemeralReadRoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantEphemeralReadRoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantEphemeralReadRoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AddAstraCapacityRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddAstraCapacityRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddAstraCapacityRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TargetCuCount != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.TargetCuCount))
		i--
		dAtA[i] = 0x18
	}
	if m.CurrentCuCount != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.CurrentCuCount))
		i--
		dAtA[i] = 0x10
	}
	if len(m.CellId) > 0 {
		i -= len(m.CellId)
		copy(dAtA[i:], m.CellId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.CellId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AddAstraCapacityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddAstraCapacityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddAstraCapacityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequestStatus) > 0 {
		i -= len(m.RequestStatus)
		copy(dAtA[i:], m.RequestStatus)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.RequestStatus)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateInternalRegionalNamespaceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateInternalRegionalNamespaceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateInternalRegionalNamespaceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlacementOverrideCellId) > 0 {
		i -= len(m.PlacementOverrideCellId)
		copy(dAtA[i:], m.PlacementOverrideCellId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.PlacementOverrideCellId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Tag) > 0 {
		i -= len(m.Tag)
		copy(dAtA[i:], m.Tag)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Tag)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Region) > 0 {
		i -= len(m.Region)
		copy(dAtA[i:], m.Region)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Region)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateInternalRegionalNamespaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateInternalRegionalNamespaceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateInternalRegionalNamespaceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestStatus != nil {
		{
			size, err := m.RequestStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequestResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SyncTieredStorageLifecycleRulesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncTieredStorageLifecycleRulesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncTieredStorageLifecycleRulesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Region) > 0 {
		i -= len(m.Region)
		copy(dAtA[i:], m.Region)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.Region)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SyncTieredStorageLifecycleRulesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncTieredStorageLifecycleRulesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncTieredStorageLifecycleRulesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *EnableTieredStorageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnableTieredStorageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EnableTieredStorageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NamespaceName) > 0 {
		i -= len(m.NamespaceName)
		copy(dAtA[i:], m.NamespaceName)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.NamespaceName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EnableTieredStorageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnableTieredStorageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EnableTieredStorageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ListAPIKeysRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListAPIKeysRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListAPIKeysRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PageToken) > 0 {
		i -= len(m.PageToken)
		copy(dAtA[i:], m.PageToken)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.PageToken)))
		i--
		dAtA[i] = 0x2a
	}
	if m.PageSize != 0 {
		i = encodeVarintRequestResponse(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x20
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OwnerType) > 0 {
		i -= len(m.OwnerType)
		copy(dAtA[i:], m.OwnerType)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.OwnerType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OwnerId) > 0 {
		i -= len(m.OwnerId)
		copy(dAtA[i:], m.OwnerId)
		i = encodeVarintRequestResponse(dAtA, i, uint64(len(m.OwnerId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRequestResponse(dAtA []byte, offset int, v uint64) int {
	offset -= sovRequestResponse(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ListResourcesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageSize != 0 {
		n += 1 + sovRequestResponse(uint64(m.PageSize))
	}
	l = len(m.PageToken)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ListResourcesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Resources) > 0 {
		for _, b := range m.Resources {
			l = len(b)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	l = len(m.NextPageToken)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GetResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GetResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Resource)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *UpdateResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceName)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.ResourceVersion)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Resource)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *UpdateResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Resource)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateNamespaceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Request)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.PlacementOverrideCellId != nil {
		l = m.PlacementOverrideCellId.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.ForceOverwrite != nil {
		l = m.ForceOverwrite.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateNamespaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateCellRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.Spec != nil {
		l = m.Spec.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateCellResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteCellRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.ResourceVersion)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteCellResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateCellInDatabaseRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Resource)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateCellInDatabaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Resource)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *RollingUpdateTemporalCellsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CellFilter != nil {
		l = m.CellFilter.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.RolloutMode != 0 {
		n += 1 + sovRequestResponse(uint64(m.RolloutMode))
	}
	if m.CustomRolloutConfig != nil {
		l = m.CustomRolloutConfig.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.AllowAnyTime {
		n += 2
	}
	if m.UpdateDynamicConfig {
		n += 3
	}
	l = len(m.AdminToolsVersion)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	if m.UpdateAstraSchema {
		n += 3
	}
	l = len(m.TemporalVersion)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.AgentVersion)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.GoCanaryVersion)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.WebVersion)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	if m.UpdateAlerts {
		n += 3
	}
	l = len(m.OpaVersion)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	if len(m.TemporalDeploymentsToUpdate) > 0 {
		for _, s := range m.TemporalDeploymentsToUpdate {
			l = len(s)
			n += 2 + l + sovRequestResponse(uint64(l))
		}
	}
	if m.ForceSyncNamespaces {
		n += 3
	}
	if m.BypassCanaryCheck {
		n += 3
	}
	l = len(m.AdminToolsVersionV3)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.TemporalVersionV3)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.AgentVersionV3)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.DynamicConfigPatch)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	if len(m.TemporalDeploymentsToRestart) > 0 {
		for _, s := range m.TemporalDeploymentsToRestart {
			l = len(s)
			n += 2 + l + sovRequestResponse(uint64(l))
		}
	}
	l = len(m.DynamicConfigRemove)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.DynamicConfigRemoveWithValues)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	if m.BypassRolloutExclusions {
		n += 3
	}
	l = len(m.WebApiVersion)
	if l > 0 {
		n += 2 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *RollingUpdateTemporalCellsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *AllocateInitialFailoverVersionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CellId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *AllocateInitialFailoverVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InitialFailoverVersion != 0 {
		n += 1 + sovRequestResponse(uint64(m.InitialFailoverVersion))
	}
	return n
}

func (m *GetInitialFailoverVersionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CellId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GetInitialFailoverVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InitialFailoverVersion != 0 {
		n += 1 + sovRequestResponse(uint64(m.InitialFailoverVersion))
	}
	return n
}

func (m *UpdateInitialFailoverVersionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CellId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.InitialFailoverVersion != 0 {
		n += 1 + sovRequestResponse(uint64(m.InitialFailoverVersion))
	}
	return n
}

func (m *UpdateInitialFailoverVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *DeleteInitialFailoverVersionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CellId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteInitialFailoverVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *InviteUsersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Auth0App)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.Emails) > 0 {
		for _, s := range m.Emails {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	l = len(m.AccountActionGroup)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RootAccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *InviteUsersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *AddRolesToUserRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserEmail)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.RoleNames) > 0 {
		for _, s := range m.RoleNames {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	if m.SyncRolesToPolicy {
		n += 2
	}
	return n
}

func (m *AddRolesToUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteRolesFromUserRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserEmail)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.RoleNames) > 0 {
		for _, s := range m.RoleNames {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	if m.SyncRolesToPolicy {
		n += 2
	}
	return n
}

func (m *DeleteRolesFromUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteUserRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserEmail)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SetInternalRolesForUserRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserEmail)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.RoleNames) > 0 {
		for _, s := range m.RoleNames {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	if m.SyncRolesToPolicy {
		n += 2
	}
	return n
}

func (m *SetInternalRolesForUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GetAuthorizeResultFromOPARequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Subject)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Action)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GetAuthorizeResultFromOPAResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Success {
		n += 2
	}
	return n
}

func (m *AssignAccountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CustomerName)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.SalesforceAccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *AssignAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ExpandAccountPoolRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExpansionSize != 0 {
		n += 1 + sovRequestResponse(uint64(m.ExpansionSize))
	}
	return n
}

func (m *ExpandAccountPoolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *InitializeAccountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.AccountWildcardCertificate {
		n += 2
	}
	if m.AwsExternalId {
		n += 2
	}
	l = len(m.SalesforceAccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *InitializeAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *SyncPolicyConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SyncPolicyConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *BackfillRolesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BackfillResourceRoles {
		n += 2
	}
	if m.BackfillInternalRoles {
		n += 2
	}
	if m.BackfillTemporalAdminsRole {
		n += 2
	}
	if len(m.AccountsFilter) > 0 {
		for _, s := range m.AccountsFilter {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	return n
}

func (m *BackfillRolesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MigrateNamespaceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.TargetCell)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.SkipForceReplication {
		n += 2
	}
	if m.SkipDisconnectingClusters {
		n += 2
	}
	if m.SkipUpdatingReplicationConfig {
		n += 2
	}
	if m.WaitForSignalBeforeDisconnecting {
		n += 2
	}
	if m.ForceReplicationOverallRps != 0 {
		n += 9
	}
	if m.ForceReplicationConcurrentActivityCount != 0 {
		n += 1 + sovRequestResponse(uint64(m.ForceReplicationConcurrentActivityCount))
	}
	if m.HandoverAllowedLaggingSeconds != 0 {
		n += 1 + sovRequestResponse(uint64(m.HandoverAllowedLaggingSeconds))
	}
	if m.HandoverAllowedLaggingTasks != 0 {
		n += 1 + sovRequestResponse(uint64(m.HandoverAllowedLaggingTasks))
	}
	if m.UntrustedCertOk {
		n += 2
	}
	return n
}

func (m *MigrateNamespaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *MigrationInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.SkipForceReplication {
		n += 2
	}
	if m.UntrustedCertOk {
		n += 2
	}
	return n
}

func (m *BatchMigrateNamespacesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SourceCell)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.TargetCell)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.MigrationList) > 0 {
		for _, e := range m.MigrationList {
			l = e.Size()
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	if m.ForceReplicationOverallRps != 0 {
		n += 9
	}
	if m.ForceReplicationConcurrentActivityCount != 0 {
		n += 1 + sovRequestResponse(uint64(m.ForceReplicationConcurrentActivityCount))
	}
	if m.HandoverAllowedLaggingSeconds != 0 {
		n += 1 + sovRequestResponse(uint64(m.HandoverAllowedLaggingSeconds))
	}
	if m.HandoverAllowedLaggingTasks != 0 {
		n += 1 + sovRequestResponse(uint64(m.HandoverAllowedLaggingTasks))
	}
	if m.HandoverTimeoutSeconds != 0 {
		n += 1 + sovRequestResponse(uint64(m.HandoverTimeoutSeconds))
	}
	if m.Concurrency != 0 {
		n += 1 + sovRequestResponse(uint64(m.Concurrency))
	}
	return n
}

func (m *BatchMigrateNamespacesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ListRolesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageSize != 0 {
		n += 1 + sovRequestResponse(uint64(m.PageSize))
	}
	l = len(m.PageToken)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RootAccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ListRolesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NextPageToken)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.Roles) > 0 {
		for _, s := range m.Roles {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	return n
}

func (m *UpsertAccountRolesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *UpsertAccountRolesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PlannerDryRunRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceManagerConfig)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.PlannerData)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *PlannerDryRunResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Proposals) > 0 {
		for _, s := range m.Proposals {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	l = len(m.DebugInfo)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ListUsersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RootAccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ProvisionAccountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CustomerName)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.AdminEmails) > 0 {
		for _, s := range m.AdminEmails {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	l = len(m.SalesforceAccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ProvisionAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteAccountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *DeleteAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GetRequestStatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GetRequestStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *ValidateResourceManagerDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ValidateResourceManagerDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateSAMLConnectionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.SignInUrl)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.X509Certificate)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if len(m.IdentityProviderDomains) > 0 {
		for _, s := range m.IdentityProviderDomains {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	if m.EnableIdpInitiatedSso {
		n += 2
	}
	if m.DisableSignRequest {
		n += 2
	}
	if len(m.AttributeMappings) > 0 {
		for k, v := range m.AttributeMappings {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovRequestResponse(uint64(len(k))) + 1 + len(v) + sovRequestResponse(uint64(len(v)))
			n += mapEntrySize + 1 + sovRequestResponse(uint64(mapEntrySize))
		}
	}
	if m.EnableSamlOrganization {
		n += 2
	}
	if m.EnableSamlOnlyConnection {
		n += 2
	}
	return n
}

func (m *CreateSAMLConnectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateInternalAPIKeyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RoleNames) > 0 {
		for _, s := range m.RoleNames {
			l = len(s)
			n += 1 + l + sovRequestResponse(uint64(l))
		}
	}
	if m.SyncRolesToPolicy {
		n += 2
	}
	return n
}

func (m *CreateInternalAPIKeyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.KeyId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.SecretKey)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GrantEphemeralRoleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserEmail)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.Ttl != nil {
		l = m.Ttl.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GrantEphemeralRoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GrantEphemeralReadRoleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserEmail)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.ReadRoleId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.Ttl != nil {
		l = m.Ttl.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *GrantEphemeralReadRoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *AddAstraCapacityRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CellId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.CurrentCuCount != 0 {
		n += 1 + sovRequestResponse(uint64(m.CurrentCuCount))
	}
	if m.TargetCuCount != 0 {
		n += 1 + sovRequestResponse(uint64(m.TargetCuCount))
	}
	return n
}

func (m *AddAstraCapacityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RequestStatus)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateInternalRegionalNamespaceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Region)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.Tag)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.PlacementOverrideCellId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *CreateInternalRegionalNamespaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestStatus != nil {
		l = m.RequestStatus.Size()
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *SyncTieredStorageLifecycleRulesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Region)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *SyncTieredStorageLifecycleRulesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *EnableTieredStorageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.NamespaceName)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func (m *EnableTieredStorageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ListAPIKeysRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OwnerId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.OwnerType)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	if m.PageSize != 0 {
		n += 1 + sovRequestResponse(uint64(m.PageSize))
	}
	l = len(m.PageToken)
	if l > 0 {
		n += 1 + l + sovRequestResponse(uint64(l))
	}
	return n
}

func sovRequestResponse(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRequestResponse(x uint64) (n int) {
	return sovRequestResponse(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *ListResourcesRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListResourcesRequest{`,
		`PageSize:` + fmt.Sprintf("%v", this.PageSize) + `,`,
		`PageToken:` + fmt.Sprintf("%v", this.PageToken) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListResourcesResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListResourcesResponse{`,
		`Resources:` + fmt.Sprintf("%v", this.Resources) + `,`,
		`NextPageToken:` + fmt.Sprintf("%v", this.NextPageToken) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetResourceRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetResourceRequest{`,
		`ResourceId:` + fmt.Sprintf("%v", this.ResourceId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetResourceResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetResourceResponse{`,
		`Resource:` + fmt.Sprintf("%v", this.Resource) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateResourceRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateResourceRequest{`,
		`ResourceName:` + fmt.Sprintf("%v", this.ResourceName) + `,`,
		`ResourceVersion:` + fmt.Sprintf("%v", this.ResourceVersion) + `,`,
		`Resource:` + fmt.Sprintf("%v", this.Resource) + `,`,
		`RequestId:` + fmt.Sprintf("%v", this.RequestId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateResourceResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateResourceResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`Resource:` + fmt.Sprintf("%v", this.Resource) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateNamespaceRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateNamespaceRequest{`,
		`Request:` + fmt.Sprintf("%v", this.Request) + `,`,
		`PlacementOverrideCellId:` + strings.Replace(fmt.Sprintf("%v", this.PlacementOverrideCellId), "StringValue", "types.StringValue", 1) + `,`,
		`ForceOverwrite:` + strings.Replace(fmt.Sprintf("%v", this.ForceOverwrite), "BoolValue", "types.BoolValue", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateNamespaceResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateNamespaceResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateCellRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateCellRequest{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Spec:` + strings.Replace(fmt.Sprintf("%v", this.Spec), "CellSpec", "v1.CellSpec", 1) + `,`,
		`RequestId:` + fmt.Sprintf("%v", this.RequestId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateCellResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateCellResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteCellRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteCellRequest{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`ResourceVersion:` + fmt.Sprintf("%v", this.ResourceVersion) + `,`,
		`RequestId:` + fmt.Sprintf("%v", this.RequestId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteCellResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteCellResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateCellInDatabaseRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateCellInDatabaseRequest{`,
		`Resource:` + fmt.Sprintf("%v", this.Resource) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateCellInDatabaseResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateCellInDatabaseResponse{`,
		`Resource:` + fmt.Sprintf("%v", this.Resource) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RollingUpdateTemporalCellsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RollingUpdateTemporalCellsRequest{`,
		`CellFilter:` + strings.Replace(fmt.Sprintf("%v", this.CellFilter), "CellFilter", "v12.CellFilter", 1) + `,`,
		`RolloutMode:` + fmt.Sprintf("%v", this.RolloutMode) + `,`,
		`CustomRolloutConfig:` + strings.Replace(fmt.Sprintf("%v", this.CustomRolloutConfig), "RolloutConfig", "v12.RolloutConfig", 1) + `,`,
		`AllowAnyTime:` + fmt.Sprintf("%v", this.AllowAnyTime) + `,`,
		`UpdateDynamicConfig:` + fmt.Sprintf("%v", this.UpdateDynamicConfig) + `,`,
		`AdminToolsVersion:` + fmt.Sprintf("%v", this.AdminToolsVersion) + `,`,
		`UpdateAstraSchema:` + fmt.Sprintf("%v", this.UpdateAstraSchema) + `,`,
		`TemporalVersion:` + fmt.Sprintf("%v", this.TemporalVersion) + `,`,
		`AgentVersion:` + fmt.Sprintf("%v", this.AgentVersion) + `,`,
		`GoCanaryVersion:` + fmt.Sprintf("%v", this.GoCanaryVersion) + `,`,
		`WebVersion:` + fmt.Sprintf("%v", this.WebVersion) + `,`,
		`UpdateAlerts:` + fmt.Sprintf("%v", this.UpdateAlerts) + `,`,
		`OpaVersion:` + fmt.Sprintf("%v", this.OpaVersion) + `,`,
		`TemporalDeploymentsToUpdate:` + fmt.Sprintf("%v", this.TemporalDeploymentsToUpdate) + `,`,
		`ForceSyncNamespaces:` + fmt.Sprintf("%v", this.ForceSyncNamespaces) + `,`,
		`BypassCanaryCheck:` + fmt.Sprintf("%v", this.BypassCanaryCheck) + `,`,
		`AdminToolsVersionV3:` + fmt.Sprintf("%v", this.AdminToolsVersionV3) + `,`,
		`TemporalVersionV3:` + fmt.Sprintf("%v", this.TemporalVersionV3) + `,`,
		`AgentVersionV3:` + fmt.Sprintf("%v", this.AgentVersionV3) + `,`,
		`DynamicConfigPatch:` + fmt.Sprintf("%v", this.DynamicConfigPatch) + `,`,
		`TemporalDeploymentsToRestart:` + fmt.Sprintf("%v", this.TemporalDeploymentsToRestart) + `,`,
		`DynamicConfigRemove:` + fmt.Sprintf("%v", this.DynamicConfigRemove) + `,`,
		`DynamicConfigRemoveWithValues:` + fmt.Sprintf("%v", this.DynamicConfigRemoveWithValues) + `,`,
		`BypassRolloutExclusions:` + fmt.Sprintf("%v", this.BypassRolloutExclusions) + `,`,
		`WebApiVersion:` + fmt.Sprintf("%v", this.WebApiVersion) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RollingUpdateTemporalCellsResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RollingUpdateTemporalCellsResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AllocateInitialFailoverVersionRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AllocateInitialFailoverVersionRequest{`,
		`CellId:` + fmt.Sprintf("%v", this.CellId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AllocateInitialFailoverVersionResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AllocateInitialFailoverVersionResponse{`,
		`InitialFailoverVersion:` + fmt.Sprintf("%v", this.InitialFailoverVersion) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetInitialFailoverVersionRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetInitialFailoverVersionRequest{`,
		`CellId:` + fmt.Sprintf("%v", this.CellId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetInitialFailoverVersionResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetInitialFailoverVersionResponse{`,
		`InitialFailoverVersion:` + fmt.Sprintf("%v", this.InitialFailoverVersion) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateInitialFailoverVersionRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateInitialFailoverVersionRequest{`,
		`CellId:` + fmt.Sprintf("%v", this.CellId) + `,`,
		`InitialFailoverVersion:` + fmt.Sprintf("%v", this.InitialFailoverVersion) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpdateInitialFailoverVersionResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateInitialFailoverVersionResponse{`,
		`}`,
	}, "")
	return s
}
func (this *DeleteInitialFailoverVersionRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteInitialFailoverVersionRequest{`,
		`CellId:` + fmt.Sprintf("%v", this.CellId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteInitialFailoverVersionResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteInitialFailoverVersionResponse{`,
		`}`,
	}, "")
	return s
}
func (this *InviteUsersRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&InviteUsersRequest{`,
		`Auth0App:` + fmt.Sprintf("%v", this.Auth0App) + `,`,
		`Emails:` + fmt.Sprintf("%v", this.Emails) + `,`,
		`AccountActionGroup:` + fmt.Sprintf("%v", this.AccountActionGroup) + `,`,
		`RootAccountId:` + fmt.Sprintf("%v", this.RootAccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *InviteUsersResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&InviteUsersResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddRolesToUserRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddRolesToUserRequest{`,
		`UserEmail:` + fmt.Sprintf("%v", this.UserEmail) + `,`,
		`RoleNames:` + fmt.Sprintf("%v", this.RoleNames) + `,`,
		`SyncRolesToPolicy:` + fmt.Sprintf("%v", this.SyncRolesToPolicy) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddRolesToUserResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddRolesToUserResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteRolesFromUserRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteRolesFromUserRequest{`,
		`UserEmail:` + fmt.Sprintf("%v", this.UserEmail) + `,`,
		`RoleNames:` + fmt.Sprintf("%v", this.RoleNames) + `,`,
		`SyncRolesToPolicy:` + fmt.Sprintf("%v", this.SyncRolesToPolicy) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteRolesFromUserResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteRolesFromUserResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteUserRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteUserRequest{`,
		`UserEmail:` + fmt.Sprintf("%v", this.UserEmail) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteUserResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteUserResponse{`,
		`}`,
	}, "")
	return s
}
func (this *SetInternalRolesForUserRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SetInternalRolesForUserRequest{`,
		`UserEmail:` + fmt.Sprintf("%v", this.UserEmail) + `,`,
		`RoleNames:` + fmt.Sprintf("%v", this.RoleNames) + `,`,
		`SyncRolesToPolicy:` + fmt.Sprintf("%v", this.SyncRolesToPolicy) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SetInternalRolesForUserResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SetInternalRolesForUserResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetAuthorizeResultFromOPARequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetAuthorizeResultFromOPARequest{`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`Subject:` + fmt.Sprintf("%v", this.Subject) + `,`,
		`Action:` + fmt.Sprintf("%v", this.Action) + `,`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetAuthorizeResultFromOPAResult) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetAuthorizeResultFromOPAResult{`,
		`Success:` + fmt.Sprintf("%v", this.Success) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AssignAccountRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AssignAccountRequest{`,
		`CustomerName:` + fmt.Sprintf("%v", this.CustomerName) + `,`,
		`SalesforceAccountId:` + fmt.Sprintf("%v", this.SalesforceAccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AssignAccountResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AssignAccountResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ExpandAccountPoolRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ExpandAccountPoolRequest{`,
		`ExpansionSize:` + fmt.Sprintf("%v", this.ExpansionSize) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ExpandAccountPoolResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ExpandAccountPoolResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *InitializeAccountRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&InitializeAccountRequest{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`AccountWildcardCertificate:` + fmt.Sprintf("%v", this.AccountWildcardCertificate) + `,`,
		`AwsExternalId:` + fmt.Sprintf("%v", this.AwsExternalId) + `,`,
		`SalesforceAccountId:` + fmt.Sprintf("%v", this.SalesforceAccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *InitializeAccountResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&InitializeAccountResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SyncPolicyConfigRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SyncPolicyConfigRequest{`,
		`}`,
	}, "")
	return s
}
func (this *SyncPolicyConfigResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SyncPolicyConfigResponse{`,
		`}`,
	}, "")
	return s
}
func (this *BackfillRolesRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BackfillRolesRequest{`,
		`BackfillResourceRoles:` + fmt.Sprintf("%v", this.BackfillResourceRoles) + `,`,
		`BackfillInternalRoles:` + fmt.Sprintf("%v", this.BackfillInternalRoles) + `,`,
		`BackfillTemporalAdminsRole:` + fmt.Sprintf("%v", this.BackfillTemporalAdminsRole) + `,`,
		`AccountsFilter:` + fmt.Sprintf("%v", this.AccountsFilter) + `,`,
		`}`,
	}, "")
	return s
}
func (this *BackfillRolesResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BackfillRolesResponse{`,
		`}`,
	}, "")
	return s
}
func (this *MigrateNamespaceRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MigrateNamespaceRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`TargetCell:` + fmt.Sprintf("%v", this.TargetCell) + `,`,
		`SkipForceReplication:` + fmt.Sprintf("%v", this.SkipForceReplication) + `,`,
		`SkipDisconnectingClusters:` + fmt.Sprintf("%v", this.SkipDisconnectingClusters) + `,`,
		`SkipUpdatingReplicationConfig:` + fmt.Sprintf("%v", this.SkipUpdatingReplicationConfig) + `,`,
		`WaitForSignalBeforeDisconnecting:` + fmt.Sprintf("%v", this.WaitForSignalBeforeDisconnecting) + `,`,
		`ForceReplicationOverallRps:` + fmt.Sprintf("%v", this.ForceReplicationOverallRps) + `,`,
		`ForceReplicationConcurrentActivityCount:` + fmt.Sprintf("%v", this.ForceReplicationConcurrentActivityCount) + `,`,
		`HandoverAllowedLaggingSeconds:` + fmt.Sprintf("%v", this.HandoverAllowedLaggingSeconds) + `,`,
		`HandoverAllowedLaggingTasks:` + fmt.Sprintf("%v", this.HandoverAllowedLaggingTasks) + `,`,
		`UntrustedCertOk:` + fmt.Sprintf("%v", this.UntrustedCertOk) + `,`,
		`}`,
	}, "")
	return s
}
func (this *MigrateNamespaceResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MigrateNamespaceResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *MigrationInfo) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MigrationInfo{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`SkipForceReplication:` + fmt.Sprintf("%v", this.SkipForceReplication) + `,`,
		`UntrustedCertOk:` + fmt.Sprintf("%v", this.UntrustedCertOk) + `,`,
		`}`,
	}, "")
	return s
}
func (this *BatchMigrateNamespacesRequest) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForMigrationList := "[]*MigrationInfo{"
	for _, f := range this.MigrationList {
		repeatedStringForMigrationList += strings.Replace(f.String(), "MigrationInfo", "MigrationInfo", 1) + ","
	}
	repeatedStringForMigrationList += "}"
	s := strings.Join([]string{`&BatchMigrateNamespacesRequest{`,
		`SourceCell:` + fmt.Sprintf("%v", this.SourceCell) + `,`,
		`TargetCell:` + fmt.Sprintf("%v", this.TargetCell) + `,`,
		`MigrationList:` + repeatedStringForMigrationList + `,`,
		`ForceReplicationOverallRps:` + fmt.Sprintf("%v", this.ForceReplicationOverallRps) + `,`,
		`ForceReplicationConcurrentActivityCount:` + fmt.Sprintf("%v", this.ForceReplicationConcurrentActivityCount) + `,`,
		`HandoverAllowedLaggingSeconds:` + fmt.Sprintf("%v", this.HandoverAllowedLaggingSeconds) + `,`,
		`HandoverAllowedLaggingTasks:` + fmt.Sprintf("%v", this.HandoverAllowedLaggingTasks) + `,`,
		`HandoverTimeoutSeconds:` + fmt.Sprintf("%v", this.HandoverTimeoutSeconds) + `,`,
		`Concurrency:` + fmt.Sprintf("%v", this.Concurrency) + `,`,
		`}`,
	}, "")
	return s
}
func (this *BatchMigrateNamespacesResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BatchMigrateNamespacesResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListRolesRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListRolesRequest{`,
		`PageSize:` + fmt.Sprintf("%v", this.PageSize) + `,`,
		`PageToken:` + fmt.Sprintf("%v", this.PageToken) + `,`,
		`RootAccountId:` + fmt.Sprintf("%v", this.RootAccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListRolesResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListRolesResponse{`,
		`NextPageToken:` + fmt.Sprintf("%v", this.NextPageToken) + `,`,
		`Roles:` + fmt.Sprintf("%v", this.Roles) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpsertAccountRolesRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpsertAccountRolesRequest{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *UpsertAccountRolesResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpsertAccountRolesResponse{`,
		`}`,
	}, "")
	return s
}
func (this *PlannerDryRunRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PlannerDryRunRequest{`,
		`ResourceManagerConfig:` + fmt.Sprintf("%v", this.ResourceManagerConfig) + `,`,
		`PlannerData:` + fmt.Sprintf("%v", this.PlannerData) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PlannerDryRunResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PlannerDryRunResponse{`,
		`Proposals:` + fmt.Sprintf("%v", this.Proposals) + `,`,
		`DebugInfo:` + fmt.Sprintf("%v", this.DebugInfo) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListUsersRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListUsersRequest{`,
		`Base:` + strings.Replace(this.Base.String(), "ListResourcesRequest", "ListResourcesRequest", 1) + `,`,
		`RootAccountId:` + fmt.Sprintf("%v", this.RootAccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ProvisionAccountRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ProvisionAccountRequest{`,
		`CustomerName:` + fmt.Sprintf("%v", this.CustomerName) + `,`,
		`AdminEmails:` + fmt.Sprintf("%v", this.AdminEmails) + `,`,
		`SalesforceAccountId:` + fmt.Sprintf("%v", this.SalesforceAccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ProvisionAccountResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ProvisionAccountResponse{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteAccountRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteAccountRequest{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteAccountResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteAccountResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetRequestStatusRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetRequestStatusRequest{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`RequestId:` + fmt.Sprintf("%v", this.RequestId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetRequestStatusResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetRequestStatusResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ValidateResourceManagerDataRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ValidateResourceManagerDataRequest{`,
		`}`,
	}, "")
	return s
}
func (this *ValidateResourceManagerDataResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ValidateResourceManagerDataResponse{`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSAMLConnectionRequest) String() string {
	if this == nil {
		return "nil"
	}
	keysForAttributeMappings := make([]string, 0, len(this.AttributeMappings))
	for k, _ := range this.AttributeMappings {
		keysForAttributeMappings = append(keysForAttributeMappings, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForAttributeMappings)
	mapStringForAttributeMappings := "map[string]string{"
	for _, k := range keysForAttributeMappings {
		mapStringForAttributeMappings += fmt.Sprintf("%v: %v,", k, this.AttributeMappings[k])
	}
	mapStringForAttributeMappings += "}"
	s := strings.Join([]string{`&CreateSAMLConnectionRequest{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`SignInUrl:` + fmt.Sprintf("%v", this.SignInUrl) + `,`,
		`X509Certificate:` + fmt.Sprintf("%v", this.X509Certificate) + `,`,
		`IdentityProviderDomains:` + fmt.Sprintf("%v", this.IdentityProviderDomains) + `,`,
		`EnableIdpInitiatedSso:` + fmt.Sprintf("%v", this.EnableIdpInitiatedSso) + `,`,
		`DisableSignRequest:` + fmt.Sprintf("%v", this.DisableSignRequest) + `,`,
		`AttributeMappings:` + mapStringForAttributeMappings + `,`,
		`EnableSamlOrganization:` + fmt.Sprintf("%v", this.EnableSamlOrganization) + `,`,
		`EnableSamlOnlyConnection:` + fmt.Sprintf("%v", this.EnableSamlOnlyConnection) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateSAMLConnectionResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateSAMLConnectionResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateInternalAPIKeyRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateInternalAPIKeyRequest{`,
		`RoleNames:` + fmt.Sprintf("%v", this.RoleNames) + `,`,
		`SyncRolesToPolicy:` + fmt.Sprintf("%v", this.SyncRolesToPolicy) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateInternalAPIKeyResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateInternalAPIKeyResponse{`,
		`KeyId:` + fmt.Sprintf("%v", this.KeyId) + `,`,
		`SecretKey:` + fmt.Sprintf("%v", this.SecretKey) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GrantEphemeralRoleRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GrantEphemeralRoleRequest{`,
		`UserEmail:` + fmt.Sprintf("%v", this.UserEmail) + `,`,
		`RoleId:` + fmt.Sprintf("%v", this.RoleId) + `,`,
		`Ttl:` + strings.Replace(fmt.Sprintf("%v", this.Ttl), "Duration", "types.Duration", 1) + `,`,
		`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
		`RequestId:` + fmt.Sprintf("%v", this.RequestId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GrantEphemeralRoleResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GrantEphemeralRoleResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GrantEphemeralReadRoleRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GrantEphemeralReadRoleRequest{`,
		`UserEmail:` + fmt.Sprintf("%v", this.UserEmail) + `,`,
		`ReadRoleId:` + fmt.Sprintf("%v", this.ReadRoleId) + `,`,
		`Ttl:` + strings.Replace(fmt.Sprintf("%v", this.Ttl), "Duration", "types.Duration", 1) + `,`,
		`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
		`RequestId:` + fmt.Sprintf("%v", this.RequestId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GrantEphemeralReadRoleResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GrantEphemeralReadRoleResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddAstraCapacityRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddAstraCapacityRequest{`,
		`CellId:` + fmt.Sprintf("%v", this.CellId) + `,`,
		`CurrentCuCount:` + fmt.Sprintf("%v", this.CurrentCuCount) + `,`,
		`TargetCuCount:` + fmt.Sprintf("%v", this.TargetCuCount) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddAstraCapacityResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddAstraCapacityResponse{`,
		`RequestStatus:` + fmt.Sprintf("%v", this.RequestStatus) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateInternalRegionalNamespaceRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateInternalRegionalNamespaceRequest{`,
		`Region:` + fmt.Sprintf("%v", this.Region) + `,`,
		`Tag:` + fmt.Sprintf("%v", this.Tag) + `,`,
		`PlacementOverrideCellId:` + fmt.Sprintf("%v", this.PlacementOverrideCellId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateInternalRegionalNamespaceResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateInternalRegionalNamespaceResponse{`,
		`RequestStatus:` + strings.Replace(fmt.Sprintf("%v", this.RequestStatus), "RequestStatus", "v11.RequestStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SyncTieredStorageLifecycleRulesRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SyncTieredStorageLifecycleRulesRequest{`,
		`Region:` + fmt.Sprintf("%v", this.Region) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SyncTieredStorageLifecycleRulesResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SyncTieredStorageLifecycleRulesResponse{`,
		`}`,
	}, "")
	return s
}
func (this *EnableTieredStorageRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EnableTieredStorageRequest{`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`NamespaceName:` + fmt.Sprintf("%v", this.NamespaceName) + `,`,
		`}`,
	}, "")
	return s
}
func (this *EnableTieredStorageResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EnableTieredStorageResponse{`,
		`}`,
	}, "")
	return s
}
func (this *ListAPIKeysRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListAPIKeysRequest{`,
		`OwnerId:` + fmt.Sprintf("%v", this.OwnerId) + `,`,
		`OwnerType:` + fmt.Sprintf("%v", this.OwnerType) + `,`,
		`AccountId:` + fmt.Sprintf("%v", this.AccountId) + `,`,
		`PageSize:` + fmt.Sprintf("%v", this.PageSize) + `,`,
		`PageToken:` + fmt.Sprintf("%v", this.PageToken) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringRequestResponse(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *ListResourcesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourcesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourcesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PageToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListResourcesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListResourcesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListResourcesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resources = append(m.Resources, make([]byte, postIndex-iNdEx))
			copy(m.Resources[len(m.Resources)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextPageToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextPageToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resource = append(m.Resource[:0], dAtA[iNdEx:postIndex]...)
			if m.Resource == nil {
				m.Resource = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resource = append(m.Resource[:0], dAtA[iNdEx:postIndex]...)
			if m.Resource == nil {
				m.Resource = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resource = append(m.Resource[:0], dAtA[iNdEx:postIndex]...)
			if m.Resource == nil {
				m.Resource = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateNamespaceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateNamespaceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateNamespaceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Request", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Request = append(m.Request[:0], dAtA[iNdEx:postIndex]...)
			if m.Request == nil {
				m.Request = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlacementOverrideCellId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlacementOverrideCellId == nil {
				m.PlacementOverrideCellId = &types.StringValue{}
			}
			if err := m.PlacementOverrideCellId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceOverwrite", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ForceOverwrite == nil {
				m.ForceOverwrite = &types.BoolValue{}
			}
			if err := m.ForceOverwrite.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateNamespaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateNamespaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateNamespaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateCellRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateCellRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateCellRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Spec == nil {
				m.Spec = &v1.CellSpec{}
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateCellResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateCellResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateCellResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteCellRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteCellRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteCellRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteCellResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteCellResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteCellResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateCellInDatabaseRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateCellInDatabaseRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateCellInDatabaseRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resource = append(m.Resource[:0], dAtA[iNdEx:postIndex]...)
			if m.Resource == nil {
				m.Resource = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateCellInDatabaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateCellInDatabaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateCellInDatabaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resource = append(m.Resource[:0], dAtA[iNdEx:postIndex]...)
			if m.Resource == nil {
				m.Resource = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RollingUpdateTemporalCellsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RollingUpdateTemporalCellsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RollingUpdateTemporalCellsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CellFilter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CellFilter == nil {
				m.CellFilter = &v12.CellFilter{}
			}
			if err := m.CellFilter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RolloutMode", wireType)
			}
			m.RolloutMode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RolloutMode |= RollingUpdateTemporalCellsRequest_RolloutMode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomRolloutConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CustomRolloutConfig == nil {
				m.CustomRolloutConfig = &v12.RolloutConfig{}
			}
			if err := m.CustomRolloutConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowAnyTime", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowAnyTime = bool(v != 0)
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateDynamicConfig", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UpdateDynamicConfig = bool(v != 0)
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminToolsVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminToolsVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 102:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAstraSchema", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UpdateAstraSchema = bool(v != 0)
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemporalVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemporalVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoCanaryVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoCanaryVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 107:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAlerts", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UpdateAlerts = bool(v != 0)
		case 108:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpaVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpaVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 109:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemporalDeploymentsToUpdate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemporalDeploymentsToUpdate = append(m.TemporalDeploymentsToUpdate, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 110:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceSyncNamespaces", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForceSyncNamespaces = bool(v != 0)
		case 111:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BypassCanaryCheck", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BypassCanaryCheck = bool(v != 0)
		case 112:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminToolsVersionV3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminToolsVersionV3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 113:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemporalVersionV3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemporalVersionV3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 114:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentVersionV3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentVersionV3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 115:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicConfigPatch", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicConfigPatch = append(m.DynamicConfigPatch[:0], dAtA[iNdEx:postIndex]...)
			if m.DynamicConfigPatch == nil {
				m.DynamicConfigPatch = []byte{}
			}
			iNdEx = postIndex
		case 116:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemporalDeploymentsToRestart", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TemporalDeploymentsToRestart = append(m.TemporalDeploymentsToRestart, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 117:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicConfigRemove", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicConfigRemove = append(m.DynamicConfigRemove[:0], dAtA[iNdEx:postIndex]...)
			if m.DynamicConfigRemove == nil {
				m.DynamicConfigRemove = []byte{}
			}
			iNdEx = postIndex
		case 118:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicConfigRemoveWithValues", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicConfigRemoveWithValues = append(m.DynamicConfigRemoveWithValues[:0], dAtA[iNdEx:postIndex]...)
			if m.DynamicConfigRemoveWithValues == nil {
				m.DynamicConfigRemoveWithValues = []byte{}
			}
			iNdEx = postIndex
		case 119:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BypassRolloutExclusions", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BypassRolloutExclusions = bool(v != 0)
		case 120:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebApiVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebApiVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RollingUpdateTemporalCellsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RollingUpdateTemporalCellsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RollingUpdateTemporalCellsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AllocateInitialFailoverVersionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AllocateInitialFailoverVersionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AllocateInitialFailoverVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CellId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CellId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AllocateInitialFailoverVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AllocateInitialFailoverVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AllocateInitialFailoverVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialFailoverVersion", wireType)
			}
			m.InitialFailoverVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InitialFailoverVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInitialFailoverVersionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInitialFailoverVersionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInitialFailoverVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CellId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CellId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInitialFailoverVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInitialFailoverVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInitialFailoverVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialFailoverVersion", wireType)
			}
			m.InitialFailoverVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InitialFailoverVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateInitialFailoverVersionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateInitialFailoverVersionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateInitialFailoverVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CellId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CellId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialFailoverVersion", wireType)
			}
			m.InitialFailoverVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InitialFailoverVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateInitialFailoverVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateInitialFailoverVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateInitialFailoverVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteInitialFailoverVersionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteInitialFailoverVersionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteInitialFailoverVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CellId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CellId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteInitialFailoverVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteInitialFailoverVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteInitialFailoverVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InviteUsersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InviteUsersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InviteUsersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auth0App", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Auth0App = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emails", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emails = append(m.Emails, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountActionGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountActionGroup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InviteUsersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InviteUsersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InviteUsersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddRolesToUserRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddRolesToUserRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddRolesToUserRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleNames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleNames = append(m.RoleNames, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncRolesToPolicy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SyncRolesToPolicy = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddRolesToUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddRolesToUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddRolesToUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteRolesFromUserRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteRolesFromUserRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteRolesFromUserRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleNames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleNames = append(m.RoleNames, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncRolesToPolicy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SyncRolesToPolicy = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteRolesFromUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteRolesFromUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteRolesFromUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteUserRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteUserRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteUserRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetInternalRolesForUserRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetInternalRolesForUserRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetInternalRolesForUserRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleNames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleNames = append(m.RoleNames, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncRolesToPolicy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SyncRolesToPolicy = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetInternalRolesForUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetInternalRolesForUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetInternalRolesForUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAuthorizeResultFromOPARequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAuthorizeResultFromOPARequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAuthorizeResultFromOPARequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Action = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAuthorizeResultFromOPAResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAuthorizeResultFromOPAResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAuthorizeResultFromOPAResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AssignAccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssignAccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssignAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomerName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SalesforceAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SalesforceAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AssignAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssignAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssignAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExpandAccountPoolRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExpandAccountPoolRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExpandAccountPoolRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpansionSize", wireType)
			}
			m.ExpansionSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpansionSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExpandAccountPoolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExpandAccountPoolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExpandAccountPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InitializeAccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InitializeAccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InitializeAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountWildcardCertificate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AccountWildcardCertificate = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AwsExternalId", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AwsExternalId = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SalesforceAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SalesforceAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InitializeAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InitializeAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InitializeAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncPolicyConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncPolicyConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncPolicyConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncPolicyConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncPolicyConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncPolicyConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BackfillRolesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BackfillRolesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BackfillRolesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackfillResourceRoles", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BackfillResourceRoles = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackfillInternalRoles", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BackfillInternalRoles = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackfillTemporalAdminsRole", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BackfillTemporalAdminsRole = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountsFilter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountsFilter = append(m.AccountsFilter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BackfillRolesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BackfillRolesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BackfillRolesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MigrateNamespaceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MigrateNamespaceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MigrateNamespaceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetCell", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetCell = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipForceReplication", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SkipForceReplication = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipDisconnectingClusters", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SkipDisconnectingClusters = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipUpdatingReplicationConfig", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SkipUpdatingReplicationConfig = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WaitForSignalBeforeDisconnecting", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WaitForSignalBeforeDisconnecting = bool(v != 0)
		case 7:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceReplicationOverallRps", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.ForceReplicationOverallRps = float64(math.Float64frombits(v))
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceReplicationConcurrentActivityCount", wireType)
			}
			m.ForceReplicationConcurrentActivityCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ForceReplicationConcurrentActivityCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HandoverAllowedLaggingSeconds", wireType)
			}
			m.HandoverAllowedLaggingSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HandoverAllowedLaggingSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HandoverAllowedLaggingTasks", wireType)
			}
			m.HandoverAllowedLaggingTasks = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HandoverAllowedLaggingTasks |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UntrustedCertOk", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UntrustedCertOk = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MigrateNamespaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MigrateNamespaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MigrateNamespaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MigrationInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MigrationInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MigrationInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipForceReplication", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SkipForceReplication = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UntrustedCertOk", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UntrustedCertOk = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BatchMigrateNamespacesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BatchMigrateNamespacesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BatchMigrateNamespacesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceCell", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceCell = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetCell", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetCell = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MigrationList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MigrationList = append(m.MigrationList, &MigrationInfo{})
			if err := m.MigrationList[len(m.MigrationList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceReplicationOverallRps", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.ForceReplicationOverallRps = float64(math.Float64frombits(v))
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceReplicationConcurrentActivityCount", wireType)
			}
			m.ForceReplicationConcurrentActivityCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ForceReplicationConcurrentActivityCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HandoverAllowedLaggingSeconds", wireType)
			}
			m.HandoverAllowedLaggingSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HandoverAllowedLaggingSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HandoverAllowedLaggingTasks", wireType)
			}
			m.HandoverAllowedLaggingTasks = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HandoverAllowedLaggingTasks |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HandoverTimeoutSeconds", wireType)
			}
			m.HandoverTimeoutSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HandoverTimeoutSeconds |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Concurrency", wireType)
			}
			m.Concurrency = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Concurrency |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BatchMigrateNamespacesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BatchMigrateNamespacesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BatchMigrateNamespacesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListRolesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListRolesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListRolesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PageToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListRolesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListRolesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListRolesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextPageToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextPageToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = append(m.Roles, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpsertAccountRolesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpsertAccountRolesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpsertAccountRolesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpsertAccountRolesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpsertAccountRolesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpsertAccountRolesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlannerDryRunRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlannerDryRunRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlannerDryRunRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceManagerConfig", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceManagerConfig = append(m.ResourceManagerConfig[:0], dAtA[iNdEx:postIndex]...)
			if m.ResourceManagerConfig == nil {
				m.ResourceManagerConfig = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlannerData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlannerData = append(m.PlannerData[:0], dAtA[iNdEx:postIndex]...)
			if m.PlannerData == nil {
				m.PlannerData = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlannerDryRunResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlannerDryRunResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlannerDryRunResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposals", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proposals = append(m.Proposals, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DebugInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DebugInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUsersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUsersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUsersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &ListResourcesRequest{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProvisionAccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProvisionAccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProvisionAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomerName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminEmails", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminEmails = append(m.AdminEmails, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SalesforceAccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SalesforceAccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProvisionAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProvisionAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProvisionAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteAccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteAccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRequestStatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRequestStatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRequestStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRequestStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRequestStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRequestStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateResourceManagerDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateResourceManagerDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateResourceManagerDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateResourceManagerDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateResourceManagerDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateResourceManagerDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSAMLConnectionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSAMLConnectionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSAMLConnectionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignInUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SignInUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field X509Certificate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.X509Certificate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityProviderDomains", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityProviderDomains = append(m.IdentityProviderDomains, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableIdpInitiatedSso", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableIdpInitiatedSso = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableSignRequest", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisableSignRequest = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttributeMappings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AttributeMappings == nil {
				m.AttributeMappings = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRequestResponse
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRequestResponse
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthRequestResponse
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthRequestResponse
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRequestResponse
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthRequestResponse
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthRequestResponse
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipRequestResponse(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthRequestResponse
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.AttributeMappings[mapkey] = mapvalue
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSamlOrganization", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSamlOrganization = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSamlOnlyConnection", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSamlOnlyConnection = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateSAMLConnectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateSAMLConnectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateSAMLConnectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateInternalAPIKeyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateInternalAPIKeyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateInternalAPIKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleNames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleNames = append(m.RoleNames, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncRolesToPolicy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SyncRolesToPolicy = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateInternalAPIKeyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateInternalAPIKeyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateInternalAPIKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KeyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecretKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecretKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantEphemeralRoleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantEphemeralRoleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantEphemeralRoleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ttl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ttl == nil {
				m.Ttl = &types.Duration{}
			}
			if err := m.Ttl.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantEphemeralRoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantEphemeralRoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantEphemeralRoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantEphemeralReadRoleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantEphemeralReadRoleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantEphemeralReadRoleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadRoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReadRoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ttl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ttl == nil {
				m.Ttl = &types.Duration{}
			}
			if err := m.Ttl.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantEphemeralReadRoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantEphemeralReadRoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantEphemeralReadRoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddAstraCapacityRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddAstraCapacityRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddAstraCapacityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CellId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CellId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentCuCount", wireType)
			}
			m.CurrentCuCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentCuCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetCuCount", wireType)
			}
			m.TargetCuCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TargetCuCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddAstraCapacityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddAstraCapacityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddAstraCapacityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestStatus = append(m.RequestStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestStatus == nil {
				m.RequestStatus = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateInternalRegionalNamespaceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateInternalRegionalNamespaceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateInternalRegionalNamespaceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlacementOverrideCellId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlacementOverrideCellId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateInternalRegionalNamespaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateInternalRegionalNamespaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateInternalRegionalNamespaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestStatus == nil {
				m.RequestStatus = &v11.RequestStatus{}
			}
			if err := m.RequestStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncTieredStorageLifecycleRulesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncTieredStorageLifecycleRulesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncTieredStorageLifecycleRulesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncTieredStorageLifecycleRulesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncTieredStorageLifecycleRulesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncTieredStorageLifecycleRulesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnableTieredStorageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnableTieredStorageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnableTieredStorageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamespaceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NamespaceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnableTieredStorageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnableTieredStorageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnableTieredStorageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListAPIKeysRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListAPIKeysRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListAPIKeysRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequestResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PageToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequestResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRequestResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRequestResponse(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRequestResponse
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequestResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRequestResponse
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRequestResponse
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRequestResponse
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRequestResponse        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRequestResponse          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRequestResponse = fmt.Errorf("proto: unexpected end of group")
)
